input WebhookCreateInput {
  name: String
  targetUrl: String
  events: [WebhookEventTypeEnum]
  app: ID
  isActive: Boolean
  secretKey: String
}

enum WebhookEventTypeEnum {
  ANY_EVENTS
  ORDER_CREATED
  ORDER_CONFIRMED
  ORDER_FULLY_PAID
  ORDER_UPDATED
  ORDER_CANCELLED
  ORDER_FULFILLED
  INVOICE_REQUESTED
  INVOICE_DELETED
  INVOICE_SENT
  CUSTOMER_CREATED
  CUSTOMER_UPDATED
  PRODUCT_CREATED
  PRODUCT_UPDATED
  PRODUCT_DELETED
  PRODUCT_VARIANT_CREATED
  PRODUCT_VARIANT_UPDATED
  PRODUCT_VARIANT_DELETED
  CHECKOUT_CREATED
  CHECKOUT_UPDATED
  FULFILLMENT_CREATED
  NOTIFY_USER
  PAGE_CREATED
  PAGE_UPDATED
  PAGE_DELETED
  PAYMENT_AUTHORIZE
  PAYMENT_CAPTURE
  PAYMENT_CONFIRM
  PAYMENT_LIST_GATEWAYS
  PAYMENT_PROCESS
  PAYMENT_REFUND
  PAYMENT_VOID
}

type WebhookCreate {
  errors: [WebhookError!]!
  webhook: Webhook
}

type WebhookDelete {
  errors: [WebhookError!]!
  webhook: Webhook
}

type WebhookUpdate {
  errors: [WebhookError!]!
  webhook: Webhook
}

type WebhookError {
  field: String
  message: String
  code: WebhookErrorCode!
}

enum WebhookErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
}

enum WebhookSampleEventTypeEnum {
  ORDER_CREATED
  ORDER_CONFIRMED
  ORDER_FULLY_PAID
  ORDER_UPDATED
  ORDER_CANCELLED
  ORDER_FULFILLED
  INVOICE_REQUESTED
  INVOICE_DELETED
  INVOICE_SENT
  CUSTOMER_CREATED
  CUSTOMER_UPDATED
  PRODUCT_CREATED
  PRODUCT_UPDATED
  PRODUCT_DELETED
  PRODUCT_VARIANT_CREATED
  PRODUCT_VARIANT_UPDATED
  PRODUCT_VARIANT_DELETED
  CHECKOUT_CREATED
  CHECKOUT_UPDATED
  FULFILLMENT_CREATED
  NOTIFY_USER
  PAGE_CREATED
  PAGE_UPDATED
  PAGE_DELETED
  PAYMENT_AUTHORIZE
  PAYMENT_CAPTURE
  PAYMENT_CONFIRM
  PAYMENT_LIST_GATEWAYS
  PAYMENT_PROCESS
  PAYMENT_REFUND
  PAYMENT_VOID
}

input WebhookUpdateInput {
  name: String
  targetUrl: String
  events: [WebhookEventTypeEnum]
  app: ID
  isActive: Boolean
  secretKey: String
}

type Webhook implements Node {
  name: String!
  targetUrl: String!
  isActive: Boolean!
  secretKey: String
  id: ID!
  events: [WebhookEvent!]!
  app: App!
}

type WebhookEvent {
  eventType: WebhookEventTypeEnum!
  name: String!
}

extend type Query {
  webhook(id: ID!): Webhook
  webhookEvents: [WebhookEvent]
  webhookSamplePayload(eventType: WebhookSampleEventTypeEnum!): JSONString
}

extend type Mutation {
  webhookCreate(input: WebhookCreateInput!): WebhookCreate
  webhookDelete(id: ID!): WebhookDelete
  webhookUpdate(id: ID!, input: WebhookUpdateInput!): WebhookUpdate
}
