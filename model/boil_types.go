// Code generated by SQLBoiler 4.15.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package model

import (
	"bytes"
	"database/sql/driver"
	"encoding/json"
	"strconv"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/null/v8"
	"github.com/volatiletech/null/v8/convert"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("model: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

type Countrycode string

// Enum values for Countrycode
const (
	CountrycodeID Countrycode = "ID"
	CountrycodeAX Countrycode = "AX"
	CountrycodeAL Countrycode = "AL"
	CountrycodeAF Countrycode = "AF"
	CountrycodeDZ Countrycode = "DZ"
	CountrycodeAS Countrycode = "AS"
	CountrycodeAD Countrycode = "AD"
	CountrycodeAO Countrycode = "AO"
	CountrycodeAI Countrycode = "AI"
	CountrycodeAQ Countrycode = "AQ"
	CountrycodeAG Countrycode = "AG"
	CountrycodeAR Countrycode = "AR"
	CountrycodeAM Countrycode = "AM"
	CountrycodeAW Countrycode = "AW"
	CountrycodeAU Countrycode = "AU"
	CountrycodeAT Countrycode = "AT"
	CountrycodeAZ Countrycode = "AZ"
	CountrycodeBS Countrycode = "BS"
	CountrycodeBH Countrycode = "BH"
	CountrycodeBD Countrycode = "BD"
	CountrycodeBB Countrycode = "BB"
	CountrycodeBY Countrycode = "BY"
	CountrycodeBE Countrycode = "BE"
	CountrycodeBZ Countrycode = "BZ"
	CountrycodeBJ Countrycode = "BJ"
	CountrycodeBM Countrycode = "BM"
	CountrycodeBT Countrycode = "BT"
	CountrycodeBO Countrycode = "BO"
	CountrycodeBQ Countrycode = "BQ"
	CountrycodeBA Countrycode = "BA"
	CountrycodeBW Countrycode = "BW"
	CountrycodeBV Countrycode = "BV"
	CountrycodeBR Countrycode = "BR"
	CountrycodeIO Countrycode = "IO"
	CountrycodeBN Countrycode = "BN"
	CountrycodeBG Countrycode = "BG"
	CountrycodeBF Countrycode = "BF"
	CountrycodeBI Countrycode = "BI"
	CountrycodeCV Countrycode = "CV"
	CountrycodeKH Countrycode = "KH"
	CountrycodeCM Countrycode = "CM"
	CountrycodeCA Countrycode = "CA"
	CountrycodeKY Countrycode = "KY"
	CountrycodeCF Countrycode = "CF"
	CountrycodeTD Countrycode = "TD"
	CountrycodeCL Countrycode = "CL"
	CountrycodeCN Countrycode = "CN"
	CountrycodeCX Countrycode = "CX"
	CountrycodeCC Countrycode = "CC"
	CountrycodeCO Countrycode = "CO"
	CountrycodeKM Countrycode = "KM"
	CountrycodeCG Countrycode = "CG"
	CountrycodeCD Countrycode = "CD"
	CountrycodeCK Countrycode = "CK"
	CountrycodeCR Countrycode = "CR"
	CountrycodeCI Countrycode = "CI"
	CountrycodeHR Countrycode = "HR"
	CountrycodeCU Countrycode = "CU"
	CountrycodeCW Countrycode = "CW"
	CountrycodeCY Countrycode = "CY"
	CountrycodeCZ Countrycode = "CZ"
	CountrycodeDK Countrycode = "DK"
	CountrycodeDJ Countrycode = "DJ"
	CountrycodeDM Countrycode = "DM"
	CountrycodeDO Countrycode = "DO"
	CountrycodeEC Countrycode = "EC"
	CountrycodeEG Countrycode = "EG"
	CountrycodeSV Countrycode = "SV"
	CountrycodeGQ Countrycode = "GQ"
	CountrycodeER Countrycode = "ER"
	CountrycodeEE Countrycode = "EE"
	CountrycodeSZ Countrycode = "SZ"
	CountrycodeET Countrycode = "ET"
	CountrycodeEU Countrycode = "EU"
	CountrycodeFK Countrycode = "FK"
	CountrycodeFO Countrycode = "FO"
	CountrycodeFJ Countrycode = "FJ"
	CountrycodeFI Countrycode = "FI"
	CountrycodeFR Countrycode = "FR"
	CountrycodeGF Countrycode = "GF"
	CountrycodePF Countrycode = "PF"
	CountrycodeTF Countrycode = "TF"
	CountrycodeGA Countrycode = "GA"
	CountrycodeGM Countrycode = "GM"
	CountrycodeGE Countrycode = "GE"
	CountrycodeDE Countrycode = "DE"
	CountrycodeGH Countrycode = "GH"
	CountrycodeGI Countrycode = "GI"
	CountrycodeGR Countrycode = "GR"
	CountrycodeGL Countrycode = "GL"
	CountrycodeGD Countrycode = "GD"
	CountrycodeGP Countrycode = "GP"
	CountrycodeGU Countrycode = "GU"
	CountrycodeGT Countrycode = "GT"
	CountrycodeGG Countrycode = "GG"
	CountrycodeGN Countrycode = "GN"
	CountrycodeGW Countrycode = "GW"
	CountrycodeGY Countrycode = "GY"
	CountrycodeHT Countrycode = "HT"
	CountrycodeHM Countrycode = "HM"
	CountrycodeVA Countrycode = "VA"
	CountrycodeHN Countrycode = "HN"
	CountrycodeHK Countrycode = "HK"
	CountrycodeHU Countrycode = "HU"
	CountrycodeIS Countrycode = "IS"
	CountrycodeIN Countrycode = "IN"
	CountrycodeIR Countrycode = "IR"
	CountrycodeIQ Countrycode = "IQ"
	CountrycodeIE Countrycode = "IE"
	CountrycodeIM Countrycode = "IM"
	CountrycodeIL Countrycode = "IL"
	CountrycodeIT Countrycode = "IT"
	CountrycodeJM Countrycode = "JM"
	CountrycodeJP Countrycode = "JP"
	CountrycodeJE Countrycode = "JE"
	CountrycodeJO Countrycode = "JO"
	CountrycodeKZ Countrycode = "KZ"
	CountrycodeKE Countrycode = "KE"
	CountrycodeKI Countrycode = "KI"
	CountrycodeKW Countrycode = "KW"
	CountrycodeKG Countrycode = "KG"
	CountrycodeLA Countrycode = "LA"
	CountrycodeLV Countrycode = "LV"
	CountrycodeLB Countrycode = "LB"
	CountrycodeLS Countrycode = "LS"
	CountrycodeLR Countrycode = "LR"
	CountrycodeLY Countrycode = "LY"
	CountrycodeLI Countrycode = "LI"
	CountrycodeLT Countrycode = "LT"
	CountrycodeLU Countrycode = "LU"
	CountrycodeMO Countrycode = "MO"
	CountrycodeMG Countrycode = "MG"
	CountrycodeMW Countrycode = "MW"
	CountrycodeMY Countrycode = "MY"
	CountrycodeMV Countrycode = "MV"
	CountrycodeML Countrycode = "ML"
	CountrycodeMT Countrycode = "MT"
	CountrycodeMH Countrycode = "MH"
	CountrycodeMQ Countrycode = "MQ"
	CountrycodeMR Countrycode = "MR"
	CountrycodeMU Countrycode = "MU"
	CountrycodeYT Countrycode = "YT"
	CountrycodeMX Countrycode = "MX"
	CountrycodeFM Countrycode = "FM"
	CountrycodeMD Countrycode = "MD"
	CountrycodeMC Countrycode = "MC"
	CountrycodeMN Countrycode = "MN"
	CountrycodeME Countrycode = "ME"
	CountrycodeMS Countrycode = "MS"
	CountrycodeMA Countrycode = "MA"
	CountrycodeMZ Countrycode = "MZ"
	CountrycodeMM Countrycode = "MM"
	CountrycodeNA Countrycode = "NA"
	CountrycodeNR Countrycode = "NR"
	CountrycodeNP Countrycode = "NP"
	CountrycodeNL Countrycode = "NL"
	CountrycodeNC Countrycode = "NC"
	CountrycodeNZ Countrycode = "NZ"
	CountrycodeNI Countrycode = "NI"
	CountrycodeNE Countrycode = "NE"
	CountrycodeNG Countrycode = "NG"
	CountrycodeNU Countrycode = "NU"
	CountrycodeNF Countrycode = "NF"
	CountrycodeKP Countrycode = "KP"
	CountrycodeMK Countrycode = "MK"
	CountrycodeMP Countrycode = "MP"
	CountrycodeNO Countrycode = "NO"
	CountrycodeOM Countrycode = "OM"
	CountrycodePK Countrycode = "PK"
	CountrycodePW Countrycode = "PW"
	CountrycodePS Countrycode = "PS"
	CountrycodePA Countrycode = "PA"
	CountrycodePG Countrycode = "PG"
	CountrycodePY Countrycode = "PY"
	CountrycodePE Countrycode = "PE"
	CountrycodePH Countrycode = "PH"
	CountrycodePN Countrycode = "PN"
	CountrycodePL Countrycode = "PL"
	CountrycodePT Countrycode = "PT"
	CountrycodePR Countrycode = "PR"
	CountrycodeQA Countrycode = "QA"
	CountrycodeRE Countrycode = "RE"
	CountrycodeRO Countrycode = "RO"
	CountrycodeRU Countrycode = "RU"
	CountrycodeRW Countrycode = "RW"
	CountrycodeBL Countrycode = "BL"
	CountrycodeSH Countrycode = "SH"
	CountrycodeKN Countrycode = "KN"
	CountrycodeLC Countrycode = "LC"
	CountrycodeMF Countrycode = "MF"
	CountrycodePM Countrycode = "PM"
	CountrycodeVC Countrycode = "VC"
	CountrycodeWS Countrycode = "WS"
	CountrycodeSM Countrycode = "SM"
	CountrycodeST Countrycode = "ST"
	CountrycodeSA Countrycode = "SA"
	CountrycodeSN Countrycode = "SN"
	CountrycodeRS Countrycode = "RS"
	CountrycodeSC Countrycode = "SC"
	CountrycodeSL Countrycode = "SL"
	CountrycodeSG Countrycode = "SG"
	CountrycodeSX Countrycode = "SX"
	CountrycodeSK Countrycode = "SK"
	CountrycodeSI Countrycode = "SI"
	CountrycodeSB Countrycode = "SB"
	CountrycodeSO Countrycode = "SO"
	CountrycodeZA Countrycode = "ZA"
	CountrycodeGS Countrycode = "GS"
	CountrycodeKR Countrycode = "KR"
	CountrycodeSS Countrycode = "SS"
	CountrycodeES Countrycode = "ES"
	CountrycodeLK Countrycode = "LK"
	CountrycodeSD Countrycode = "SD"
	CountrycodeSR Countrycode = "SR"
	CountrycodeSJ Countrycode = "SJ"
	CountrycodeSE Countrycode = "SE"
	CountrycodeCH Countrycode = "CH"
	CountrycodeSY Countrycode = "SY"
	CountrycodeTW Countrycode = "TW"
	CountrycodeTJ Countrycode = "TJ"
	CountrycodeTZ Countrycode = "TZ"
	CountrycodeTH Countrycode = "TH"
	CountrycodeTL Countrycode = "TL"
	CountrycodeTG Countrycode = "TG"
	CountrycodeTK Countrycode = "TK"
	CountrycodeTO Countrycode = "TO"
	CountrycodeTT Countrycode = "TT"
	CountrycodeTN Countrycode = "TN"
	CountrycodeTR Countrycode = "TR"
	CountrycodeTM Countrycode = "TM"
	CountrycodeTC Countrycode = "TC"
	CountrycodeTV Countrycode = "TV"
	CountrycodeUG Countrycode = "UG"
	CountrycodeUA Countrycode = "UA"
	CountrycodeAE Countrycode = "AE"
	CountrycodeGB Countrycode = "GB"
	CountrycodeUM Countrycode = "UM"
	CountrycodeUS Countrycode = "US"
	CountrycodeUY Countrycode = "UY"
	CountrycodeUZ Countrycode = "UZ"
	CountrycodeVU Countrycode = "VU"
	CountrycodeVE Countrycode = "VE"
	CountrycodeVN Countrycode = "VN"
	CountrycodeVG Countrycode = "VG"
	CountrycodeVI Countrycode = "VI"
	CountrycodeWF Countrycode = "WF"
	CountrycodeEH Countrycode = "EH"
	CountrycodeYE Countrycode = "YE"
	CountrycodeZM Countrycode = "ZM"
	CountrycodeZW Countrycode = "ZW"
)

func AllCountrycode() []Countrycode {
	return []Countrycode{
		CountrycodeID,
		CountrycodeAX,
		CountrycodeAL,
		CountrycodeAF,
		CountrycodeDZ,
		CountrycodeAS,
		CountrycodeAD,
		CountrycodeAO,
		CountrycodeAI,
		CountrycodeAQ,
		CountrycodeAG,
		CountrycodeAR,
		CountrycodeAM,
		CountrycodeAW,
		CountrycodeAU,
		CountrycodeAT,
		CountrycodeAZ,
		CountrycodeBS,
		CountrycodeBH,
		CountrycodeBD,
		CountrycodeBB,
		CountrycodeBY,
		CountrycodeBE,
		CountrycodeBZ,
		CountrycodeBJ,
		CountrycodeBM,
		CountrycodeBT,
		CountrycodeBO,
		CountrycodeBQ,
		CountrycodeBA,
		CountrycodeBW,
		CountrycodeBV,
		CountrycodeBR,
		CountrycodeIO,
		CountrycodeBN,
		CountrycodeBG,
		CountrycodeBF,
		CountrycodeBI,
		CountrycodeCV,
		CountrycodeKH,
		CountrycodeCM,
		CountrycodeCA,
		CountrycodeKY,
		CountrycodeCF,
		CountrycodeTD,
		CountrycodeCL,
		CountrycodeCN,
		CountrycodeCX,
		CountrycodeCC,
		CountrycodeCO,
		CountrycodeKM,
		CountrycodeCG,
		CountrycodeCD,
		CountrycodeCK,
		CountrycodeCR,
		CountrycodeCI,
		CountrycodeHR,
		CountrycodeCU,
		CountrycodeCW,
		CountrycodeCY,
		CountrycodeCZ,
		CountrycodeDK,
		CountrycodeDJ,
		CountrycodeDM,
		CountrycodeDO,
		CountrycodeEC,
		CountrycodeEG,
		CountrycodeSV,
		CountrycodeGQ,
		CountrycodeER,
		CountrycodeEE,
		CountrycodeSZ,
		CountrycodeET,
		CountrycodeEU,
		CountrycodeFK,
		CountrycodeFO,
		CountrycodeFJ,
		CountrycodeFI,
		CountrycodeFR,
		CountrycodeGF,
		CountrycodePF,
		CountrycodeTF,
		CountrycodeGA,
		CountrycodeGM,
		CountrycodeGE,
		CountrycodeDE,
		CountrycodeGH,
		CountrycodeGI,
		CountrycodeGR,
		CountrycodeGL,
		CountrycodeGD,
		CountrycodeGP,
		CountrycodeGU,
		CountrycodeGT,
		CountrycodeGG,
		CountrycodeGN,
		CountrycodeGW,
		CountrycodeGY,
		CountrycodeHT,
		CountrycodeHM,
		CountrycodeVA,
		CountrycodeHN,
		CountrycodeHK,
		CountrycodeHU,
		CountrycodeIS,
		CountrycodeIN,
		CountrycodeIR,
		CountrycodeIQ,
		CountrycodeIE,
		CountrycodeIM,
		CountrycodeIL,
		CountrycodeIT,
		CountrycodeJM,
		CountrycodeJP,
		CountrycodeJE,
		CountrycodeJO,
		CountrycodeKZ,
		CountrycodeKE,
		CountrycodeKI,
		CountrycodeKW,
		CountrycodeKG,
		CountrycodeLA,
		CountrycodeLV,
		CountrycodeLB,
		CountrycodeLS,
		CountrycodeLR,
		CountrycodeLY,
		CountrycodeLI,
		CountrycodeLT,
		CountrycodeLU,
		CountrycodeMO,
		CountrycodeMG,
		CountrycodeMW,
		CountrycodeMY,
		CountrycodeMV,
		CountrycodeML,
		CountrycodeMT,
		CountrycodeMH,
		CountrycodeMQ,
		CountrycodeMR,
		CountrycodeMU,
		CountrycodeYT,
		CountrycodeMX,
		CountrycodeFM,
		CountrycodeMD,
		CountrycodeMC,
		CountrycodeMN,
		CountrycodeME,
		CountrycodeMS,
		CountrycodeMA,
		CountrycodeMZ,
		CountrycodeMM,
		CountrycodeNA,
		CountrycodeNR,
		CountrycodeNP,
		CountrycodeNL,
		CountrycodeNC,
		CountrycodeNZ,
		CountrycodeNI,
		CountrycodeNE,
		CountrycodeNG,
		CountrycodeNU,
		CountrycodeNF,
		CountrycodeKP,
		CountrycodeMK,
		CountrycodeMP,
		CountrycodeNO,
		CountrycodeOM,
		CountrycodePK,
		CountrycodePW,
		CountrycodePS,
		CountrycodePA,
		CountrycodePG,
		CountrycodePY,
		CountrycodePE,
		CountrycodePH,
		CountrycodePN,
		CountrycodePL,
		CountrycodePT,
		CountrycodePR,
		CountrycodeQA,
		CountrycodeRE,
		CountrycodeRO,
		CountrycodeRU,
		CountrycodeRW,
		CountrycodeBL,
		CountrycodeSH,
		CountrycodeKN,
		CountrycodeLC,
		CountrycodeMF,
		CountrycodePM,
		CountrycodeVC,
		CountrycodeWS,
		CountrycodeSM,
		CountrycodeST,
		CountrycodeSA,
		CountrycodeSN,
		CountrycodeRS,
		CountrycodeSC,
		CountrycodeSL,
		CountrycodeSG,
		CountrycodeSX,
		CountrycodeSK,
		CountrycodeSI,
		CountrycodeSB,
		CountrycodeSO,
		CountrycodeZA,
		CountrycodeGS,
		CountrycodeKR,
		CountrycodeSS,
		CountrycodeES,
		CountrycodeLK,
		CountrycodeSD,
		CountrycodeSR,
		CountrycodeSJ,
		CountrycodeSE,
		CountrycodeCH,
		CountrycodeSY,
		CountrycodeTW,
		CountrycodeTJ,
		CountrycodeTZ,
		CountrycodeTH,
		CountrycodeTL,
		CountrycodeTG,
		CountrycodeTK,
		CountrycodeTO,
		CountrycodeTT,
		CountrycodeTN,
		CountrycodeTR,
		CountrycodeTM,
		CountrycodeTC,
		CountrycodeTV,
		CountrycodeUG,
		CountrycodeUA,
		CountrycodeAE,
		CountrycodeGB,
		CountrycodeUM,
		CountrycodeUS,
		CountrycodeUY,
		CountrycodeUZ,
		CountrycodeVU,
		CountrycodeVE,
		CountrycodeVN,
		CountrycodeVG,
		CountrycodeVI,
		CountrycodeWF,
		CountrycodeEH,
		CountrycodeYE,
		CountrycodeZM,
		CountrycodeZW,
	}
}

func (e Countrycode) IsValid() error {
	switch e {
	case CountrycodeID, CountrycodeAX, CountrycodeAL, CountrycodeAF, CountrycodeDZ, CountrycodeAS, CountrycodeAD, CountrycodeAO, CountrycodeAI, CountrycodeAQ, CountrycodeAG, CountrycodeAR, CountrycodeAM, CountrycodeAW, CountrycodeAU, CountrycodeAT, CountrycodeAZ, CountrycodeBS, CountrycodeBH, CountrycodeBD, CountrycodeBB, CountrycodeBY, CountrycodeBE, CountrycodeBZ, CountrycodeBJ, CountrycodeBM, CountrycodeBT, CountrycodeBO, CountrycodeBQ, CountrycodeBA, CountrycodeBW, CountrycodeBV, CountrycodeBR, CountrycodeIO, CountrycodeBN, CountrycodeBG, CountrycodeBF, CountrycodeBI, CountrycodeCV, CountrycodeKH, CountrycodeCM, CountrycodeCA, CountrycodeKY, CountrycodeCF, CountrycodeTD, CountrycodeCL, CountrycodeCN, CountrycodeCX, CountrycodeCC, CountrycodeCO, CountrycodeKM, CountrycodeCG, CountrycodeCD, CountrycodeCK, CountrycodeCR, CountrycodeCI, CountrycodeHR, CountrycodeCU, CountrycodeCW, CountrycodeCY, CountrycodeCZ, CountrycodeDK, CountrycodeDJ, CountrycodeDM, CountrycodeDO, CountrycodeEC, CountrycodeEG, CountrycodeSV, CountrycodeGQ, CountrycodeER, CountrycodeEE, CountrycodeSZ, CountrycodeET, CountrycodeEU, CountrycodeFK, CountrycodeFO, CountrycodeFJ, CountrycodeFI, CountrycodeFR, CountrycodeGF, CountrycodePF, CountrycodeTF, CountrycodeGA, CountrycodeGM, CountrycodeGE, CountrycodeDE, CountrycodeGH, CountrycodeGI, CountrycodeGR, CountrycodeGL, CountrycodeGD, CountrycodeGP, CountrycodeGU, CountrycodeGT, CountrycodeGG, CountrycodeGN, CountrycodeGW, CountrycodeGY, CountrycodeHT, CountrycodeHM, CountrycodeVA, CountrycodeHN, CountrycodeHK, CountrycodeHU, CountrycodeIS, CountrycodeIN, CountrycodeIR, CountrycodeIQ, CountrycodeIE, CountrycodeIM, CountrycodeIL, CountrycodeIT, CountrycodeJM, CountrycodeJP, CountrycodeJE, CountrycodeJO, CountrycodeKZ, CountrycodeKE, CountrycodeKI, CountrycodeKW, CountrycodeKG, CountrycodeLA, CountrycodeLV, CountrycodeLB, CountrycodeLS, CountrycodeLR, CountrycodeLY, CountrycodeLI, CountrycodeLT, CountrycodeLU, CountrycodeMO, CountrycodeMG, CountrycodeMW, CountrycodeMY, CountrycodeMV, CountrycodeML, CountrycodeMT, CountrycodeMH, CountrycodeMQ, CountrycodeMR, CountrycodeMU, CountrycodeYT, CountrycodeMX, CountrycodeFM, CountrycodeMD, CountrycodeMC, CountrycodeMN, CountrycodeME, CountrycodeMS, CountrycodeMA, CountrycodeMZ, CountrycodeMM, CountrycodeNA, CountrycodeNR, CountrycodeNP, CountrycodeNL, CountrycodeNC, CountrycodeNZ, CountrycodeNI, CountrycodeNE, CountrycodeNG, CountrycodeNU, CountrycodeNF, CountrycodeKP, CountrycodeMK, CountrycodeMP, CountrycodeNO, CountrycodeOM, CountrycodePK, CountrycodePW, CountrycodePS, CountrycodePA, CountrycodePG, CountrycodePY, CountrycodePE, CountrycodePH, CountrycodePN, CountrycodePL, CountrycodePT, CountrycodePR, CountrycodeQA, CountrycodeRE, CountrycodeRO, CountrycodeRU, CountrycodeRW, CountrycodeBL, CountrycodeSH, CountrycodeKN, CountrycodeLC, CountrycodeMF, CountrycodePM, CountrycodeVC, CountrycodeWS, CountrycodeSM, CountrycodeST, CountrycodeSA, CountrycodeSN, CountrycodeRS, CountrycodeSC, CountrycodeSL, CountrycodeSG, CountrycodeSX, CountrycodeSK, CountrycodeSI, CountrycodeSB, CountrycodeSO, CountrycodeZA, CountrycodeGS, CountrycodeKR, CountrycodeSS, CountrycodeES, CountrycodeLK, CountrycodeSD, CountrycodeSR, CountrycodeSJ, CountrycodeSE, CountrycodeCH, CountrycodeSY, CountrycodeTW, CountrycodeTJ, CountrycodeTZ, CountrycodeTH, CountrycodeTL, CountrycodeTG, CountrycodeTK, CountrycodeTO, CountrycodeTT, CountrycodeTN, CountrycodeTR, CountrycodeTM, CountrycodeTC, CountrycodeTV, CountrycodeUG, CountrycodeUA, CountrycodeAE, CountrycodeGB, CountrycodeUM, CountrycodeUS, CountrycodeUY, CountrycodeUZ, CountrycodeVU, CountrycodeVE, CountrycodeVN, CountrycodeVG, CountrycodeVI, CountrycodeWF, CountrycodeEH, CountrycodeYE, CountrycodeZM, CountrycodeZW:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Countrycode) String() string {
	return string(e)
}

type Languagecode string

// Enum values for Languagecode
const (
	LanguagecodeAF             Languagecode = "AF"
	LanguagecodeAF_NA          Languagecode = "AF_NA"
	LanguagecodeID             Languagecode = "ID"
	LanguagecodeAF_ZA          Languagecode = "AF_ZA"
	LanguagecodeAGQ            Languagecode = "AGQ"
	LanguagecodeAGQ_CM         Languagecode = "AGQ_CM"
	LanguagecodeAK             Languagecode = "AK"
	LanguagecodeAK_GH          Languagecode = "AK_GH"
	LanguagecodeAM             Languagecode = "AM"
	LanguagecodeAM_ET          Languagecode = "AM_ET"
	LanguagecodeAR             Languagecode = "AR"
	LanguagecodeAR_AE          Languagecode = "AR_AE"
	LanguagecodeAR_BH          Languagecode = "AR_BH"
	LanguagecodeAR_DJ          Languagecode = "AR_DJ"
	LanguagecodeAR_DZ          Languagecode = "AR_DZ"
	LanguagecodeAR_EG          Languagecode = "AR_EG"
	LanguagecodeAR_EH          Languagecode = "AR_EH"
	LanguagecodeAR_ER          Languagecode = "AR_ER"
	LanguagecodeAR_IL          Languagecode = "AR_IL"
	LanguagecodeAR_IQ          Languagecode = "AR_IQ"
	LanguagecodeAR_JO          Languagecode = "AR_JO"
	LanguagecodeAR_KM          Languagecode = "AR_KM"
	LanguagecodeAR_KW          Languagecode = "AR_KW"
	LanguagecodeAR_LB          Languagecode = "AR_LB"
	LanguagecodeAR_LY          Languagecode = "AR_LY"
	LanguagecodeAR_MA          Languagecode = "AR_MA"
	LanguagecodeAR_MR          Languagecode = "AR_MR"
	LanguagecodeAR_OM          Languagecode = "AR_OM"
	LanguagecodeAR_PS          Languagecode = "AR_PS"
	LanguagecodeAR_QA          Languagecode = "AR_QA"
	LanguagecodeAR_SA          Languagecode = "AR_SA"
	LanguagecodeAR_SD          Languagecode = "AR_SD"
	LanguagecodeAR_SO          Languagecode = "AR_SO"
	LanguagecodeAR_SS          Languagecode = "AR_SS"
	LanguagecodeAR_SY          Languagecode = "AR_SY"
	LanguagecodeAR_TD          Languagecode = "AR_TD"
	LanguagecodeAR_TN          Languagecode = "AR_TN"
	LanguagecodeAR_YE          Languagecode = "AR_YE"
	LanguagecodeAS             Languagecode = "AS"
	LanguagecodeAS_IN          Languagecode = "AS_IN"
	LanguagecodeASA            Languagecode = "ASA"
	LanguagecodeASA_TZ         Languagecode = "ASA_TZ"
	LanguagecodeAST            Languagecode = "AST"
	LanguagecodeAST_ES         Languagecode = "AST_ES"
	LanguagecodeAZ             Languagecode = "AZ"
	LanguagecodeAZ_CYRL        Languagecode = "AZ_CYRL"
	LanguagecodeAZ_CYRL_AZ     Languagecode = "AZ_CYRL_AZ"
	LanguagecodeAZ_LATN        Languagecode = "AZ_LATN"
	LanguagecodeAZ_LATN_AZ     Languagecode = "AZ_LATN_AZ"
	LanguagecodeBAS            Languagecode = "BAS"
	LanguagecodeBAS_CM         Languagecode = "BAS_CM"
	LanguagecodeBE             Languagecode = "BE"
	LanguagecodeBE_BY          Languagecode = "BE_BY"
	LanguagecodeBEM            Languagecode = "BEM"
	LanguagecodeBEM_ZM         Languagecode = "BEM_ZM"
	LanguagecodeBEZ            Languagecode = "BEZ"
	LanguagecodeBEZ_TZ         Languagecode = "BEZ_TZ"
	LanguagecodeBG             Languagecode = "BG"
	LanguagecodeBG_BG          Languagecode = "BG_BG"
	LanguagecodeBM             Languagecode = "BM"
	LanguagecodeBM_ML          Languagecode = "BM_ML"
	LanguagecodeBN             Languagecode = "BN"
	LanguagecodeBN_BD          Languagecode = "BN_BD"
	LanguagecodeBN_IN          Languagecode = "BN_IN"
	LanguagecodeBO             Languagecode = "BO"
	LanguagecodeBO_CN          Languagecode = "BO_CN"
	LanguagecodeBO_IN          Languagecode = "BO_IN"
	LanguagecodeBR             Languagecode = "BR"
	LanguagecodeBR_FR          Languagecode = "BR_FR"
	LanguagecodeBRX            Languagecode = "BRX"
	LanguagecodeBRX_IN         Languagecode = "BRX_IN"
	LanguagecodeBS             Languagecode = "BS"
	LanguagecodeBS_CYRL        Languagecode = "BS_CYRL"
	LanguagecodeBS_CYRL_BA     Languagecode = "BS_CYRL_BA"
	LanguagecodeBS_LATN        Languagecode = "BS_LATN"
	LanguagecodeBS_LATN_BA     Languagecode = "BS_LATN_BA"
	LanguagecodeCA             Languagecode = "CA"
	LanguagecodeCA_AD          Languagecode = "CA_AD"
	LanguagecodeCA_ES          Languagecode = "CA_ES"
	LanguagecodeCA_ES_VALENCIA Languagecode = "CA_ES_VALENCIA"
	LanguagecodeCA_FR          Languagecode = "CA_FR"
	LanguagecodeCA_IT          Languagecode = "CA_IT"
	LanguagecodeCCP            Languagecode = "CCP"
	LanguagecodeCCP_BD         Languagecode = "CCP_BD"
	LanguagecodeCCP_IN         Languagecode = "CCP_IN"
	LanguagecodeCE             Languagecode = "CE"
	LanguagecodeCE_RU          Languagecode = "CE_RU"
	LanguagecodeCEB            Languagecode = "CEB"
	LanguagecodeCEB_PH         Languagecode = "CEB_PH"
	LanguagecodeCGG            Languagecode = "CGG"
	LanguagecodeCGG_UG         Languagecode = "CGG_UG"
	LanguagecodeCHR            Languagecode = "CHR"
	LanguagecodeCHR_US         Languagecode = "CHR_US"
	LanguagecodeCKB            Languagecode = "CKB"
	LanguagecodeCKB_IQ         Languagecode = "CKB_IQ"
	LanguagecodeCKB_IR         Languagecode = "CKB_IR"
	LanguagecodeCS             Languagecode = "CS"
	LanguagecodeCS_CZ          Languagecode = "CS_CZ"
	LanguagecodeCU             Languagecode = "CU"
	LanguagecodeCU_RU          Languagecode = "CU_RU"
	LanguagecodeCY             Languagecode = "CY"
	LanguagecodeCY_GB          Languagecode = "CY_GB"
	LanguagecodeDA             Languagecode = "DA"
	LanguagecodeDA_DK          Languagecode = "DA_DK"
	LanguagecodeDA_GL          Languagecode = "DA_GL"
	LanguagecodeDAV            Languagecode = "DAV"
	LanguagecodeDAV_KE         Languagecode = "DAV_KE"
	LanguagecodeDE             Languagecode = "DE"
	LanguagecodeDE_AT          Languagecode = "DE_AT"
	LanguagecodeDE_BE          Languagecode = "DE_BE"
	LanguagecodeDE_CH          Languagecode = "DE_CH"
	LanguagecodeDE_DE          Languagecode = "DE_DE"
	LanguagecodeDE_IT          Languagecode = "DE_IT"
	LanguagecodeDE_LI          Languagecode = "DE_LI"
	LanguagecodeDE_LU          Languagecode = "DE_LU"
	LanguagecodeDJE            Languagecode = "DJE"
	LanguagecodeDJE_NE         Languagecode = "DJE_NE"
	LanguagecodeDSB            Languagecode = "DSB"
	LanguagecodeDSB_DE         Languagecode = "DSB_DE"
	LanguagecodeDUA            Languagecode = "DUA"
	LanguagecodeDUA_CM         Languagecode = "DUA_CM"
	LanguagecodeDYO            Languagecode = "DYO"
	LanguagecodeDYO_SN         Languagecode = "DYO_SN"
	LanguagecodeDZ             Languagecode = "DZ"
	LanguagecodeDZ_BT          Languagecode = "DZ_BT"
	LanguagecodeEBU            Languagecode = "EBU"
	LanguagecodeEBU_KE         Languagecode = "EBU_KE"
	LanguagecodeEE             Languagecode = "EE"
	LanguagecodeEE_GH          Languagecode = "EE_GH"
	LanguagecodeEE_TG          Languagecode = "EE_TG"
	LanguagecodeEL             Languagecode = "EL"
	LanguagecodeEL_CY          Languagecode = "EL_CY"
	LanguagecodeEL_GR          Languagecode = "EL_GR"
	LanguagecodeEN             Languagecode = "EN"
	LanguagecodeEN_AE          Languagecode = "EN_AE"
	LanguagecodeEN_AG          Languagecode = "EN_AG"
	LanguagecodeEN_AI          Languagecode = "EN_AI"
	LanguagecodeEN_AS          Languagecode = "EN_AS"
	LanguagecodeEN_AT          Languagecode = "EN_AT"
	LanguagecodeEN_AU          Languagecode = "EN_AU"
	LanguagecodeEN_BB          Languagecode = "EN_BB"
	LanguagecodeEN_BE          Languagecode = "EN_BE"
	LanguagecodeEN_BI          Languagecode = "EN_BI"
	LanguagecodeEN_BM          Languagecode = "EN_BM"
	LanguagecodeEN_BS          Languagecode = "EN_BS"
	LanguagecodeEN_BW          Languagecode = "EN_BW"
	LanguagecodeEN_BZ          Languagecode = "EN_BZ"
	LanguagecodeEN_CA          Languagecode = "EN_CA"
	LanguagecodeEN_CC          Languagecode = "EN_CC"
	LanguagecodeEN_CH          Languagecode = "EN_CH"
	LanguagecodeEN_CK          Languagecode = "EN_CK"
	LanguagecodeEN_CM          Languagecode = "EN_CM"
	LanguagecodeEN_CX          Languagecode = "EN_CX"
	LanguagecodeEN_CY          Languagecode = "EN_CY"
	LanguagecodeEN_DE          Languagecode = "EN_DE"
	LanguagecodeEN_DG          Languagecode = "EN_DG"
	LanguagecodeEN_DK          Languagecode = "EN_DK"
	LanguagecodeEN_DM          Languagecode = "EN_DM"
	LanguagecodeEN_ER          Languagecode = "EN_ER"
	LanguagecodeEN_FI          Languagecode = "EN_FI"
	LanguagecodeEN_FJ          Languagecode = "EN_FJ"
	LanguagecodeEN_FK          Languagecode = "EN_FK"
	LanguagecodeEN_FM          Languagecode = "EN_FM"
	LanguagecodeEN_GB          Languagecode = "EN_GB"
	LanguagecodeEN_GD          Languagecode = "EN_GD"
	LanguagecodeEN_GG          Languagecode = "EN_GG"
	LanguagecodeEN_GH          Languagecode = "EN_GH"
	LanguagecodeEN_GI          Languagecode = "EN_GI"
	LanguagecodeEN_GM          Languagecode = "EN_GM"
	LanguagecodeEN_GU          Languagecode = "EN_GU"
	LanguagecodeEN_GY          Languagecode = "EN_GY"
	LanguagecodeEN_HK          Languagecode = "EN_HK"
	LanguagecodeEN_IE          Languagecode = "EN_IE"
	LanguagecodeEN_IL          Languagecode = "EN_IL"
	LanguagecodeEN_IM          Languagecode = "EN_IM"
	LanguagecodeEN_IN          Languagecode = "EN_IN"
	LanguagecodeEN_IO          Languagecode = "EN_IO"
	LanguagecodeEN_JE          Languagecode = "EN_JE"
	LanguagecodeEN_JM          Languagecode = "EN_JM"
	LanguagecodeEN_KE          Languagecode = "EN_KE"
	LanguagecodeEN_KI          Languagecode = "EN_KI"
	LanguagecodeEN_KN          Languagecode = "EN_KN"
	LanguagecodeEN_KY          Languagecode = "EN_KY"
	LanguagecodeEN_LC          Languagecode = "EN_LC"
	LanguagecodeEN_LR          Languagecode = "EN_LR"
	LanguagecodeEN_LS          Languagecode = "EN_LS"
	LanguagecodeEN_MG          Languagecode = "EN_MG"
	LanguagecodeEN_MH          Languagecode = "EN_MH"
	LanguagecodeEN_MO          Languagecode = "EN_MO"
	LanguagecodeEN_MP          Languagecode = "EN_MP"
	LanguagecodeEN_MS          Languagecode = "EN_MS"
	LanguagecodeEN_MT          Languagecode = "EN_MT"
	LanguagecodeEN_MU          Languagecode = "EN_MU"
	LanguagecodeEN_MW          Languagecode = "EN_MW"
	LanguagecodeEN_MY          Languagecode = "EN_MY"
	LanguagecodeEN_NA          Languagecode = "EN_NA"
	LanguagecodeEN_NF          Languagecode = "EN_NF"
	LanguagecodeEN_NG          Languagecode = "EN_NG"
	LanguagecodeEN_NL          Languagecode = "EN_NL"
	LanguagecodeEN_NR          Languagecode = "EN_NR"
	LanguagecodeEN_NU          Languagecode = "EN_NU"
	LanguagecodeEN_NZ          Languagecode = "EN_NZ"
	LanguagecodeEN_PG          Languagecode = "EN_PG"
	LanguagecodeEN_PH          Languagecode = "EN_PH"
	LanguagecodeEN_PK          Languagecode = "EN_PK"
	LanguagecodeEN_PN          Languagecode = "EN_PN"
	LanguagecodeEN_PR          Languagecode = "EN_PR"
	LanguagecodeEN_PW          Languagecode = "EN_PW"
	LanguagecodeEN_RW          Languagecode = "EN_RW"
	LanguagecodeEN_SB          Languagecode = "EN_SB"
	LanguagecodeEN_SC          Languagecode = "EN_SC"
	LanguagecodeEN_SD          Languagecode = "EN_SD"
	LanguagecodeEN_SE          Languagecode = "EN_SE"
	LanguagecodeEN_SG          Languagecode = "EN_SG"
	LanguagecodeEN_SH          Languagecode = "EN_SH"
	LanguagecodeEN_SI          Languagecode = "EN_SI"
	LanguagecodeEN_SL          Languagecode = "EN_SL"
	LanguagecodeEN_SS          Languagecode = "EN_SS"
	LanguagecodeEN_SX          Languagecode = "EN_SX"
	LanguagecodeEN_SZ          Languagecode = "EN_SZ"
	LanguagecodeEN_TC          Languagecode = "EN_TC"
	LanguagecodeEN_TK          Languagecode = "EN_TK"
	LanguagecodeEN_TO          Languagecode = "EN_TO"
	LanguagecodeEN_TT          Languagecode = "EN_TT"
	LanguagecodeEN_TV          Languagecode = "EN_TV"
	LanguagecodeEN_TZ          Languagecode = "EN_TZ"
	LanguagecodeEN_UG          Languagecode = "EN_UG"
	LanguagecodeEN_UM          Languagecode = "EN_UM"
	LanguagecodeEN_US          Languagecode = "EN_US"
	LanguagecodeEN_VC          Languagecode = "EN_VC"
	LanguagecodeEN_VG          Languagecode = "EN_VG"
	LanguagecodeEN_VI          Languagecode = "EN_VI"
	LanguagecodeEN_VU          Languagecode = "EN_VU"
	LanguagecodeEN_WS          Languagecode = "EN_WS"
	LanguagecodeEN_ZA          Languagecode = "EN_ZA"
	LanguagecodeEN_ZM          Languagecode = "EN_ZM"
	LanguagecodeEN_ZW          Languagecode = "EN_ZW"
	LanguagecodeEO             Languagecode = "EO"
	LanguagecodeES             Languagecode = "ES"
	LanguagecodeES_AR          Languagecode = "ES_AR"
	LanguagecodeES_BO          Languagecode = "ES_BO"
	LanguagecodeES_BR          Languagecode = "ES_BR"
	LanguagecodeES_BZ          Languagecode = "ES_BZ"
	LanguagecodeES_CL          Languagecode = "ES_CL"
	LanguagecodeES_CO          Languagecode = "ES_CO"
	LanguagecodeES_CR          Languagecode = "ES_CR"
	LanguagecodeES_CU          Languagecode = "ES_CU"
	LanguagecodeES_DO          Languagecode = "ES_DO"
	LanguagecodeES_EA          Languagecode = "ES_EA"
	LanguagecodeES_EC          Languagecode = "ES_EC"
	LanguagecodeES_ES          Languagecode = "ES_ES"
	LanguagecodeES_GQ          Languagecode = "ES_GQ"
	LanguagecodeES_GT          Languagecode = "ES_GT"
	LanguagecodeES_HN          Languagecode = "ES_HN"
	LanguagecodeES_IC          Languagecode = "ES_IC"
	LanguagecodeES_MX          Languagecode = "ES_MX"
	LanguagecodeES_NI          Languagecode = "ES_NI"
	LanguagecodeES_PA          Languagecode = "ES_PA"
	LanguagecodeES_PE          Languagecode = "ES_PE"
	LanguagecodeES_PH          Languagecode = "ES_PH"
	LanguagecodeES_PR          Languagecode = "ES_PR"
	LanguagecodeES_PY          Languagecode = "ES_PY"
	LanguagecodeES_SV          Languagecode = "ES_SV"
	LanguagecodeES_US          Languagecode = "ES_US"
	LanguagecodeES_UY          Languagecode = "ES_UY"
	LanguagecodeES_VE          Languagecode = "ES_VE"
	LanguagecodeET             Languagecode = "ET"
	LanguagecodeET_EE          Languagecode = "ET_EE"
	LanguagecodeEU             Languagecode = "EU"
	LanguagecodeEU_ES          Languagecode = "EU_ES"
	LanguagecodeEWO            Languagecode = "EWO"
	LanguagecodeEWO_CM         Languagecode = "EWO_CM"
	LanguagecodeFA             Languagecode = "FA"
	LanguagecodeFA_AF          Languagecode = "FA_AF"
	LanguagecodeFA_IR          Languagecode = "FA_IR"
	LanguagecodeFF             Languagecode = "FF"
	LanguagecodeFF_ADLM        Languagecode = "FF_ADLM"
	LanguagecodeFF_ADLM_BF     Languagecode = "FF_ADLM_BF"
	LanguagecodeFF_ADLM_CM     Languagecode = "FF_ADLM_CM"
	LanguagecodeFF_ADLM_GH     Languagecode = "FF_ADLM_GH"
	LanguagecodeFF_ADLM_GM     Languagecode = "FF_ADLM_GM"
	LanguagecodeFF_ADLM_GN     Languagecode = "FF_ADLM_GN"
	LanguagecodeFF_ADLM_GW     Languagecode = "FF_ADLM_GW"
	LanguagecodeFF_ADLM_LR     Languagecode = "FF_ADLM_LR"
	LanguagecodeFF_ADLM_MR     Languagecode = "FF_ADLM_MR"
	LanguagecodeFF_ADLM_NE     Languagecode = "FF_ADLM_NE"
	LanguagecodeFF_ADLM_NG     Languagecode = "FF_ADLM_NG"
	LanguagecodeFF_ADLM_SL     Languagecode = "FF_ADLM_SL"
	LanguagecodeFF_ADLM_SN     Languagecode = "FF_ADLM_SN"
	LanguagecodeFF_LATN        Languagecode = "FF_LATN"
	LanguagecodeFF_LATN_BF     Languagecode = "FF_LATN_BF"
	LanguagecodeFF_LATN_CM     Languagecode = "FF_LATN_CM"
	LanguagecodeFF_LATN_GH     Languagecode = "FF_LATN_GH"
	LanguagecodeFF_LATN_GM     Languagecode = "FF_LATN_GM"
	LanguagecodeFF_LATN_GN     Languagecode = "FF_LATN_GN"
	LanguagecodeFF_LATN_GW     Languagecode = "FF_LATN_GW"
	LanguagecodeFF_LATN_LR     Languagecode = "FF_LATN_LR"
	LanguagecodeFF_LATN_MR     Languagecode = "FF_LATN_MR"
	LanguagecodeFF_LATN_NE     Languagecode = "FF_LATN_NE"
	LanguagecodeFF_LATN_NG     Languagecode = "FF_LATN_NG"
	LanguagecodeFF_LATN_SL     Languagecode = "FF_LATN_SL"
	LanguagecodeFF_LATN_SN     Languagecode = "FF_LATN_SN"
	LanguagecodeFI             Languagecode = "FI"
	LanguagecodeFI_FI          Languagecode = "FI_FI"
	LanguagecodeFIL            Languagecode = "FIL"
	LanguagecodeFIL_PH         Languagecode = "FIL_PH"
	LanguagecodeFO             Languagecode = "FO"
	LanguagecodeFO_DK          Languagecode = "FO_DK"
	LanguagecodeFO_FO          Languagecode = "FO_FO"
	LanguagecodeFR             Languagecode = "FR"
	LanguagecodeFR_BE          Languagecode = "FR_BE"
	LanguagecodeFR_BF          Languagecode = "FR_BF"
	LanguagecodeFR_BI          Languagecode = "FR_BI"
	LanguagecodeFR_BJ          Languagecode = "FR_BJ"
	LanguagecodeFR_BL          Languagecode = "FR_BL"
	LanguagecodeFR_CA          Languagecode = "FR_CA"
	LanguagecodeFR_CD          Languagecode = "FR_CD"
	LanguagecodeFR_CF          Languagecode = "FR_CF"
	LanguagecodeFR_CG          Languagecode = "FR_CG"
	LanguagecodeFR_CH          Languagecode = "FR_CH"
	LanguagecodeFR_CI          Languagecode = "FR_CI"
	LanguagecodeFR_CM          Languagecode = "FR_CM"
	LanguagecodeFR_DJ          Languagecode = "FR_DJ"
	LanguagecodeFR_DZ          Languagecode = "FR_DZ"
	LanguagecodeFR_FR          Languagecode = "FR_FR"
	LanguagecodeFR_GA          Languagecode = "FR_GA"
	LanguagecodeFR_GF          Languagecode = "FR_GF"
	LanguagecodeFR_GN          Languagecode = "FR_GN"
	LanguagecodeFR_GP          Languagecode = "FR_GP"
	LanguagecodeFR_GQ          Languagecode = "FR_GQ"
	LanguagecodeFR_HT          Languagecode = "FR_HT"
	LanguagecodeFR_KM          Languagecode = "FR_KM"
	LanguagecodeFR_LU          Languagecode = "FR_LU"
	LanguagecodeFR_MA          Languagecode = "FR_MA"
	LanguagecodeFR_MC          Languagecode = "FR_MC"
	LanguagecodeFR_MF          Languagecode = "FR_MF"
	LanguagecodeFR_MG          Languagecode = "FR_MG"
	LanguagecodeFR_ML          Languagecode = "FR_ML"
	LanguagecodeFR_MQ          Languagecode = "FR_MQ"
	LanguagecodeFR_MR          Languagecode = "FR_MR"
	LanguagecodeFR_MU          Languagecode = "FR_MU"
	LanguagecodeFR_NC          Languagecode = "FR_NC"
	LanguagecodeFR_NE          Languagecode = "FR_NE"
	LanguagecodeFR_PF          Languagecode = "FR_PF"
	LanguagecodeFR_PM          Languagecode = "FR_PM"
	LanguagecodeFR_RE          Languagecode = "FR_RE"
	LanguagecodeFR_RW          Languagecode = "FR_RW"
	LanguagecodeFR_SC          Languagecode = "FR_SC"
	LanguagecodeFR_SN          Languagecode = "FR_SN"
	LanguagecodeFR_SY          Languagecode = "FR_SY"
	LanguagecodeFR_TD          Languagecode = "FR_TD"
	LanguagecodeFR_TG          Languagecode = "FR_TG"
	LanguagecodeFR_TN          Languagecode = "FR_TN"
	LanguagecodeFR_VU          Languagecode = "FR_VU"
	LanguagecodeFR_WF          Languagecode = "FR_WF"
	LanguagecodeFR_YT          Languagecode = "FR_YT"
	LanguagecodeFUR            Languagecode = "FUR"
	LanguagecodeFUR_IT         Languagecode = "FUR_IT"
	LanguagecodeFY             Languagecode = "FY"
	LanguagecodeFY_NL          Languagecode = "FY_NL"
	LanguagecodeGA             Languagecode = "GA"
	LanguagecodeGA_GB          Languagecode = "GA_GB"
	LanguagecodeGA_IE          Languagecode = "GA_IE"
	LanguagecodeGD             Languagecode = "GD"
	LanguagecodeGD_GB          Languagecode = "GD_GB"
	LanguagecodeGL             Languagecode = "GL"
	LanguagecodeGL_ES          Languagecode = "GL_ES"
	LanguagecodeGSW            Languagecode = "GSW"
	LanguagecodeGSW_CH         Languagecode = "GSW_CH"
	LanguagecodeGSW_FR         Languagecode = "GSW_FR"
	LanguagecodeGSW_LI         Languagecode = "GSW_LI"
	LanguagecodeGU             Languagecode = "GU"
	LanguagecodeGU_IN          Languagecode = "GU_IN"
	LanguagecodeGUZ            Languagecode = "GUZ"
	LanguagecodeGUZ_KE         Languagecode = "GUZ_KE"
	LanguagecodeGV             Languagecode = "GV"
	LanguagecodeGV_IM          Languagecode = "GV_IM"
	LanguagecodeHA             Languagecode = "HA"
	LanguagecodeHA_GH          Languagecode = "HA_GH"
	LanguagecodeHA_NE          Languagecode = "HA_NE"
	LanguagecodeHA_NG          Languagecode = "HA_NG"
	LanguagecodeHAW            Languagecode = "HAW"
	LanguagecodeHAW_US         Languagecode = "HAW_US"
	LanguagecodeHE             Languagecode = "HE"
	LanguagecodeHE_IL          Languagecode = "HE_IL"
	LanguagecodeHI             Languagecode = "HI"
	LanguagecodeHI_IN          Languagecode = "HI_IN"
	LanguagecodeHR             Languagecode = "HR"
	LanguagecodeHR_BA          Languagecode = "HR_BA"
	LanguagecodeHR_HR          Languagecode = "HR_HR"
	LanguagecodeHSB            Languagecode = "HSB"
	LanguagecodeHSB_DE         Languagecode = "HSB_DE"
	LanguagecodeHU             Languagecode = "HU"
	LanguagecodeHU_HU          Languagecode = "HU_HU"
	LanguagecodeHY             Languagecode = "HY"
	LanguagecodeHY_AM          Languagecode = "HY_AM"
	LanguagecodeIA             Languagecode = "IA"
	LanguagecodeSTRING         Languagecode = "STRING"
	LanguagecodeID_ID          Languagecode = "ID_ID"
	LanguagecodeIG             Languagecode = "IG"
	LanguagecodeIG_NG          Languagecode = "IG_NG"
	LanguagecodeII             Languagecode = "II"
	LanguagecodeII_CN          Languagecode = "II_CN"
	LanguagecodeIS             Languagecode = "IS"
	LanguagecodeIS_IS          Languagecode = "IS_IS"
	LanguagecodeIT             Languagecode = "IT"
	LanguagecodeIT_CH          Languagecode = "IT_CH"
	LanguagecodeIT_IT          Languagecode = "IT_IT"
	LanguagecodeIT_SM          Languagecode = "IT_SM"
	LanguagecodeIT_VA          Languagecode = "IT_VA"
	LanguagecodeJA             Languagecode = "JA"
	LanguagecodeJA_JP          Languagecode = "JA_JP"
	LanguagecodeJGO            Languagecode = "JGO"
	LanguagecodeJGO_CM         Languagecode = "JGO_CM"
	LanguagecodeJMC            Languagecode = "JMC"
	LanguagecodeJMC_TZ         Languagecode = "JMC_TZ"
	LanguagecodeJV             Languagecode = "JV"
	LanguagecodeJV_ID          Languagecode = "JV_ID"
	LanguagecodeKA             Languagecode = "KA"
	LanguagecodeKA_GE          Languagecode = "KA_GE"
	LanguagecodeKAB            Languagecode = "KAB"
	LanguagecodeKAB_DZ         Languagecode = "KAB_DZ"
	LanguagecodeKAM            Languagecode = "KAM"
	LanguagecodeKAM_KE         Languagecode = "KAM_KE"
	LanguagecodeKDE            Languagecode = "KDE"
	LanguagecodeKDE_TZ         Languagecode = "KDE_TZ"
	LanguagecodeKEA            Languagecode = "KEA"
	LanguagecodeKEA_CV         Languagecode = "KEA_CV"
	LanguagecodeKHQ            Languagecode = "KHQ"
	LanguagecodeKHQ_ML         Languagecode = "KHQ_ML"
	LanguagecodeKI             Languagecode = "KI"
	LanguagecodeKI_KE          Languagecode = "KI_KE"
	LanguagecodeKK             Languagecode = "KK"
	LanguagecodeKK_KZ          Languagecode = "KK_KZ"
	LanguagecodeKKJ            Languagecode = "KKJ"
	LanguagecodeKKJ_CM         Languagecode = "KKJ_CM"
	LanguagecodeKL             Languagecode = "KL"
	LanguagecodeKL_GL          Languagecode = "KL_GL"
	LanguagecodeKLN            Languagecode = "KLN"
	LanguagecodeKLN_KE         Languagecode = "KLN_KE"
	LanguagecodeKM             Languagecode = "KM"
	LanguagecodeKM_KH          Languagecode = "KM_KH"
	LanguagecodeKN             Languagecode = "KN"
	LanguagecodeKN_IN          Languagecode = "KN_IN"
	LanguagecodeKO             Languagecode = "KO"
	LanguagecodeKO_KP          Languagecode = "KO_KP"
	LanguagecodeKO_KR          Languagecode = "KO_KR"
	LanguagecodeKOK            Languagecode = "KOK"
	LanguagecodeKOK_IN         Languagecode = "KOK_IN"
	LanguagecodeKS             Languagecode = "KS"
	LanguagecodeKS_ARAB        Languagecode = "KS_ARAB"
	LanguagecodeKS_ARAB_IN     Languagecode = "KS_ARAB_IN"
	LanguagecodeKSB            Languagecode = "KSB"
	LanguagecodeKSB_TZ         Languagecode = "KSB_TZ"
	LanguagecodeKSF            Languagecode = "KSF"
	LanguagecodeKSF_CM         Languagecode = "KSF_CM"
	LanguagecodeKSH            Languagecode = "KSH"
	LanguagecodeKSH_DE         Languagecode = "KSH_DE"
	LanguagecodeKU             Languagecode = "KU"
	LanguagecodeKU_TR          Languagecode = "KU_TR"
	LanguagecodeKW             Languagecode = "KW"
	LanguagecodeKW_GB          Languagecode = "KW_GB"
	LanguagecodeKY             Languagecode = "KY"
	LanguagecodeKY_KG          Languagecode = "KY_KG"
	LanguagecodeLAG            Languagecode = "LAG"
	LanguagecodeLAG_TZ         Languagecode = "LAG_TZ"
	LanguagecodeLB             Languagecode = "LB"
	LanguagecodeLB_LU          Languagecode = "LB_LU"
	LanguagecodeLG             Languagecode = "LG"
	LanguagecodeLG_UG          Languagecode = "LG_UG"
	LanguagecodeLKT            Languagecode = "LKT"
	LanguagecodeLKT_US         Languagecode = "LKT_US"
	LanguagecodeLN             Languagecode = "LN"
	LanguagecodeLN_AO          Languagecode = "LN_AO"
	LanguagecodeLN_CD          Languagecode = "LN_CD"
	LanguagecodeLN_CF          Languagecode = "LN_CF"
	LanguagecodeLN_CG          Languagecode = "LN_CG"
	LanguagecodeLO             Languagecode = "LO"
	LanguagecodeLO_LA          Languagecode = "LO_LA"
	LanguagecodeLRC            Languagecode = "LRC"
	LanguagecodeLRC_IQ         Languagecode = "LRC_IQ"
	LanguagecodeLRC_IR         Languagecode = "LRC_IR"
	LanguagecodeLT             Languagecode = "LT"
	LanguagecodeLT_LT          Languagecode = "LT_LT"
	LanguagecodeLU             Languagecode = "LU"
	LanguagecodeLU_CD          Languagecode = "LU_CD"
	LanguagecodeLUO            Languagecode = "LUO"
	LanguagecodeLUO_KE         Languagecode = "LUO_KE"
	LanguagecodeLUY            Languagecode = "LUY"
	LanguagecodeLUY_KE         Languagecode = "LUY_KE"
	LanguagecodeLV             Languagecode = "LV"
	LanguagecodeLV_LV          Languagecode = "LV_LV"
	LanguagecodeMAI            Languagecode = "MAI"
	LanguagecodeMAI_IN         Languagecode = "MAI_IN"
	LanguagecodeMAS            Languagecode = "MAS"
	LanguagecodeMAS_KE         Languagecode = "MAS_KE"
	LanguagecodeMAS_TZ         Languagecode = "MAS_TZ"
	LanguagecodeMER            Languagecode = "MER"
	LanguagecodeMER_KE         Languagecode = "MER_KE"
	LanguagecodeMFE            Languagecode = "MFE"
	LanguagecodeMFE_MU         Languagecode = "MFE_MU"
	LanguagecodeMG             Languagecode = "MG"
	LanguagecodeMG_MG          Languagecode = "MG_MG"
	LanguagecodeMGH            Languagecode = "MGH"
	LanguagecodeMGH_MZ         Languagecode = "MGH_MZ"
	LanguagecodeMGO            Languagecode = "MGO"
	LanguagecodeMGO_CM         Languagecode = "MGO_CM"
	LanguagecodeMI             Languagecode = "MI"
	LanguagecodeMI_NZ          Languagecode = "MI_NZ"
	LanguagecodeMK             Languagecode = "MK"
	LanguagecodeMK_MK          Languagecode = "MK_MK"
	LanguagecodeML             Languagecode = "ML"
	LanguagecodeML_IN          Languagecode = "ML_IN"
	LanguagecodeMN             Languagecode = "MN"
	LanguagecodeMN_MN          Languagecode = "MN_MN"
	LanguagecodeMNI            Languagecode = "MNI"
	LanguagecodeMNI_BENG       Languagecode = "MNI_BENG"
	LanguagecodeMNI_BENG_IN    Languagecode = "MNI_BENG_IN"
	LanguagecodeMR             Languagecode = "MR"
	LanguagecodeMR_IN          Languagecode = "MR_IN"
	LanguagecodeMS             Languagecode = "MS"
	LanguagecodeMS_BN          Languagecode = "MS_BN"
	LanguagecodeMS_ID          Languagecode = "MS_ID"
	LanguagecodeMS_MY          Languagecode = "MS_MY"
	LanguagecodeMS_SG          Languagecode = "MS_SG"
	LanguagecodeMT             Languagecode = "MT"
	LanguagecodeMT_MT          Languagecode = "MT_MT"
	LanguagecodeMUA            Languagecode = "MUA"
	LanguagecodeMUA_CM         Languagecode = "MUA_CM"
	LanguagecodeMY             Languagecode = "MY"
	LanguagecodeMY_MM          Languagecode = "MY_MM"
	LanguagecodeMZN            Languagecode = "MZN"
	LanguagecodeMZN_IR         Languagecode = "MZN_IR"
	LanguagecodeNAQ            Languagecode = "NAQ"
	LanguagecodeNAQ_NA         Languagecode = "NAQ_NA"
	LanguagecodeNB             Languagecode = "NB"
	LanguagecodeNB_NO          Languagecode = "NB_NO"
	LanguagecodeNB_SJ          Languagecode = "NB_SJ"
	LanguagecodeND             Languagecode = "ND"
	LanguagecodeND_ZW          Languagecode = "ND_ZW"
	LanguagecodeNDS            Languagecode = "NDS"
	LanguagecodeNDS_DE         Languagecode = "NDS_DE"
	LanguagecodeNDS_NL         Languagecode = "NDS_NL"
	LanguagecodeNE             Languagecode = "NE"
	LanguagecodeNE_IN          Languagecode = "NE_IN"
	LanguagecodeNE_NP          Languagecode = "NE_NP"
	LanguagecodeNL             Languagecode = "NL"
	LanguagecodeNL_AW          Languagecode = "NL_AW"
	LanguagecodeNL_BE          Languagecode = "NL_BE"
	LanguagecodeNL_BQ          Languagecode = "NL_BQ"
	LanguagecodeNL_CW          Languagecode = "NL_CW"
	LanguagecodeNL_NL          Languagecode = "NL_NL"
	LanguagecodeNL_SR          Languagecode = "NL_SR"
	LanguagecodeNL_SX          Languagecode = "NL_SX"
	LanguagecodeNMG            Languagecode = "NMG"
	LanguagecodeNMG_CM         Languagecode = "NMG_CM"
	LanguagecodeNN             Languagecode = "NN"
	LanguagecodeNN_NO          Languagecode = "NN_NO"
	LanguagecodeNNH            Languagecode = "NNH"
	LanguagecodeNNH_CM         Languagecode = "NNH_CM"
	LanguagecodeNUS            Languagecode = "NUS"
	LanguagecodeNUS_SS         Languagecode = "NUS_SS"
	LanguagecodeNYN            Languagecode = "NYN"
	LanguagecodeNYN_UG         Languagecode = "NYN_UG"
	LanguagecodeOM             Languagecode = "OM"
	LanguagecodeOM_ET          Languagecode = "OM_ET"
	LanguagecodeOM_KE          Languagecode = "OM_KE"
	LanguagecodeOR             Languagecode = "OR"
	LanguagecodeOR_IN          Languagecode = "OR_IN"
	LanguagecodeOS             Languagecode = "OS"
	LanguagecodeOS_GE          Languagecode = "OS_GE"
	LanguagecodeOS_RU          Languagecode = "OS_RU"
	LanguagecodePA             Languagecode = "PA"
	LanguagecodePA_ARAB        Languagecode = "PA_ARAB"
	LanguagecodePA_ARAB_PK     Languagecode = "PA_ARAB_PK"
	LanguagecodePA_GURU        Languagecode = "PA_GURU"
	LanguagecodePA_GURU_IN     Languagecode = "PA_GURU_IN"
	LanguagecodePCM            Languagecode = "PCM"
	LanguagecodePCM_NG         Languagecode = "PCM_NG"
	LanguagecodePL             Languagecode = "PL"
	LanguagecodePL_PL          Languagecode = "PL_PL"
	LanguagecodePRG            Languagecode = "PRG"
	LanguagecodePS             Languagecode = "PS"
	LanguagecodePS_AF          Languagecode = "PS_AF"
	LanguagecodePS_PK          Languagecode = "PS_PK"
	LanguagecodePT             Languagecode = "PT"
	LanguagecodePT_AO          Languagecode = "PT_AO"
	LanguagecodePT_BR          Languagecode = "PT_BR"
	LanguagecodePT_CH          Languagecode = "PT_CH"
	LanguagecodePT_CV          Languagecode = "PT_CV"
	LanguagecodePT_GQ          Languagecode = "PT_GQ"
	LanguagecodePT_GW          Languagecode = "PT_GW"
	LanguagecodePT_LU          Languagecode = "PT_LU"
	LanguagecodePT_MO          Languagecode = "PT_MO"
	LanguagecodePT_MZ          Languagecode = "PT_MZ"
	LanguagecodePT_PT          Languagecode = "PT_PT"
	LanguagecodePT_ST          Languagecode = "PT_ST"
	LanguagecodePT_TL          Languagecode = "PT_TL"
	LanguagecodeQU             Languagecode = "QU"
	LanguagecodeQU_BO          Languagecode = "QU_BO"
	LanguagecodeQU_EC          Languagecode = "QU_EC"
	LanguagecodeQU_PE          Languagecode = "QU_PE"
	LanguagecodeRM             Languagecode = "RM"
	LanguagecodeRM_CH          Languagecode = "RM_CH"
	LanguagecodeRN             Languagecode = "RN"
	LanguagecodeRN_BI          Languagecode = "RN_BI"
	LanguagecodeRO             Languagecode = "RO"
	LanguagecodeRO_MD          Languagecode = "RO_MD"
	LanguagecodeRO_RO          Languagecode = "RO_RO"
	LanguagecodeROF            Languagecode = "ROF"
	LanguagecodeROF_TZ         Languagecode = "ROF_TZ"
	LanguagecodeRU             Languagecode = "RU"
	LanguagecodeRU_BY          Languagecode = "RU_BY"
	LanguagecodeRU_KG          Languagecode = "RU_KG"
	LanguagecodeRU_KZ          Languagecode = "RU_KZ"
	LanguagecodeRU_MD          Languagecode = "RU_MD"
	LanguagecodeRU_RU          Languagecode = "RU_RU"
	LanguagecodeRU_UA          Languagecode = "RU_UA"
	LanguagecodeRW             Languagecode = "RW"
	LanguagecodeRW_RW          Languagecode = "RW_RW"
	LanguagecodeRWK            Languagecode = "RWK"
	LanguagecodeRWK_TZ         Languagecode = "RWK_TZ"
	LanguagecodeSAH            Languagecode = "SAH"
	LanguagecodeSAH_RU         Languagecode = "SAH_RU"
	LanguagecodeSAQ            Languagecode = "SAQ"
	LanguagecodeSAQ_KE         Languagecode = "SAQ_KE"
	LanguagecodeSAT            Languagecode = "SAT"
	LanguagecodeSAT_OLCK       Languagecode = "SAT_OLCK"
	LanguagecodeSAT_OLCK_IN    Languagecode = "SAT_OLCK_IN"
	LanguagecodeSBP            Languagecode = "SBP"
	LanguagecodeSBP_TZ         Languagecode = "SBP_TZ"
	LanguagecodeSD             Languagecode = "SD"
	LanguagecodeSD_ARAB        Languagecode = "SD_ARAB"
	LanguagecodeSD_ARAB_PK     Languagecode = "SD_ARAB_PK"
	LanguagecodeSD_DEVA        Languagecode = "SD_DEVA"
	LanguagecodeSD_DEVA_IN     Languagecode = "SD_DEVA_IN"
	LanguagecodeSE             Languagecode = "SE"
	LanguagecodeSE_FI          Languagecode = "SE_FI"
	LanguagecodeSE_NO          Languagecode = "SE_NO"
	LanguagecodeSE_SE          Languagecode = "SE_SE"
	LanguagecodeSEH            Languagecode = "SEH"
	LanguagecodeSEH_MZ         Languagecode = "SEH_MZ"
	LanguagecodeSES            Languagecode = "SES"
	LanguagecodeSES_ML         Languagecode = "SES_ML"
	LanguagecodeSG             Languagecode = "SG"
	LanguagecodeSG_CF          Languagecode = "SG_CF"
	LanguagecodeSHI            Languagecode = "SHI"
	LanguagecodeSHI_LATN       Languagecode = "SHI_LATN"
	LanguagecodeSHI_LATN_MA    Languagecode = "SHI_LATN_MA"
	LanguagecodeSHI_TFNG       Languagecode = "SHI_TFNG"
	LanguagecodeSHI_TFNG_MA    Languagecode = "SHI_TFNG_MA"
	LanguagecodeSI             Languagecode = "SI"
	LanguagecodeSI_LK          Languagecode = "SI_LK"
	LanguagecodeSK             Languagecode = "SK"
	LanguagecodeSK_SK          Languagecode = "SK_SK"
	LanguagecodeSL             Languagecode = "SL"
	LanguagecodeSL_SI          Languagecode = "SL_SI"
	LanguagecodeSMN            Languagecode = "SMN"
	LanguagecodeSMN_FI         Languagecode = "SMN_FI"
	LanguagecodeSN             Languagecode = "SN"
	LanguagecodeSN_ZW          Languagecode = "SN_ZW"
	LanguagecodeSO             Languagecode = "SO"
	LanguagecodeSO_DJ          Languagecode = "SO_DJ"
	LanguagecodeSO_ET          Languagecode = "SO_ET"
	LanguagecodeSO_KE          Languagecode = "SO_KE"
	LanguagecodeSO_SO          Languagecode = "SO_SO"
	LanguagecodeSQ             Languagecode = "SQ"
	LanguagecodeSQ_AL          Languagecode = "SQ_AL"
	LanguagecodeSQ_MK          Languagecode = "SQ_MK"
	LanguagecodeSQ_XK          Languagecode = "SQ_XK"
	LanguagecodeSR             Languagecode = "SR"
	LanguagecodeSR_CYRL        Languagecode = "SR_CYRL"
	LanguagecodeSR_CYRL_BA     Languagecode = "SR_CYRL_BA"
	LanguagecodeSR_CYRL_ME     Languagecode = "SR_CYRL_ME"
	LanguagecodeSR_CYRL_RS     Languagecode = "SR_CYRL_RS"
	LanguagecodeSR_CYRL_XK     Languagecode = "SR_CYRL_XK"
	LanguagecodeSR_LATN        Languagecode = "SR_LATN"
	LanguagecodeSR_LATN_BA     Languagecode = "SR_LATN_BA"
	LanguagecodeSR_LATN_ME     Languagecode = "SR_LATN_ME"
	LanguagecodeSR_LATN_RS     Languagecode = "SR_LATN_RS"
	LanguagecodeSR_LATN_XK     Languagecode = "SR_LATN_XK"
	LanguagecodeSU             Languagecode = "SU"
	LanguagecodeSU_LATN        Languagecode = "SU_LATN"
	LanguagecodeSU_LATN_ID     Languagecode = "SU_LATN_ID"
	LanguagecodeSV             Languagecode = "SV"
	LanguagecodeSV_AX          Languagecode = "SV_AX"
	LanguagecodeSV_FI          Languagecode = "SV_FI"
	LanguagecodeSV_SE          Languagecode = "SV_SE"
	LanguagecodeSW             Languagecode = "SW"
	LanguagecodeSW_CD          Languagecode = "SW_CD"
	LanguagecodeSW_KE          Languagecode = "SW_KE"
	LanguagecodeSW_TZ          Languagecode = "SW_TZ"
	LanguagecodeSW_UG          Languagecode = "SW_UG"
	LanguagecodeTA             Languagecode = "TA"
	LanguagecodeTA_IN          Languagecode = "TA_IN"
	LanguagecodeTA_LK          Languagecode = "TA_LK"
	LanguagecodeTA_MY          Languagecode = "TA_MY"
	LanguagecodeTA_SG          Languagecode = "TA_SG"
	LanguagecodeTE             Languagecode = "TE"
	LanguagecodeTE_IN          Languagecode = "TE_IN"
	LanguagecodeTEO            Languagecode = "TEO"
	LanguagecodeTEO_KE         Languagecode = "TEO_KE"
	LanguagecodeTEO_UG         Languagecode = "TEO_UG"
	LanguagecodeTG             Languagecode = "TG"
	LanguagecodeTG_TJ          Languagecode = "TG_TJ"
	LanguagecodeTH             Languagecode = "TH"
	LanguagecodeTH_TH          Languagecode = "TH_TH"
	LanguagecodeTI             Languagecode = "TI"
	LanguagecodeTI_ER          Languagecode = "TI_ER"
	LanguagecodeTI_ET          Languagecode = "TI_ET"
	LanguagecodeTK             Languagecode = "TK"
	LanguagecodeTK_TM          Languagecode = "TK_TM"
	LanguagecodeTO             Languagecode = "TO"
	LanguagecodeTO_TO          Languagecode = "TO_TO"
	LanguagecodeTR             Languagecode = "TR"
	LanguagecodeTR_CY          Languagecode = "TR_CY"
	LanguagecodeTR_TR          Languagecode = "TR_TR"
	LanguagecodeTT             Languagecode = "TT"
	LanguagecodeTT_RU          Languagecode = "TT_RU"
	LanguagecodeTWQ            Languagecode = "TWQ"
	LanguagecodeTWQ_NE         Languagecode = "TWQ_NE"
	LanguagecodeTZM            Languagecode = "TZM"
	LanguagecodeTZM_MA         Languagecode = "TZM_MA"
	LanguagecodeUG             Languagecode = "UG"
	LanguagecodeUG_CN          Languagecode = "UG_CN"
	LanguagecodeUK             Languagecode = "UK"
	LanguagecodeUK_UA          Languagecode = "UK_UA"
	LanguagecodeUR             Languagecode = "UR"
	LanguagecodeUR_IN          Languagecode = "UR_IN"
	LanguagecodeUR_PK          Languagecode = "UR_PK"
	LanguagecodeUZ             Languagecode = "UZ"
	LanguagecodeUZ_ARAB        Languagecode = "UZ_ARAB"
	LanguagecodeUZ_ARAB_AF     Languagecode = "UZ_ARAB_AF"
	LanguagecodeUZ_CYRL        Languagecode = "UZ_CYRL"
	LanguagecodeUZ_CYRL_UZ     Languagecode = "UZ_CYRL_UZ"
	LanguagecodeUZ_LATN        Languagecode = "UZ_LATN"
	LanguagecodeUZ_LATN_UZ     Languagecode = "UZ_LATN_UZ"
	LanguagecodeVAI            Languagecode = "VAI"
	LanguagecodeVAI_LATN       Languagecode = "VAI_LATN"
	LanguagecodeVAI_LATN_LR    Languagecode = "VAI_LATN_LR"
	LanguagecodeVAI_VAII       Languagecode = "VAI_VAII"
	LanguagecodeVAI_VAII_LR    Languagecode = "VAI_VAII_LR"
	LanguagecodeVI             Languagecode = "VI"
	LanguagecodeVI_VN          Languagecode = "VI_VN"
	LanguagecodeVO             Languagecode = "VO"
	LanguagecodeVUN            Languagecode = "VUN"
	LanguagecodeVUN_TZ         Languagecode = "VUN_TZ"
	LanguagecodeWAE            Languagecode = "WAE"
	LanguagecodeWAE_CH         Languagecode = "WAE_CH"
	LanguagecodeWO             Languagecode = "WO"
	LanguagecodeWO_SN          Languagecode = "WO_SN"
	LanguagecodeXH             Languagecode = "XH"
	LanguagecodeXH_ZA          Languagecode = "XH_ZA"
	LanguagecodeXOG            Languagecode = "XOG"
	LanguagecodeXOG_UG         Languagecode = "XOG_UG"
	LanguagecodeYAV            Languagecode = "YAV"
	LanguagecodeYAV_CM         Languagecode = "YAV_CM"
	LanguagecodeYI             Languagecode = "YI"
	LanguagecodeYO             Languagecode = "YO"
	LanguagecodeYO_BJ          Languagecode = "YO_BJ"
	LanguagecodeYO_NG          Languagecode = "YO_NG"
	LanguagecodeYUE            Languagecode = "YUE"
	LanguagecodeYUE_HANS       Languagecode = "YUE_HANS"
	LanguagecodeYUE_HANS_CN    Languagecode = "YUE_HANS_CN"
	LanguagecodeYUE_HANT       Languagecode = "YUE_HANT"
	LanguagecodeYUE_HANT_HK    Languagecode = "YUE_HANT_HK"
	LanguagecodeZGH            Languagecode = "ZGH"
	LanguagecodeZGH_MA         Languagecode = "ZGH_MA"
	LanguagecodeZH             Languagecode = "ZH"
	LanguagecodeZH_HANS        Languagecode = "ZH_HANS"
	LanguagecodeZH_HANS_CN     Languagecode = "ZH_HANS_CN"
	LanguagecodeZH_HANS_HK     Languagecode = "ZH_HANS_HK"
	LanguagecodeZH_HANS_MO     Languagecode = "ZH_HANS_MO"
	LanguagecodeZH_HANS_SG     Languagecode = "ZH_HANS_SG"
	LanguagecodeZH_HANT        Languagecode = "ZH_HANT"
	LanguagecodeZH_HANT_HK     Languagecode = "ZH_HANT_HK"
	LanguagecodeZH_HANT_MO     Languagecode = "ZH_HANT_MO"
	LanguagecodeZH_HANT_TW     Languagecode = "ZH_HANT_TW"
	LanguagecodeZU             Languagecode = "ZU"
	LanguagecodeZU_ZA          Languagecode = "ZU_ZA"
)

func AllLanguagecode() []Languagecode {
	return []Languagecode{
		LanguagecodeAF,
		LanguagecodeAF_NA,
		LanguagecodeID,
		LanguagecodeAF_ZA,
		LanguagecodeAGQ,
		LanguagecodeAGQ_CM,
		LanguagecodeAK,
		LanguagecodeAK_GH,
		LanguagecodeAM,
		LanguagecodeAM_ET,
		LanguagecodeAR,
		LanguagecodeAR_AE,
		LanguagecodeAR_BH,
		LanguagecodeAR_DJ,
		LanguagecodeAR_DZ,
		LanguagecodeAR_EG,
		LanguagecodeAR_EH,
		LanguagecodeAR_ER,
		LanguagecodeAR_IL,
		LanguagecodeAR_IQ,
		LanguagecodeAR_JO,
		LanguagecodeAR_KM,
		LanguagecodeAR_KW,
		LanguagecodeAR_LB,
		LanguagecodeAR_LY,
		LanguagecodeAR_MA,
		LanguagecodeAR_MR,
		LanguagecodeAR_OM,
		LanguagecodeAR_PS,
		LanguagecodeAR_QA,
		LanguagecodeAR_SA,
		LanguagecodeAR_SD,
		LanguagecodeAR_SO,
		LanguagecodeAR_SS,
		LanguagecodeAR_SY,
		LanguagecodeAR_TD,
		LanguagecodeAR_TN,
		LanguagecodeAR_YE,
		LanguagecodeAS,
		LanguagecodeAS_IN,
		LanguagecodeASA,
		LanguagecodeASA_TZ,
		LanguagecodeAST,
		LanguagecodeAST_ES,
		LanguagecodeAZ,
		LanguagecodeAZ_CYRL,
		LanguagecodeAZ_CYRL_AZ,
		LanguagecodeAZ_LATN,
		LanguagecodeAZ_LATN_AZ,
		LanguagecodeBAS,
		LanguagecodeBAS_CM,
		LanguagecodeBE,
		LanguagecodeBE_BY,
		LanguagecodeBEM,
		LanguagecodeBEM_ZM,
		LanguagecodeBEZ,
		LanguagecodeBEZ_TZ,
		LanguagecodeBG,
		LanguagecodeBG_BG,
		LanguagecodeBM,
		LanguagecodeBM_ML,
		LanguagecodeBN,
		LanguagecodeBN_BD,
		LanguagecodeBN_IN,
		LanguagecodeBO,
		LanguagecodeBO_CN,
		LanguagecodeBO_IN,
		LanguagecodeBR,
		LanguagecodeBR_FR,
		LanguagecodeBRX,
		LanguagecodeBRX_IN,
		LanguagecodeBS,
		LanguagecodeBS_CYRL,
		LanguagecodeBS_CYRL_BA,
		LanguagecodeBS_LATN,
		LanguagecodeBS_LATN_BA,
		LanguagecodeCA,
		LanguagecodeCA_AD,
		LanguagecodeCA_ES,
		LanguagecodeCA_ES_VALENCIA,
		LanguagecodeCA_FR,
		LanguagecodeCA_IT,
		LanguagecodeCCP,
		LanguagecodeCCP_BD,
		LanguagecodeCCP_IN,
		LanguagecodeCE,
		LanguagecodeCE_RU,
		LanguagecodeCEB,
		LanguagecodeCEB_PH,
		LanguagecodeCGG,
		LanguagecodeCGG_UG,
		LanguagecodeCHR,
		LanguagecodeCHR_US,
		LanguagecodeCKB,
		LanguagecodeCKB_IQ,
		LanguagecodeCKB_IR,
		LanguagecodeCS,
		LanguagecodeCS_CZ,
		LanguagecodeCU,
		LanguagecodeCU_RU,
		LanguagecodeCY,
		LanguagecodeCY_GB,
		LanguagecodeDA,
		LanguagecodeDA_DK,
		LanguagecodeDA_GL,
		LanguagecodeDAV,
		LanguagecodeDAV_KE,
		LanguagecodeDE,
		LanguagecodeDE_AT,
		LanguagecodeDE_BE,
		LanguagecodeDE_CH,
		LanguagecodeDE_DE,
		LanguagecodeDE_IT,
		LanguagecodeDE_LI,
		LanguagecodeDE_LU,
		LanguagecodeDJE,
		LanguagecodeDJE_NE,
		LanguagecodeDSB,
		LanguagecodeDSB_DE,
		LanguagecodeDUA,
		LanguagecodeDUA_CM,
		LanguagecodeDYO,
		LanguagecodeDYO_SN,
		LanguagecodeDZ,
		LanguagecodeDZ_BT,
		LanguagecodeEBU,
		LanguagecodeEBU_KE,
		LanguagecodeEE,
		LanguagecodeEE_GH,
		LanguagecodeEE_TG,
		LanguagecodeEL,
		LanguagecodeEL_CY,
		LanguagecodeEL_GR,
		LanguagecodeEN,
		LanguagecodeEN_AE,
		LanguagecodeEN_AG,
		LanguagecodeEN_AI,
		LanguagecodeEN_AS,
		LanguagecodeEN_AT,
		LanguagecodeEN_AU,
		LanguagecodeEN_BB,
		LanguagecodeEN_BE,
		LanguagecodeEN_BI,
		LanguagecodeEN_BM,
		LanguagecodeEN_BS,
		LanguagecodeEN_BW,
		LanguagecodeEN_BZ,
		LanguagecodeEN_CA,
		LanguagecodeEN_CC,
		LanguagecodeEN_CH,
		LanguagecodeEN_CK,
		LanguagecodeEN_CM,
		LanguagecodeEN_CX,
		LanguagecodeEN_CY,
		LanguagecodeEN_DE,
		LanguagecodeEN_DG,
		LanguagecodeEN_DK,
		LanguagecodeEN_DM,
		LanguagecodeEN_ER,
		LanguagecodeEN_FI,
		LanguagecodeEN_FJ,
		LanguagecodeEN_FK,
		LanguagecodeEN_FM,
		LanguagecodeEN_GB,
		LanguagecodeEN_GD,
		LanguagecodeEN_GG,
		LanguagecodeEN_GH,
		LanguagecodeEN_GI,
		LanguagecodeEN_GM,
		LanguagecodeEN_GU,
		LanguagecodeEN_GY,
		LanguagecodeEN_HK,
		LanguagecodeEN_IE,
		LanguagecodeEN_IL,
		LanguagecodeEN_IM,
		LanguagecodeEN_IN,
		LanguagecodeEN_IO,
		LanguagecodeEN_JE,
		LanguagecodeEN_JM,
		LanguagecodeEN_KE,
		LanguagecodeEN_KI,
		LanguagecodeEN_KN,
		LanguagecodeEN_KY,
		LanguagecodeEN_LC,
		LanguagecodeEN_LR,
		LanguagecodeEN_LS,
		LanguagecodeEN_MG,
		LanguagecodeEN_MH,
		LanguagecodeEN_MO,
		LanguagecodeEN_MP,
		LanguagecodeEN_MS,
		LanguagecodeEN_MT,
		LanguagecodeEN_MU,
		LanguagecodeEN_MW,
		LanguagecodeEN_MY,
		LanguagecodeEN_NA,
		LanguagecodeEN_NF,
		LanguagecodeEN_NG,
		LanguagecodeEN_NL,
		LanguagecodeEN_NR,
		LanguagecodeEN_NU,
		LanguagecodeEN_NZ,
		LanguagecodeEN_PG,
		LanguagecodeEN_PH,
		LanguagecodeEN_PK,
		LanguagecodeEN_PN,
		LanguagecodeEN_PR,
		LanguagecodeEN_PW,
		LanguagecodeEN_RW,
		LanguagecodeEN_SB,
		LanguagecodeEN_SC,
		LanguagecodeEN_SD,
		LanguagecodeEN_SE,
		LanguagecodeEN_SG,
		LanguagecodeEN_SH,
		LanguagecodeEN_SI,
		LanguagecodeEN_SL,
		LanguagecodeEN_SS,
		LanguagecodeEN_SX,
		LanguagecodeEN_SZ,
		LanguagecodeEN_TC,
		LanguagecodeEN_TK,
		LanguagecodeEN_TO,
		LanguagecodeEN_TT,
		LanguagecodeEN_TV,
		LanguagecodeEN_TZ,
		LanguagecodeEN_UG,
		LanguagecodeEN_UM,
		LanguagecodeEN_US,
		LanguagecodeEN_VC,
		LanguagecodeEN_VG,
		LanguagecodeEN_VI,
		LanguagecodeEN_VU,
		LanguagecodeEN_WS,
		LanguagecodeEN_ZA,
		LanguagecodeEN_ZM,
		LanguagecodeEN_ZW,
		LanguagecodeEO,
		LanguagecodeES,
		LanguagecodeES_AR,
		LanguagecodeES_BO,
		LanguagecodeES_BR,
		LanguagecodeES_BZ,
		LanguagecodeES_CL,
		LanguagecodeES_CO,
		LanguagecodeES_CR,
		LanguagecodeES_CU,
		LanguagecodeES_DO,
		LanguagecodeES_EA,
		LanguagecodeES_EC,
		LanguagecodeES_ES,
		LanguagecodeES_GQ,
		LanguagecodeES_GT,
		LanguagecodeES_HN,
		LanguagecodeES_IC,
		LanguagecodeES_MX,
		LanguagecodeES_NI,
		LanguagecodeES_PA,
		LanguagecodeES_PE,
		LanguagecodeES_PH,
		LanguagecodeES_PR,
		LanguagecodeES_PY,
		LanguagecodeES_SV,
		LanguagecodeES_US,
		LanguagecodeES_UY,
		LanguagecodeES_VE,
		LanguagecodeET,
		LanguagecodeET_EE,
		LanguagecodeEU,
		LanguagecodeEU_ES,
		LanguagecodeEWO,
		LanguagecodeEWO_CM,
		LanguagecodeFA,
		LanguagecodeFA_AF,
		LanguagecodeFA_IR,
		LanguagecodeFF,
		LanguagecodeFF_ADLM,
		LanguagecodeFF_ADLM_BF,
		LanguagecodeFF_ADLM_CM,
		LanguagecodeFF_ADLM_GH,
		LanguagecodeFF_ADLM_GM,
		LanguagecodeFF_ADLM_GN,
		LanguagecodeFF_ADLM_GW,
		LanguagecodeFF_ADLM_LR,
		LanguagecodeFF_ADLM_MR,
		LanguagecodeFF_ADLM_NE,
		LanguagecodeFF_ADLM_NG,
		LanguagecodeFF_ADLM_SL,
		LanguagecodeFF_ADLM_SN,
		LanguagecodeFF_LATN,
		LanguagecodeFF_LATN_BF,
		LanguagecodeFF_LATN_CM,
		LanguagecodeFF_LATN_GH,
		LanguagecodeFF_LATN_GM,
		LanguagecodeFF_LATN_GN,
		LanguagecodeFF_LATN_GW,
		LanguagecodeFF_LATN_LR,
		LanguagecodeFF_LATN_MR,
		LanguagecodeFF_LATN_NE,
		LanguagecodeFF_LATN_NG,
		LanguagecodeFF_LATN_SL,
		LanguagecodeFF_LATN_SN,
		LanguagecodeFI,
		LanguagecodeFI_FI,
		LanguagecodeFIL,
		LanguagecodeFIL_PH,
		LanguagecodeFO,
		LanguagecodeFO_DK,
		LanguagecodeFO_FO,
		LanguagecodeFR,
		LanguagecodeFR_BE,
		LanguagecodeFR_BF,
		LanguagecodeFR_BI,
		LanguagecodeFR_BJ,
		LanguagecodeFR_BL,
		LanguagecodeFR_CA,
		LanguagecodeFR_CD,
		LanguagecodeFR_CF,
		LanguagecodeFR_CG,
		LanguagecodeFR_CH,
		LanguagecodeFR_CI,
		LanguagecodeFR_CM,
		LanguagecodeFR_DJ,
		LanguagecodeFR_DZ,
		LanguagecodeFR_FR,
		LanguagecodeFR_GA,
		LanguagecodeFR_GF,
		LanguagecodeFR_GN,
		LanguagecodeFR_GP,
		LanguagecodeFR_GQ,
		LanguagecodeFR_HT,
		LanguagecodeFR_KM,
		LanguagecodeFR_LU,
		LanguagecodeFR_MA,
		LanguagecodeFR_MC,
		LanguagecodeFR_MF,
		LanguagecodeFR_MG,
		LanguagecodeFR_ML,
		LanguagecodeFR_MQ,
		LanguagecodeFR_MR,
		LanguagecodeFR_MU,
		LanguagecodeFR_NC,
		LanguagecodeFR_NE,
		LanguagecodeFR_PF,
		LanguagecodeFR_PM,
		LanguagecodeFR_RE,
		LanguagecodeFR_RW,
		LanguagecodeFR_SC,
		LanguagecodeFR_SN,
		LanguagecodeFR_SY,
		LanguagecodeFR_TD,
		LanguagecodeFR_TG,
		LanguagecodeFR_TN,
		LanguagecodeFR_VU,
		LanguagecodeFR_WF,
		LanguagecodeFR_YT,
		LanguagecodeFUR,
		LanguagecodeFUR_IT,
		LanguagecodeFY,
		LanguagecodeFY_NL,
		LanguagecodeGA,
		LanguagecodeGA_GB,
		LanguagecodeGA_IE,
		LanguagecodeGD,
		LanguagecodeGD_GB,
		LanguagecodeGL,
		LanguagecodeGL_ES,
		LanguagecodeGSW,
		LanguagecodeGSW_CH,
		LanguagecodeGSW_FR,
		LanguagecodeGSW_LI,
		LanguagecodeGU,
		LanguagecodeGU_IN,
		LanguagecodeGUZ,
		LanguagecodeGUZ_KE,
		LanguagecodeGV,
		LanguagecodeGV_IM,
		LanguagecodeHA,
		LanguagecodeHA_GH,
		LanguagecodeHA_NE,
		LanguagecodeHA_NG,
		LanguagecodeHAW,
		LanguagecodeHAW_US,
		LanguagecodeHE,
		LanguagecodeHE_IL,
		LanguagecodeHI,
		LanguagecodeHI_IN,
		LanguagecodeHR,
		LanguagecodeHR_BA,
		LanguagecodeHR_HR,
		LanguagecodeHSB,
		LanguagecodeHSB_DE,
		LanguagecodeHU,
		LanguagecodeHU_HU,
		LanguagecodeHY,
		LanguagecodeHY_AM,
		LanguagecodeIA,
		LanguagecodeSTRING,
		LanguagecodeID_ID,
		LanguagecodeIG,
		LanguagecodeIG_NG,
		LanguagecodeII,
		LanguagecodeII_CN,
		LanguagecodeIS,
		LanguagecodeIS_IS,
		LanguagecodeIT,
		LanguagecodeIT_CH,
		LanguagecodeIT_IT,
		LanguagecodeIT_SM,
		LanguagecodeIT_VA,
		LanguagecodeJA,
		LanguagecodeJA_JP,
		LanguagecodeJGO,
		LanguagecodeJGO_CM,
		LanguagecodeJMC,
		LanguagecodeJMC_TZ,
		LanguagecodeJV,
		LanguagecodeJV_ID,
		LanguagecodeKA,
		LanguagecodeKA_GE,
		LanguagecodeKAB,
		LanguagecodeKAB_DZ,
		LanguagecodeKAM,
		LanguagecodeKAM_KE,
		LanguagecodeKDE,
		LanguagecodeKDE_TZ,
		LanguagecodeKEA,
		LanguagecodeKEA_CV,
		LanguagecodeKHQ,
		LanguagecodeKHQ_ML,
		LanguagecodeKI,
		LanguagecodeKI_KE,
		LanguagecodeKK,
		LanguagecodeKK_KZ,
		LanguagecodeKKJ,
		LanguagecodeKKJ_CM,
		LanguagecodeKL,
		LanguagecodeKL_GL,
		LanguagecodeKLN,
		LanguagecodeKLN_KE,
		LanguagecodeKM,
		LanguagecodeKM_KH,
		LanguagecodeKN,
		LanguagecodeKN_IN,
		LanguagecodeKO,
		LanguagecodeKO_KP,
		LanguagecodeKO_KR,
		LanguagecodeKOK,
		LanguagecodeKOK_IN,
		LanguagecodeKS,
		LanguagecodeKS_ARAB,
		LanguagecodeKS_ARAB_IN,
		LanguagecodeKSB,
		LanguagecodeKSB_TZ,
		LanguagecodeKSF,
		LanguagecodeKSF_CM,
		LanguagecodeKSH,
		LanguagecodeKSH_DE,
		LanguagecodeKU,
		LanguagecodeKU_TR,
		LanguagecodeKW,
		LanguagecodeKW_GB,
		LanguagecodeKY,
		LanguagecodeKY_KG,
		LanguagecodeLAG,
		LanguagecodeLAG_TZ,
		LanguagecodeLB,
		LanguagecodeLB_LU,
		LanguagecodeLG,
		LanguagecodeLG_UG,
		LanguagecodeLKT,
		LanguagecodeLKT_US,
		LanguagecodeLN,
		LanguagecodeLN_AO,
		LanguagecodeLN_CD,
		LanguagecodeLN_CF,
		LanguagecodeLN_CG,
		LanguagecodeLO,
		LanguagecodeLO_LA,
		LanguagecodeLRC,
		LanguagecodeLRC_IQ,
		LanguagecodeLRC_IR,
		LanguagecodeLT,
		LanguagecodeLT_LT,
		LanguagecodeLU,
		LanguagecodeLU_CD,
		LanguagecodeLUO,
		LanguagecodeLUO_KE,
		LanguagecodeLUY,
		LanguagecodeLUY_KE,
		LanguagecodeLV,
		LanguagecodeLV_LV,
		LanguagecodeMAI,
		LanguagecodeMAI_IN,
		LanguagecodeMAS,
		LanguagecodeMAS_KE,
		LanguagecodeMAS_TZ,
		LanguagecodeMER,
		LanguagecodeMER_KE,
		LanguagecodeMFE,
		LanguagecodeMFE_MU,
		LanguagecodeMG,
		LanguagecodeMG_MG,
		LanguagecodeMGH,
		LanguagecodeMGH_MZ,
		LanguagecodeMGO,
		LanguagecodeMGO_CM,
		LanguagecodeMI,
		LanguagecodeMI_NZ,
		LanguagecodeMK,
		LanguagecodeMK_MK,
		LanguagecodeML,
		LanguagecodeML_IN,
		LanguagecodeMN,
		LanguagecodeMN_MN,
		LanguagecodeMNI,
		LanguagecodeMNI_BENG,
		LanguagecodeMNI_BENG_IN,
		LanguagecodeMR,
		LanguagecodeMR_IN,
		LanguagecodeMS,
		LanguagecodeMS_BN,
		LanguagecodeMS_ID,
		LanguagecodeMS_MY,
		LanguagecodeMS_SG,
		LanguagecodeMT,
		LanguagecodeMT_MT,
		LanguagecodeMUA,
		LanguagecodeMUA_CM,
		LanguagecodeMY,
		LanguagecodeMY_MM,
		LanguagecodeMZN,
		LanguagecodeMZN_IR,
		LanguagecodeNAQ,
		LanguagecodeNAQ_NA,
		LanguagecodeNB,
		LanguagecodeNB_NO,
		LanguagecodeNB_SJ,
		LanguagecodeND,
		LanguagecodeND_ZW,
		LanguagecodeNDS,
		LanguagecodeNDS_DE,
		LanguagecodeNDS_NL,
		LanguagecodeNE,
		LanguagecodeNE_IN,
		LanguagecodeNE_NP,
		LanguagecodeNL,
		LanguagecodeNL_AW,
		LanguagecodeNL_BE,
		LanguagecodeNL_BQ,
		LanguagecodeNL_CW,
		LanguagecodeNL_NL,
		LanguagecodeNL_SR,
		LanguagecodeNL_SX,
		LanguagecodeNMG,
		LanguagecodeNMG_CM,
		LanguagecodeNN,
		LanguagecodeNN_NO,
		LanguagecodeNNH,
		LanguagecodeNNH_CM,
		LanguagecodeNUS,
		LanguagecodeNUS_SS,
		LanguagecodeNYN,
		LanguagecodeNYN_UG,
		LanguagecodeOM,
		LanguagecodeOM_ET,
		LanguagecodeOM_KE,
		LanguagecodeOR,
		LanguagecodeOR_IN,
		LanguagecodeOS,
		LanguagecodeOS_GE,
		LanguagecodeOS_RU,
		LanguagecodePA,
		LanguagecodePA_ARAB,
		LanguagecodePA_ARAB_PK,
		LanguagecodePA_GURU,
		LanguagecodePA_GURU_IN,
		LanguagecodePCM,
		LanguagecodePCM_NG,
		LanguagecodePL,
		LanguagecodePL_PL,
		LanguagecodePRG,
		LanguagecodePS,
		LanguagecodePS_AF,
		LanguagecodePS_PK,
		LanguagecodePT,
		LanguagecodePT_AO,
		LanguagecodePT_BR,
		LanguagecodePT_CH,
		LanguagecodePT_CV,
		LanguagecodePT_GQ,
		LanguagecodePT_GW,
		LanguagecodePT_LU,
		LanguagecodePT_MO,
		LanguagecodePT_MZ,
		LanguagecodePT_PT,
		LanguagecodePT_ST,
		LanguagecodePT_TL,
		LanguagecodeQU,
		LanguagecodeQU_BO,
		LanguagecodeQU_EC,
		LanguagecodeQU_PE,
		LanguagecodeRM,
		LanguagecodeRM_CH,
		LanguagecodeRN,
		LanguagecodeRN_BI,
		LanguagecodeRO,
		LanguagecodeRO_MD,
		LanguagecodeRO_RO,
		LanguagecodeROF,
		LanguagecodeROF_TZ,
		LanguagecodeRU,
		LanguagecodeRU_BY,
		LanguagecodeRU_KG,
		LanguagecodeRU_KZ,
		LanguagecodeRU_MD,
		LanguagecodeRU_RU,
		LanguagecodeRU_UA,
		LanguagecodeRW,
		LanguagecodeRW_RW,
		LanguagecodeRWK,
		LanguagecodeRWK_TZ,
		LanguagecodeSAH,
		LanguagecodeSAH_RU,
		LanguagecodeSAQ,
		LanguagecodeSAQ_KE,
		LanguagecodeSAT,
		LanguagecodeSAT_OLCK,
		LanguagecodeSAT_OLCK_IN,
		LanguagecodeSBP,
		LanguagecodeSBP_TZ,
		LanguagecodeSD,
		LanguagecodeSD_ARAB,
		LanguagecodeSD_ARAB_PK,
		LanguagecodeSD_DEVA,
		LanguagecodeSD_DEVA_IN,
		LanguagecodeSE,
		LanguagecodeSE_FI,
		LanguagecodeSE_NO,
		LanguagecodeSE_SE,
		LanguagecodeSEH,
		LanguagecodeSEH_MZ,
		LanguagecodeSES,
		LanguagecodeSES_ML,
		LanguagecodeSG,
		LanguagecodeSG_CF,
		LanguagecodeSHI,
		LanguagecodeSHI_LATN,
		LanguagecodeSHI_LATN_MA,
		LanguagecodeSHI_TFNG,
		LanguagecodeSHI_TFNG_MA,
		LanguagecodeSI,
		LanguagecodeSI_LK,
		LanguagecodeSK,
		LanguagecodeSK_SK,
		LanguagecodeSL,
		LanguagecodeSL_SI,
		LanguagecodeSMN,
		LanguagecodeSMN_FI,
		LanguagecodeSN,
		LanguagecodeSN_ZW,
		LanguagecodeSO,
		LanguagecodeSO_DJ,
		LanguagecodeSO_ET,
		LanguagecodeSO_KE,
		LanguagecodeSO_SO,
		LanguagecodeSQ,
		LanguagecodeSQ_AL,
		LanguagecodeSQ_MK,
		LanguagecodeSQ_XK,
		LanguagecodeSR,
		LanguagecodeSR_CYRL,
		LanguagecodeSR_CYRL_BA,
		LanguagecodeSR_CYRL_ME,
		LanguagecodeSR_CYRL_RS,
		LanguagecodeSR_CYRL_XK,
		LanguagecodeSR_LATN,
		LanguagecodeSR_LATN_BA,
		LanguagecodeSR_LATN_ME,
		LanguagecodeSR_LATN_RS,
		LanguagecodeSR_LATN_XK,
		LanguagecodeSU,
		LanguagecodeSU_LATN,
		LanguagecodeSU_LATN_ID,
		LanguagecodeSV,
		LanguagecodeSV_AX,
		LanguagecodeSV_FI,
		LanguagecodeSV_SE,
		LanguagecodeSW,
		LanguagecodeSW_CD,
		LanguagecodeSW_KE,
		LanguagecodeSW_TZ,
		LanguagecodeSW_UG,
		LanguagecodeTA,
		LanguagecodeTA_IN,
		LanguagecodeTA_LK,
		LanguagecodeTA_MY,
		LanguagecodeTA_SG,
		LanguagecodeTE,
		LanguagecodeTE_IN,
		LanguagecodeTEO,
		LanguagecodeTEO_KE,
		LanguagecodeTEO_UG,
		LanguagecodeTG,
		LanguagecodeTG_TJ,
		LanguagecodeTH,
		LanguagecodeTH_TH,
		LanguagecodeTI,
		LanguagecodeTI_ER,
		LanguagecodeTI_ET,
		LanguagecodeTK,
		LanguagecodeTK_TM,
		LanguagecodeTO,
		LanguagecodeTO_TO,
		LanguagecodeTR,
		LanguagecodeTR_CY,
		LanguagecodeTR_TR,
		LanguagecodeTT,
		LanguagecodeTT_RU,
		LanguagecodeTWQ,
		LanguagecodeTWQ_NE,
		LanguagecodeTZM,
		LanguagecodeTZM_MA,
		LanguagecodeUG,
		LanguagecodeUG_CN,
		LanguagecodeUK,
		LanguagecodeUK_UA,
		LanguagecodeUR,
		LanguagecodeUR_IN,
		LanguagecodeUR_PK,
		LanguagecodeUZ,
		LanguagecodeUZ_ARAB,
		LanguagecodeUZ_ARAB_AF,
		LanguagecodeUZ_CYRL,
		LanguagecodeUZ_CYRL_UZ,
		LanguagecodeUZ_LATN,
		LanguagecodeUZ_LATN_UZ,
		LanguagecodeVAI,
		LanguagecodeVAI_LATN,
		LanguagecodeVAI_LATN_LR,
		LanguagecodeVAI_VAII,
		LanguagecodeVAI_VAII_LR,
		LanguagecodeVI,
		LanguagecodeVI_VN,
		LanguagecodeVO,
		LanguagecodeVUN,
		LanguagecodeVUN_TZ,
		LanguagecodeWAE,
		LanguagecodeWAE_CH,
		LanguagecodeWO,
		LanguagecodeWO_SN,
		LanguagecodeXH,
		LanguagecodeXH_ZA,
		LanguagecodeXOG,
		LanguagecodeXOG_UG,
		LanguagecodeYAV,
		LanguagecodeYAV_CM,
		LanguagecodeYI,
		LanguagecodeYO,
		LanguagecodeYO_BJ,
		LanguagecodeYO_NG,
		LanguagecodeYUE,
		LanguagecodeYUE_HANS,
		LanguagecodeYUE_HANS_CN,
		LanguagecodeYUE_HANT,
		LanguagecodeYUE_HANT_HK,
		LanguagecodeZGH,
		LanguagecodeZGH_MA,
		LanguagecodeZH,
		LanguagecodeZH_HANS,
		LanguagecodeZH_HANS_CN,
		LanguagecodeZH_HANS_HK,
		LanguagecodeZH_HANS_MO,
		LanguagecodeZH_HANS_SG,
		LanguagecodeZH_HANT,
		LanguagecodeZH_HANT_HK,
		LanguagecodeZH_HANT_MO,
		LanguagecodeZH_HANT_TW,
		LanguagecodeZU,
		LanguagecodeZU_ZA,
	}
}

func (e Languagecode) IsValid() error {
	switch e {
	case LanguagecodeAF, LanguagecodeAF_NA, LanguagecodeID, LanguagecodeAF_ZA, LanguagecodeAGQ, LanguagecodeAGQ_CM, LanguagecodeAK, LanguagecodeAK_GH, LanguagecodeAM, LanguagecodeAM_ET, LanguagecodeAR, LanguagecodeAR_AE, LanguagecodeAR_BH, LanguagecodeAR_DJ, LanguagecodeAR_DZ, LanguagecodeAR_EG, LanguagecodeAR_EH, LanguagecodeAR_ER, LanguagecodeAR_IL, LanguagecodeAR_IQ, LanguagecodeAR_JO, LanguagecodeAR_KM, LanguagecodeAR_KW, LanguagecodeAR_LB, LanguagecodeAR_LY, LanguagecodeAR_MA, LanguagecodeAR_MR, LanguagecodeAR_OM, LanguagecodeAR_PS, LanguagecodeAR_QA, LanguagecodeAR_SA, LanguagecodeAR_SD, LanguagecodeAR_SO, LanguagecodeAR_SS, LanguagecodeAR_SY, LanguagecodeAR_TD, LanguagecodeAR_TN, LanguagecodeAR_YE, LanguagecodeAS, LanguagecodeAS_IN, LanguagecodeASA, LanguagecodeASA_TZ, LanguagecodeAST, LanguagecodeAST_ES, LanguagecodeAZ, LanguagecodeAZ_CYRL, LanguagecodeAZ_CYRL_AZ, LanguagecodeAZ_LATN, LanguagecodeAZ_LATN_AZ, LanguagecodeBAS, LanguagecodeBAS_CM, LanguagecodeBE, LanguagecodeBE_BY, LanguagecodeBEM, LanguagecodeBEM_ZM, LanguagecodeBEZ, LanguagecodeBEZ_TZ, LanguagecodeBG, LanguagecodeBG_BG, LanguagecodeBM, LanguagecodeBM_ML, LanguagecodeBN, LanguagecodeBN_BD, LanguagecodeBN_IN, LanguagecodeBO, LanguagecodeBO_CN, LanguagecodeBO_IN, LanguagecodeBR, LanguagecodeBR_FR, LanguagecodeBRX, LanguagecodeBRX_IN, LanguagecodeBS, LanguagecodeBS_CYRL, LanguagecodeBS_CYRL_BA, LanguagecodeBS_LATN, LanguagecodeBS_LATN_BA, LanguagecodeCA, LanguagecodeCA_AD, LanguagecodeCA_ES, LanguagecodeCA_ES_VALENCIA, LanguagecodeCA_FR, LanguagecodeCA_IT, LanguagecodeCCP, LanguagecodeCCP_BD, LanguagecodeCCP_IN, LanguagecodeCE, LanguagecodeCE_RU, LanguagecodeCEB, LanguagecodeCEB_PH, LanguagecodeCGG, LanguagecodeCGG_UG, LanguagecodeCHR, LanguagecodeCHR_US, LanguagecodeCKB, LanguagecodeCKB_IQ, LanguagecodeCKB_IR, LanguagecodeCS, LanguagecodeCS_CZ, LanguagecodeCU, LanguagecodeCU_RU, LanguagecodeCY, LanguagecodeCY_GB, LanguagecodeDA, LanguagecodeDA_DK, LanguagecodeDA_GL, LanguagecodeDAV, LanguagecodeDAV_KE, LanguagecodeDE, LanguagecodeDE_AT, LanguagecodeDE_BE, LanguagecodeDE_CH, LanguagecodeDE_DE, LanguagecodeDE_IT, LanguagecodeDE_LI, LanguagecodeDE_LU, LanguagecodeDJE, LanguagecodeDJE_NE, LanguagecodeDSB, LanguagecodeDSB_DE, LanguagecodeDUA, LanguagecodeDUA_CM, LanguagecodeDYO, LanguagecodeDYO_SN, LanguagecodeDZ, LanguagecodeDZ_BT, LanguagecodeEBU, LanguagecodeEBU_KE, LanguagecodeEE, LanguagecodeEE_GH, LanguagecodeEE_TG, LanguagecodeEL, LanguagecodeEL_CY, LanguagecodeEL_GR, LanguagecodeEN, LanguagecodeEN_AE, LanguagecodeEN_AG, LanguagecodeEN_AI, LanguagecodeEN_AS, LanguagecodeEN_AT, LanguagecodeEN_AU, LanguagecodeEN_BB, LanguagecodeEN_BE, LanguagecodeEN_BI, LanguagecodeEN_BM, LanguagecodeEN_BS, LanguagecodeEN_BW, LanguagecodeEN_BZ, LanguagecodeEN_CA, LanguagecodeEN_CC, LanguagecodeEN_CH, LanguagecodeEN_CK, LanguagecodeEN_CM, LanguagecodeEN_CX, LanguagecodeEN_CY, LanguagecodeEN_DE, LanguagecodeEN_DG, LanguagecodeEN_DK, LanguagecodeEN_DM, LanguagecodeEN_ER, LanguagecodeEN_FI, LanguagecodeEN_FJ, LanguagecodeEN_FK, LanguagecodeEN_FM, LanguagecodeEN_GB, LanguagecodeEN_GD, LanguagecodeEN_GG, LanguagecodeEN_GH, LanguagecodeEN_GI, LanguagecodeEN_GM, LanguagecodeEN_GU, LanguagecodeEN_GY, LanguagecodeEN_HK, LanguagecodeEN_IE, LanguagecodeEN_IL, LanguagecodeEN_IM, LanguagecodeEN_IN, LanguagecodeEN_IO, LanguagecodeEN_JE, LanguagecodeEN_JM, LanguagecodeEN_KE, LanguagecodeEN_KI, LanguagecodeEN_KN, LanguagecodeEN_KY, LanguagecodeEN_LC, LanguagecodeEN_LR, LanguagecodeEN_LS, LanguagecodeEN_MG, LanguagecodeEN_MH, LanguagecodeEN_MO, LanguagecodeEN_MP, LanguagecodeEN_MS, LanguagecodeEN_MT, LanguagecodeEN_MU, LanguagecodeEN_MW, LanguagecodeEN_MY, LanguagecodeEN_NA, LanguagecodeEN_NF, LanguagecodeEN_NG, LanguagecodeEN_NL, LanguagecodeEN_NR, LanguagecodeEN_NU, LanguagecodeEN_NZ, LanguagecodeEN_PG, LanguagecodeEN_PH, LanguagecodeEN_PK, LanguagecodeEN_PN, LanguagecodeEN_PR, LanguagecodeEN_PW, LanguagecodeEN_RW, LanguagecodeEN_SB, LanguagecodeEN_SC, LanguagecodeEN_SD, LanguagecodeEN_SE, LanguagecodeEN_SG, LanguagecodeEN_SH, LanguagecodeEN_SI, LanguagecodeEN_SL, LanguagecodeEN_SS, LanguagecodeEN_SX, LanguagecodeEN_SZ, LanguagecodeEN_TC, LanguagecodeEN_TK, LanguagecodeEN_TO, LanguagecodeEN_TT, LanguagecodeEN_TV, LanguagecodeEN_TZ, LanguagecodeEN_UG, LanguagecodeEN_UM, LanguagecodeEN_US, LanguagecodeEN_VC, LanguagecodeEN_VG, LanguagecodeEN_VI, LanguagecodeEN_VU, LanguagecodeEN_WS, LanguagecodeEN_ZA, LanguagecodeEN_ZM, LanguagecodeEN_ZW, LanguagecodeEO, LanguagecodeES, LanguagecodeES_AR, LanguagecodeES_BO, LanguagecodeES_BR, LanguagecodeES_BZ, LanguagecodeES_CL, LanguagecodeES_CO, LanguagecodeES_CR, LanguagecodeES_CU, LanguagecodeES_DO, LanguagecodeES_EA, LanguagecodeES_EC, LanguagecodeES_ES, LanguagecodeES_GQ, LanguagecodeES_GT, LanguagecodeES_HN, LanguagecodeES_IC, LanguagecodeES_MX, LanguagecodeES_NI, LanguagecodeES_PA, LanguagecodeES_PE, LanguagecodeES_PH, LanguagecodeES_PR, LanguagecodeES_PY, LanguagecodeES_SV, LanguagecodeES_US, LanguagecodeES_UY, LanguagecodeES_VE, LanguagecodeET, LanguagecodeET_EE, LanguagecodeEU, LanguagecodeEU_ES, LanguagecodeEWO, LanguagecodeEWO_CM, LanguagecodeFA, LanguagecodeFA_AF, LanguagecodeFA_IR, LanguagecodeFF, LanguagecodeFF_ADLM, LanguagecodeFF_ADLM_BF, LanguagecodeFF_ADLM_CM, LanguagecodeFF_ADLM_GH, LanguagecodeFF_ADLM_GM, LanguagecodeFF_ADLM_GN, LanguagecodeFF_ADLM_GW, LanguagecodeFF_ADLM_LR, LanguagecodeFF_ADLM_MR, LanguagecodeFF_ADLM_NE, LanguagecodeFF_ADLM_NG, LanguagecodeFF_ADLM_SL, LanguagecodeFF_ADLM_SN, LanguagecodeFF_LATN, LanguagecodeFF_LATN_BF, LanguagecodeFF_LATN_CM, LanguagecodeFF_LATN_GH, LanguagecodeFF_LATN_GM, LanguagecodeFF_LATN_GN, LanguagecodeFF_LATN_GW, LanguagecodeFF_LATN_LR, LanguagecodeFF_LATN_MR, LanguagecodeFF_LATN_NE, LanguagecodeFF_LATN_NG, LanguagecodeFF_LATN_SL, LanguagecodeFF_LATN_SN, LanguagecodeFI, LanguagecodeFI_FI, LanguagecodeFIL, LanguagecodeFIL_PH, LanguagecodeFO, LanguagecodeFO_DK, LanguagecodeFO_FO, LanguagecodeFR, LanguagecodeFR_BE, LanguagecodeFR_BF, LanguagecodeFR_BI, LanguagecodeFR_BJ, LanguagecodeFR_BL, LanguagecodeFR_CA, LanguagecodeFR_CD, LanguagecodeFR_CF, LanguagecodeFR_CG, LanguagecodeFR_CH, LanguagecodeFR_CI, LanguagecodeFR_CM, LanguagecodeFR_DJ, LanguagecodeFR_DZ, LanguagecodeFR_FR, LanguagecodeFR_GA, LanguagecodeFR_GF, LanguagecodeFR_GN, LanguagecodeFR_GP, LanguagecodeFR_GQ, LanguagecodeFR_HT, LanguagecodeFR_KM, LanguagecodeFR_LU, LanguagecodeFR_MA, LanguagecodeFR_MC, LanguagecodeFR_MF, LanguagecodeFR_MG, LanguagecodeFR_ML, LanguagecodeFR_MQ, LanguagecodeFR_MR, LanguagecodeFR_MU, LanguagecodeFR_NC, LanguagecodeFR_NE, LanguagecodeFR_PF, LanguagecodeFR_PM, LanguagecodeFR_RE, LanguagecodeFR_RW, LanguagecodeFR_SC, LanguagecodeFR_SN, LanguagecodeFR_SY, LanguagecodeFR_TD, LanguagecodeFR_TG, LanguagecodeFR_TN, LanguagecodeFR_VU, LanguagecodeFR_WF, LanguagecodeFR_YT, LanguagecodeFUR, LanguagecodeFUR_IT, LanguagecodeFY, LanguagecodeFY_NL, LanguagecodeGA, LanguagecodeGA_GB, LanguagecodeGA_IE, LanguagecodeGD, LanguagecodeGD_GB, LanguagecodeGL, LanguagecodeGL_ES, LanguagecodeGSW, LanguagecodeGSW_CH, LanguagecodeGSW_FR, LanguagecodeGSW_LI, LanguagecodeGU, LanguagecodeGU_IN, LanguagecodeGUZ, LanguagecodeGUZ_KE, LanguagecodeGV, LanguagecodeGV_IM, LanguagecodeHA, LanguagecodeHA_GH, LanguagecodeHA_NE, LanguagecodeHA_NG, LanguagecodeHAW, LanguagecodeHAW_US, LanguagecodeHE, LanguagecodeHE_IL, LanguagecodeHI, LanguagecodeHI_IN, LanguagecodeHR, LanguagecodeHR_BA, LanguagecodeHR_HR, LanguagecodeHSB, LanguagecodeHSB_DE, LanguagecodeHU, LanguagecodeHU_HU, LanguagecodeHY, LanguagecodeHY_AM, LanguagecodeIA, LanguagecodeSTRING, LanguagecodeID_ID, LanguagecodeIG, LanguagecodeIG_NG, LanguagecodeII, LanguagecodeII_CN, LanguagecodeIS, LanguagecodeIS_IS, LanguagecodeIT, LanguagecodeIT_CH, LanguagecodeIT_IT, LanguagecodeIT_SM, LanguagecodeIT_VA, LanguagecodeJA, LanguagecodeJA_JP, LanguagecodeJGO, LanguagecodeJGO_CM, LanguagecodeJMC, LanguagecodeJMC_TZ, LanguagecodeJV, LanguagecodeJV_ID, LanguagecodeKA, LanguagecodeKA_GE, LanguagecodeKAB, LanguagecodeKAB_DZ, LanguagecodeKAM, LanguagecodeKAM_KE, LanguagecodeKDE, LanguagecodeKDE_TZ, LanguagecodeKEA, LanguagecodeKEA_CV, LanguagecodeKHQ, LanguagecodeKHQ_ML, LanguagecodeKI, LanguagecodeKI_KE, LanguagecodeKK, LanguagecodeKK_KZ, LanguagecodeKKJ, LanguagecodeKKJ_CM, LanguagecodeKL, LanguagecodeKL_GL, LanguagecodeKLN, LanguagecodeKLN_KE, LanguagecodeKM, LanguagecodeKM_KH, LanguagecodeKN, LanguagecodeKN_IN, LanguagecodeKO, LanguagecodeKO_KP, LanguagecodeKO_KR, LanguagecodeKOK, LanguagecodeKOK_IN, LanguagecodeKS, LanguagecodeKS_ARAB, LanguagecodeKS_ARAB_IN, LanguagecodeKSB, LanguagecodeKSB_TZ, LanguagecodeKSF, LanguagecodeKSF_CM, LanguagecodeKSH, LanguagecodeKSH_DE, LanguagecodeKU, LanguagecodeKU_TR, LanguagecodeKW, LanguagecodeKW_GB, LanguagecodeKY, LanguagecodeKY_KG, LanguagecodeLAG, LanguagecodeLAG_TZ, LanguagecodeLB, LanguagecodeLB_LU, LanguagecodeLG, LanguagecodeLG_UG, LanguagecodeLKT, LanguagecodeLKT_US, LanguagecodeLN, LanguagecodeLN_AO, LanguagecodeLN_CD, LanguagecodeLN_CF, LanguagecodeLN_CG, LanguagecodeLO, LanguagecodeLO_LA, LanguagecodeLRC, LanguagecodeLRC_IQ, LanguagecodeLRC_IR, LanguagecodeLT, LanguagecodeLT_LT, LanguagecodeLU, LanguagecodeLU_CD, LanguagecodeLUO, LanguagecodeLUO_KE, LanguagecodeLUY, LanguagecodeLUY_KE, LanguagecodeLV, LanguagecodeLV_LV, LanguagecodeMAI, LanguagecodeMAI_IN, LanguagecodeMAS, LanguagecodeMAS_KE, LanguagecodeMAS_TZ, LanguagecodeMER, LanguagecodeMER_KE, LanguagecodeMFE, LanguagecodeMFE_MU, LanguagecodeMG, LanguagecodeMG_MG, LanguagecodeMGH, LanguagecodeMGH_MZ, LanguagecodeMGO, LanguagecodeMGO_CM, LanguagecodeMI, LanguagecodeMI_NZ, LanguagecodeMK, LanguagecodeMK_MK, LanguagecodeML, LanguagecodeML_IN, LanguagecodeMN, LanguagecodeMN_MN, LanguagecodeMNI, LanguagecodeMNI_BENG, LanguagecodeMNI_BENG_IN, LanguagecodeMR, LanguagecodeMR_IN, LanguagecodeMS, LanguagecodeMS_BN, LanguagecodeMS_ID, LanguagecodeMS_MY, LanguagecodeMS_SG, LanguagecodeMT, LanguagecodeMT_MT, LanguagecodeMUA, LanguagecodeMUA_CM, LanguagecodeMY, LanguagecodeMY_MM, LanguagecodeMZN, LanguagecodeMZN_IR, LanguagecodeNAQ, LanguagecodeNAQ_NA, LanguagecodeNB, LanguagecodeNB_NO, LanguagecodeNB_SJ, LanguagecodeND, LanguagecodeND_ZW, LanguagecodeNDS, LanguagecodeNDS_DE, LanguagecodeNDS_NL, LanguagecodeNE, LanguagecodeNE_IN, LanguagecodeNE_NP, LanguagecodeNL, LanguagecodeNL_AW, LanguagecodeNL_BE, LanguagecodeNL_BQ, LanguagecodeNL_CW, LanguagecodeNL_NL, LanguagecodeNL_SR, LanguagecodeNL_SX, LanguagecodeNMG, LanguagecodeNMG_CM, LanguagecodeNN, LanguagecodeNN_NO, LanguagecodeNNH, LanguagecodeNNH_CM, LanguagecodeNUS, LanguagecodeNUS_SS, LanguagecodeNYN, LanguagecodeNYN_UG, LanguagecodeOM, LanguagecodeOM_ET, LanguagecodeOM_KE, LanguagecodeOR, LanguagecodeOR_IN, LanguagecodeOS, LanguagecodeOS_GE, LanguagecodeOS_RU, LanguagecodePA, LanguagecodePA_ARAB, LanguagecodePA_ARAB_PK, LanguagecodePA_GURU, LanguagecodePA_GURU_IN, LanguagecodePCM, LanguagecodePCM_NG, LanguagecodePL, LanguagecodePL_PL, LanguagecodePRG, LanguagecodePS, LanguagecodePS_AF, LanguagecodePS_PK, LanguagecodePT, LanguagecodePT_AO, LanguagecodePT_BR, LanguagecodePT_CH, LanguagecodePT_CV, LanguagecodePT_GQ, LanguagecodePT_GW, LanguagecodePT_LU, LanguagecodePT_MO, LanguagecodePT_MZ, LanguagecodePT_PT, LanguagecodePT_ST, LanguagecodePT_TL, LanguagecodeQU, LanguagecodeQU_BO, LanguagecodeQU_EC, LanguagecodeQU_PE, LanguagecodeRM, LanguagecodeRM_CH, LanguagecodeRN, LanguagecodeRN_BI, LanguagecodeRO, LanguagecodeRO_MD, LanguagecodeRO_RO, LanguagecodeROF, LanguagecodeROF_TZ, LanguagecodeRU, LanguagecodeRU_BY, LanguagecodeRU_KG, LanguagecodeRU_KZ, LanguagecodeRU_MD, LanguagecodeRU_RU, LanguagecodeRU_UA, LanguagecodeRW, LanguagecodeRW_RW, LanguagecodeRWK, LanguagecodeRWK_TZ, LanguagecodeSAH, LanguagecodeSAH_RU, LanguagecodeSAQ, LanguagecodeSAQ_KE, LanguagecodeSAT, LanguagecodeSAT_OLCK, LanguagecodeSAT_OLCK_IN, LanguagecodeSBP, LanguagecodeSBP_TZ, LanguagecodeSD, LanguagecodeSD_ARAB, LanguagecodeSD_ARAB_PK, LanguagecodeSD_DEVA, LanguagecodeSD_DEVA_IN, LanguagecodeSE, LanguagecodeSE_FI, LanguagecodeSE_NO, LanguagecodeSE_SE, LanguagecodeSEH, LanguagecodeSEH_MZ, LanguagecodeSES, LanguagecodeSES_ML, LanguagecodeSG, LanguagecodeSG_CF, LanguagecodeSHI, LanguagecodeSHI_LATN, LanguagecodeSHI_LATN_MA, LanguagecodeSHI_TFNG, LanguagecodeSHI_TFNG_MA, LanguagecodeSI, LanguagecodeSI_LK, LanguagecodeSK, LanguagecodeSK_SK, LanguagecodeSL, LanguagecodeSL_SI, LanguagecodeSMN, LanguagecodeSMN_FI, LanguagecodeSN, LanguagecodeSN_ZW, LanguagecodeSO, LanguagecodeSO_DJ, LanguagecodeSO_ET, LanguagecodeSO_KE, LanguagecodeSO_SO, LanguagecodeSQ, LanguagecodeSQ_AL, LanguagecodeSQ_MK, LanguagecodeSQ_XK, LanguagecodeSR, LanguagecodeSR_CYRL, LanguagecodeSR_CYRL_BA, LanguagecodeSR_CYRL_ME, LanguagecodeSR_CYRL_RS, LanguagecodeSR_CYRL_XK, LanguagecodeSR_LATN, LanguagecodeSR_LATN_BA, LanguagecodeSR_LATN_ME, LanguagecodeSR_LATN_RS, LanguagecodeSR_LATN_XK, LanguagecodeSU, LanguagecodeSU_LATN, LanguagecodeSU_LATN_ID, LanguagecodeSV, LanguagecodeSV_AX, LanguagecodeSV_FI, LanguagecodeSV_SE, LanguagecodeSW, LanguagecodeSW_CD, LanguagecodeSW_KE, LanguagecodeSW_TZ, LanguagecodeSW_UG, LanguagecodeTA, LanguagecodeTA_IN, LanguagecodeTA_LK, LanguagecodeTA_MY, LanguagecodeTA_SG, LanguagecodeTE, LanguagecodeTE_IN, LanguagecodeTEO, LanguagecodeTEO_KE, LanguagecodeTEO_UG, LanguagecodeTG, LanguagecodeTG_TJ, LanguagecodeTH, LanguagecodeTH_TH, LanguagecodeTI, LanguagecodeTI_ER, LanguagecodeTI_ET, LanguagecodeTK, LanguagecodeTK_TM, LanguagecodeTO, LanguagecodeTO_TO, LanguagecodeTR, LanguagecodeTR_CY, LanguagecodeTR_TR, LanguagecodeTT, LanguagecodeTT_RU, LanguagecodeTWQ, LanguagecodeTWQ_NE, LanguagecodeTZM, LanguagecodeTZM_MA, LanguagecodeUG, LanguagecodeUG_CN, LanguagecodeUK, LanguagecodeUK_UA, LanguagecodeUR, LanguagecodeUR_IN, LanguagecodeUR_PK, LanguagecodeUZ, LanguagecodeUZ_ARAB, LanguagecodeUZ_ARAB_AF, LanguagecodeUZ_CYRL, LanguagecodeUZ_CYRL_UZ, LanguagecodeUZ_LATN, LanguagecodeUZ_LATN_UZ, LanguagecodeVAI, LanguagecodeVAI_LATN, LanguagecodeVAI_LATN_LR, LanguagecodeVAI_VAII, LanguagecodeVAI_VAII_LR, LanguagecodeVI, LanguagecodeVI_VN, LanguagecodeVO, LanguagecodeVUN, LanguagecodeVUN_TZ, LanguagecodeWAE, LanguagecodeWAE_CH, LanguagecodeWO, LanguagecodeWO_SN, LanguagecodeXH, LanguagecodeXH_ZA, LanguagecodeXOG, LanguagecodeXOG_UG, LanguagecodeYAV, LanguagecodeYAV_CM, LanguagecodeYI, LanguagecodeYO, LanguagecodeYO_BJ, LanguagecodeYO_NG, LanguagecodeYUE, LanguagecodeYUE_HANS, LanguagecodeYUE_HANS_CN, LanguagecodeYUE_HANT, LanguagecodeYUE_HANT_HK, LanguagecodeZGH, LanguagecodeZGH_MA, LanguagecodeZH, LanguagecodeZH_HANS, LanguagecodeZH_HANS_CN, LanguagecodeZH_HANS_HK, LanguagecodeZH_HANS_MO, LanguagecodeZH_HANS_SG, LanguagecodeZH_HANT, LanguagecodeZH_HANT_HK, LanguagecodeZH_HANT_MO, LanguagecodeZH_HANT_TW, LanguagecodeZU, LanguagecodeZU_ZA:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Languagecode) String() string {
	return string(e)
}

type Attributetype string

// Enum values for Attributetype
const (
	AttributetypeProductType Attributetype = "product_type"
	AttributetypePageType    Attributetype = "page_type"
)

func AllAttributetype() []Attributetype {
	return []Attributetype{
		AttributetypeProductType,
		AttributetypePageType,
	}
}

func (e Attributetype) IsValid() error {
	switch e {
	case AttributetypeProductType, AttributetypePageType:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Attributetype) String() string {
	return string(e)
}

type Attributeinputtype string

// Enum values for Attributeinputtype
const (
	AttributeinputtypeDropdown    Attributeinputtype = "dropdown"
	AttributeinputtypeMultiselect Attributeinputtype = "multiselect"
	AttributeinputtypeFile        Attributeinputtype = "file"
	AttributeinputtypeReference   Attributeinputtype = "reference"
	AttributeinputtypeNumeric     Attributeinputtype = "numeric"
	AttributeinputtypeRichText    Attributeinputtype = "rich_text"
	AttributeinputtypeSwatch      Attributeinputtype = "swatch"
	AttributeinputtypeBoolean     Attributeinputtype = "boolean"
	AttributeinputtypeDate        Attributeinputtype = "date"
	AttributeinputtypeDateTime    Attributeinputtype = "date_time"
)

func AllAttributeinputtype() []Attributeinputtype {
	return []Attributeinputtype{
		AttributeinputtypeDropdown,
		AttributeinputtypeMultiselect,
		AttributeinputtypeFile,
		AttributeinputtypeReference,
		AttributeinputtypeNumeric,
		AttributeinputtypeRichText,
		AttributeinputtypeSwatch,
		AttributeinputtypeBoolean,
		AttributeinputtypeDate,
		AttributeinputtypeDateTime,
	}
}

func (e Attributeinputtype) IsValid() error {
	switch e {
	case AttributeinputtypeDropdown, AttributeinputtypeMultiselect, AttributeinputtypeFile, AttributeinputtypeReference, AttributeinputtypeNumeric, AttributeinputtypeRichText, AttributeinputtypeSwatch, AttributeinputtypeBoolean, AttributeinputtypeDate, AttributeinputtypeDateTime:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Attributeinputtype) String() string {
	return string(e)
}

type Attributeentitytype string

// Enum values for Attributeentitytype
const (
	AttributeentitytypePage    Attributeentitytype = "page"
	AttributeentitytypeProduct Attributeentitytype = "product"
)

func AllAttributeentitytype() []Attributeentitytype {
	return []Attributeentitytype{
		AttributeentitytypePage,
		AttributeentitytypeProduct,
	}
}

func (e Attributeentitytype) IsValid() error {
	switch e {
	case AttributeentitytypePage, AttributeentitytypeProduct:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Attributeentitytype) String() string {
	return string(e)
}

// NullAttributeentitytype is a nullable Attributeentitytype enum type. It supports SQL and JSON serialization.
type NullAttributeentitytype struct {
	Val   Attributeentitytype
	Valid bool
}

// NullAttributeentitytypeFrom creates a new Attributeentitytype that will never be blank.
func NullAttributeentitytypeFrom(v Attributeentitytype) NullAttributeentitytype {
	return NewNullAttributeentitytype(v, true)
}

// NullAttributeentitytypeFromPtr creates a new NullAttributeentitytype that be null if s is nil.
func NullAttributeentitytypeFromPtr(v *Attributeentitytype) NullAttributeentitytype {
	if v == nil {
		return NewNullAttributeentitytype("", false)
	}
	return NewNullAttributeentitytype(*v, true)
}

// NewNullAttributeentitytype creates a new NullAttributeentitytype
func NewNullAttributeentitytype(v Attributeentitytype, valid bool) NullAttributeentitytype {
	return NullAttributeentitytype{
		Val:   v,
		Valid: valid,
	}
}

// UnmarshalJSON implements json.Unmarshaler.
func (e *NullAttributeentitytype) UnmarshalJSON(data []byte) error {
	if bytes.Equal(data, null.NullBytes) {
		e.Val = ""
		e.Valid = false
		return nil
	}

	if err := json.Unmarshal(data, &e.Val); err != nil {
		return err
	}

	e.Valid = true
	return nil
}

// MarshalJSON implements json.Marshaler.
func (e NullAttributeentitytype) MarshalJSON() ([]byte, error) {
	if !e.Valid {
		return null.NullBytes, nil
	}
	return json.Marshal(e.Val)
}

// MarshalText implements encoding.TextMarshaler.
func (e NullAttributeentitytype) MarshalText() ([]byte, error) {
	if !e.Valid {
		return []byte{}, nil
	}
	return []byte(e.Val), nil
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (e *NullAttributeentitytype) UnmarshalText(text []byte) error {
	if text == nil || len(text) == 0 {
		e.Valid = false
		return nil
	}

	e.Val = Attributeentitytype(text)
	e.Valid = true
	return nil
}

// SetValid changes this NullAttributeentitytype value and also sets it to be non-null.
func (e *NullAttributeentitytype) SetValid(v Attributeentitytype) {
	e.Val = v
	e.Valid = true
}

// Ptr returns a pointer to this NullAttributeentitytype value, or a nil pointer if this NullAttributeentitytype is null.
func (e NullAttributeentitytype) Ptr() *Attributeentitytype {
	if !e.Valid {
		return nil
	}
	return &e.Val
}

// IsZero returns true for null types.
func (e NullAttributeentitytype) IsZero() bool {
	return !e.Valid
}

// Scan implements the Scanner interface.
func (e *NullAttributeentitytype) Scan(value interface{}) error {
	if value == nil {
		e.Val, e.Valid = "", false
		return nil
	}
	e.Valid = true
	return convert.ConvertAssign((*string)(&e.Val), value)
}

// Value implements the driver Valuer interface.
func (e NullAttributeentitytype) Value() (driver.Value, error) {
	if !e.Valid {
		return nil, nil
	}
	return string(e.Val), nil
}

type Customereventtype string

// Enum values for Customereventtype
const (
	CustomereventtypeACCOUNT_CREATED          Customereventtype = "ACCOUNT_CREATED"
	CustomereventtypePASSWORD_RESET_LINK_SENT Customereventtype = "PASSWORD_RESET_LINK_SENT"
	CustomereventtypePASSWORD_RESET           Customereventtype = "PASSWORD_RESET"
	CustomereventtypePASSWORD_CHANGED         Customereventtype = "PASSWORD_CHANGED"
	CustomereventtypeEMAIL_CHANGED_REQUEST    Customereventtype = "EMAIL_CHANGED_REQUEST"
	CustomereventtypeEMAIL_CHANGED            Customereventtype = "EMAIL_CHANGED"
	CustomereventtypePLACED_ORDER             Customereventtype = "PLACED_ORDER"
	CustomereventtypeNOTE_ADDED_TO_ORDER      Customereventtype = "NOTE_ADDED_TO_ORDER"
	CustomereventtypeDIGITAL_LINK_DOWNLOADED  Customereventtype = "DIGITAL_LINK_DOWNLOADED"
	CustomereventtypeCUSTOMER_DELETED         Customereventtype = "CUSTOMER_DELETED"
	CustomereventtypeEMAIL_ASSIGNED           Customereventtype = "EMAIL_ASSIGNED"
	CustomereventtypeNAME_ASSIGNED            Customereventtype = "NAME_ASSIGNED"
	CustomereventtypeNOTE_ADDED               Customereventtype = "NOTE_ADDED"
	CustomereventtypeACCOUNT_ACTIVATED        Customereventtype = "ACCOUNT_ACTIVATED"
	CustomereventtypeACCOUNT_DEACTIVATED      Customereventtype = "ACCOUNT_DEACTIVATED"
)

func AllCustomereventtype() []Customereventtype {
	return []Customereventtype{
		CustomereventtypeACCOUNT_CREATED,
		CustomereventtypePASSWORD_RESET_LINK_SENT,
		CustomereventtypePASSWORD_RESET,
		CustomereventtypePASSWORD_CHANGED,
		CustomereventtypeEMAIL_CHANGED_REQUEST,
		CustomereventtypeEMAIL_CHANGED,
		CustomereventtypePLACED_ORDER,
		CustomereventtypeNOTE_ADDED_TO_ORDER,
		CustomereventtypeDIGITAL_LINK_DOWNLOADED,
		CustomereventtypeCUSTOMER_DELETED,
		CustomereventtypeEMAIL_ASSIGNED,
		CustomereventtypeNAME_ASSIGNED,
		CustomereventtypeNOTE_ADDED,
		CustomereventtypeACCOUNT_ACTIVATED,
		CustomereventtypeACCOUNT_DEACTIVATED,
	}
}

func (e Customereventtype) IsValid() error {
	switch e {
	case CustomereventtypeACCOUNT_CREATED, CustomereventtypePASSWORD_RESET_LINK_SENT, CustomereventtypePASSWORD_RESET, CustomereventtypePASSWORD_CHANGED, CustomereventtypeEMAIL_CHANGED_REQUEST, CustomereventtypeEMAIL_CHANGED, CustomereventtypePLACED_ORDER, CustomereventtypeNOTE_ADDED_TO_ORDER, CustomereventtypeDIGITAL_LINK_DOWNLOADED, CustomereventtypeCUSTOMER_DELETED, CustomereventtypeEMAIL_ASSIGNED, CustomereventtypeNAME_ASSIGNED, CustomereventtypeNOTE_ADDED, CustomereventtypeACCOUNT_ACTIVATED, CustomereventtypeACCOUNT_DEACTIVATED:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Customereventtype) String() string {
	return string(e)
}

type Contenttype string

// Enum values for Contenttype
const (
	ContenttypeFile Contenttype = "file"
)

func AllContenttype() []Contenttype {
	return []Contenttype{
		ContenttypeFile,
	}
}

func (e Contenttype) IsValid() error {
	switch e {
	case ContenttypeFile:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Contenttype) String() string {
	return string(e)
}

type Exporteventtype string

// Enum values for Exporteventtype
const (
	ExporteventtypeExportPending        Exporteventtype = "export_pending"
	ExporteventtypeExportSuccess        Exporteventtype = "export_success"
	ExporteventtypeExportFailed         Exporteventtype = "export_failed"
	ExporteventtypeExportDeleted        Exporteventtype = "export_deleted"
	ExporteventtypeExportedFileSent     Exporteventtype = "exported_file_sent"
	ExporteventtypeExportFailedInfoSent Exporteventtype = "export_failed_info_sent"
)

func AllExporteventtype() []Exporteventtype {
	return []Exporteventtype{
		ExporteventtypeExportPending,
		ExporteventtypeExportSuccess,
		ExporteventtypeExportFailed,
		ExporteventtypeExportDeleted,
		ExporteventtypeExportedFileSent,
		ExporteventtypeExportFailedInfoSent,
	}
}

func (e Exporteventtype) IsValid() error {
	switch e {
	case ExporteventtypeExportPending, ExporteventtypeExportSuccess, ExporteventtypeExportFailed, ExporteventtypeExportDeleted, ExporteventtypeExportedFileSent, ExporteventtypeExportFailedInfoSent:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Exporteventtype) String() string {
	return string(e)
}

type Fulfillmentstatus string

// Enum values for Fulfillmentstatus
const (
	FulfillmentstatusFulfilled           Fulfillmentstatus = "fulfilled"
	FulfillmentstatusRefunded            Fulfillmentstatus = "refunded"
	FulfillmentstatusReturned            Fulfillmentstatus = "returned"
	FulfillmentstatusRefundedAndReturned Fulfillmentstatus = "refunded_and_returned"
	FulfillmentstatusReplaced            Fulfillmentstatus = "replaced"
	FulfillmentstatusCanceled            Fulfillmentstatus = "canceled"
	FulfillmentstatusWaitingForApproval  Fulfillmentstatus = "waiting_for_approval"
)

func AllFulfillmentstatus() []Fulfillmentstatus {
	return []Fulfillmentstatus{
		FulfillmentstatusFulfilled,
		FulfillmentstatusRefunded,
		FulfillmentstatusReturned,
		FulfillmentstatusRefundedAndReturned,
		FulfillmentstatusReplaced,
		FulfillmentstatusCanceled,
		FulfillmentstatusWaitingForApproval,
	}
}

func (e Fulfillmentstatus) IsValid() error {
	switch e {
	case FulfillmentstatusFulfilled, FulfillmentstatusRefunded, FulfillmentstatusReturned, FulfillmentstatusRefundedAndReturned, FulfillmentstatusReplaced, FulfillmentstatusCanceled, FulfillmentstatusWaitingForApproval:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Fulfillmentstatus) String() string {
	return string(e)
}

type Giftcardeventtype string

// Enum values for Giftcardeventtype
const (
	GiftcardeventtypeIssued            Giftcardeventtype = "issued"
	GiftcardeventtypeBought            Giftcardeventtype = "bought"
	GiftcardeventtypeUpdated           Giftcardeventtype = "updated"
	GiftcardeventtypeActivated         Giftcardeventtype = "activated"
	GiftcardeventtypeDeactivated       Giftcardeventtype = "deactivated"
	GiftcardeventtypeBalanceReset      Giftcardeventtype = "balance_reset"
	GiftcardeventtypeExpiryDateUpdated Giftcardeventtype = "expiry_date_updated"
	GiftcardeventtypeTagUpdated        Giftcardeventtype = "tag_updated"
	GiftcardeventtypeSentToCustomer    Giftcardeventtype = "sent_to_customer"
	GiftcardeventtypeResent            Giftcardeventtype = "resent"
	GiftcardeventtypeNoteAdded         Giftcardeventtype = "note_added"
	GiftcardeventtypeUsedInOrder       Giftcardeventtype = "used_in_order"
)

func AllGiftcardeventtype() []Giftcardeventtype {
	return []Giftcardeventtype{
		GiftcardeventtypeIssued,
		GiftcardeventtypeBought,
		GiftcardeventtypeUpdated,
		GiftcardeventtypeActivated,
		GiftcardeventtypeDeactivated,
		GiftcardeventtypeBalanceReset,
		GiftcardeventtypeExpiryDateUpdated,
		GiftcardeventtypeTagUpdated,
		GiftcardeventtypeSentToCustomer,
		GiftcardeventtypeResent,
		GiftcardeventtypeNoteAdded,
		GiftcardeventtypeUsedInOrder,
	}
}

func (e Giftcardeventtype) IsValid() error {
	switch e {
	case GiftcardeventtypeIssued, GiftcardeventtypeBought, GiftcardeventtypeUpdated, GiftcardeventtypeActivated, GiftcardeventtypeDeactivated, GiftcardeventtypeBalanceReset, GiftcardeventtypeExpiryDateUpdated, GiftcardeventtypeTagUpdated, GiftcardeventtypeSentToCustomer, GiftcardeventtypeResent, GiftcardeventtypeNoteAdded, GiftcardeventtypeUsedInOrder:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Giftcardeventtype) String() string {
	return string(e)
}

type Currency string

// Enum values for Currency
const (
	CurrencyAED Currency = "AED"
	CurrencyAFN Currency = "AFN"
	CurrencyALL Currency = "ALL"
	CurrencyAMD Currency = "AMD"
	CurrencyANG Currency = "ANG"
	CurrencyAOA Currency = "AOA"
	CurrencyARS Currency = "ARS"
	CurrencyAUD Currency = "AUD"
	CurrencyAWG Currency = "AWG"
	CurrencyAZN Currency = "AZN"
	CurrencyBAM Currency = "BAM"
	CurrencyBBD Currency = "BBD"
	CurrencyBDT Currency = "BDT"
	CurrencyBGN Currency = "BGN"
	CurrencyBHD Currency = "BHD"
	CurrencyBIF Currency = "BIF"
	CurrencyBMD Currency = "BMD"
	CurrencyBND Currency = "BND"
	CurrencyBOB Currency = "BOB"
	CurrencyBRL Currency = "BRL"
	CurrencyBSD Currency = "BSD"
	CurrencyBTN Currency = "BTN"
	CurrencyBWP Currency = "BWP"
	CurrencyBYN Currency = "BYN"
	CurrencyBYR Currency = "BYR"
	CurrencyBZD Currency = "BZD"
	CurrencyCAD Currency = "CAD"
	CurrencyCDF Currency = "CDF"
	CurrencyCHF Currency = "CHF"
	CurrencyCLF Currency = "CLF"
	CurrencyCLP Currency = "CLP"
	CurrencyCNY Currency = "CNY"
	CurrencyCOP Currency = "COP"
	CurrencyCRC Currency = "CRC"
	CurrencyCUC Currency = "CUC"
	CurrencyCUP Currency = "CUP"
	CurrencyCVE Currency = "CVE"
	CurrencyCZK Currency = "CZK"
	CurrencyDJF Currency = "DJF"
	CurrencyDKK Currency = "DKK"
	CurrencyDOP Currency = "DOP"
	CurrencyDZD Currency = "DZD"
	CurrencyEEK Currency = "EEK"
	CurrencyEGP Currency = "EGP"
	CurrencyERN Currency = "ERN"
	CurrencyETB Currency = "ETB"
	CurrencyEUR Currency = "EUR"
	CurrencyFJD Currency = "FJD"
	CurrencyFKP Currency = "FKP"
	CurrencyGBP Currency = "GBP"
	CurrencyGEL Currency = "GEL"
	CurrencyGGP Currency = "GGP"
	CurrencyGHC Currency = "GHC"
	CurrencyGHS Currency = "GHS"
	CurrencyGIP Currency = "GIP"
	CurrencyGMD Currency = "GMD"
	CurrencyGNF Currency = "GNF"
	CurrencyGTQ Currency = "GTQ"
	CurrencyGYD Currency = "GYD"
	CurrencyHKD Currency = "HKD"
	CurrencyHNL Currency = "HNL"
	CurrencyHRK Currency = "HRK"
	CurrencyHTG Currency = "HTG"
	CurrencyHUF Currency = "HUF"
	CurrencyIDR Currency = "IDR"
	CurrencyILS Currency = "ILS"
	CurrencyIMP Currency = "IMP"
	CurrencyINR Currency = "INR"
	CurrencyIQD Currency = "IQD"
	CurrencyIRR Currency = "IRR"
	CurrencyISK Currency = "ISK"
	CurrencyJEP Currency = "JEP"
	CurrencyJMD Currency = "JMD"
	CurrencyJOD Currency = "JOD"
	CurrencyJPY Currency = "JPY"
	CurrencyKES Currency = "KES"
	CurrencyKGS Currency = "KGS"
	CurrencyKHR Currency = "KHR"
	CurrencyKMF Currency = "KMF"
	CurrencyKPW Currency = "KPW"
	CurrencyKRW Currency = "KRW"
	CurrencyKWD Currency = "KWD"
	CurrencyKYD Currency = "KYD"
	CurrencyKZT Currency = "KZT"
	CurrencyLAK Currency = "LAK"
	CurrencyLBP Currency = "LBP"
	CurrencyLKR Currency = "LKR"
	CurrencyLRD Currency = "LRD"
	CurrencyLSL Currency = "LSL"
	CurrencyLTL Currency = "LTL"
	CurrencyLVL Currency = "LVL"
	CurrencyLYD Currency = "LYD"
	CurrencyMAD Currency = "MAD"
	CurrencyMDL Currency = "MDL"
	CurrencyMGA Currency = "MGA"
	CurrencyMKD Currency = "MKD"
	CurrencyMMK Currency = "MMK"
	CurrencyMNT Currency = "MNT"
	CurrencyMOP Currency = "MOP"
	CurrencyMUR Currency = "MUR"
	CurrencyMVR Currency = "MVR"
	CurrencyMWK Currency = "MWK"
	CurrencyMXN Currency = "MXN"
	CurrencyMYR Currency = "MYR"
	CurrencyMZN Currency = "MZN"
	CurrencyNAD Currency = "NAD"
	CurrencyNGN Currency = "NGN"
	CurrencyNIO Currency = "NIO"
	CurrencyNOK Currency = "NOK"
	CurrencyNPR Currency = "NPR"
	CurrencyNZD Currency = "NZD"
	CurrencyOMR Currency = "OMR"
	CurrencyPAB Currency = "PAB"
	CurrencyPEN Currency = "PEN"
	CurrencyPGK Currency = "PGK"
	CurrencyPHP Currency = "PHP"
	CurrencyPKR Currency = "PKR"
	CurrencyPLN Currency = "PLN"
	CurrencyPYG Currency = "PYG"
	CurrencyQAR Currency = "QAR"
	CurrencyRON Currency = "RON"
	CurrencyRSD Currency = "RSD"
	CurrencyRUB Currency = "RUB"
	CurrencyRUR Currency = "RUR"
	CurrencyRWF Currency = "RWF"
	CurrencySAR Currency = "SAR"
	CurrencySBD Currency = "SBD"
	CurrencySCR Currency = "SCR"
	CurrencySDG Currency = "SDG"
	CurrencySEK Currency = "SEK"
	CurrencySGD Currency = "SGD"
	CurrencySHP Currency = "SHP"
	CurrencySKK Currency = "SKK"
	CurrencySLL Currency = "SLL"
	CurrencySOS Currency = "SOS"
	CurrencySRD Currency = "SRD"
	CurrencySSP Currency = "SSP"
	CurrencySTD Currency = "STD"
	CurrencySVC Currency = "SVC"
	CurrencySYP Currency = "SYP"
	CurrencySZL Currency = "SZL"
	CurrencyTHB Currency = "THB"
	CurrencyTJS Currency = "TJS"
	CurrencyTMT Currency = "TMT"
	CurrencyTND Currency = "TND"
	CurrencyTOP Currency = "TOP"
	CurrencyTRL Currency = "TRL"
	CurrencyTRY Currency = "TRY"
	CurrencyTTD Currency = "TTD"
	CurrencyTWD Currency = "TWD"
	CurrencyTZS Currency = "TZS"
	CurrencyUAH Currency = "UAH"
	CurrencyUGX Currency = "UGX"
	CurrencyUSD Currency = "USD"
	CurrencyUYU Currency = "UYU"
	CurrencyUZS Currency = "UZS"
	CurrencyVEF Currency = "VEF"
	CurrencyVES Currency = "VES"
	CurrencyVND Currency = "VND"
	CurrencyVUV Currency = "VUV"
	CurrencyWST Currency = "WST"
	CurrencyXAF Currency = "XAF"
	CurrencyXAG Currency = "XAG"
	CurrencyXAU Currency = "XAU"
	CurrencyXCD Currency = "XCD"
	CurrencyXDR Currency = "XDR"
	CurrencyXOF Currency = "XOF"
	CurrencyXPF Currency = "XPF"
	CurrencyYER Currency = "YER"
	CurrencyZAR Currency = "ZAR"
	CurrencyZMW Currency = "ZMW"
	CurrencyZWD Currency = "ZWD"
	CurrencyZWL Currency = "ZWL"
)

func AllCurrency() []Currency {
	return []Currency{
		CurrencyAED,
		CurrencyAFN,
		CurrencyALL,
		CurrencyAMD,
		CurrencyANG,
		CurrencyAOA,
		CurrencyARS,
		CurrencyAUD,
		CurrencyAWG,
		CurrencyAZN,
		CurrencyBAM,
		CurrencyBBD,
		CurrencyBDT,
		CurrencyBGN,
		CurrencyBHD,
		CurrencyBIF,
		CurrencyBMD,
		CurrencyBND,
		CurrencyBOB,
		CurrencyBRL,
		CurrencyBSD,
		CurrencyBTN,
		CurrencyBWP,
		CurrencyBYN,
		CurrencyBYR,
		CurrencyBZD,
		CurrencyCAD,
		CurrencyCDF,
		CurrencyCHF,
		CurrencyCLF,
		CurrencyCLP,
		CurrencyCNY,
		CurrencyCOP,
		CurrencyCRC,
		CurrencyCUC,
		CurrencyCUP,
		CurrencyCVE,
		CurrencyCZK,
		CurrencyDJF,
		CurrencyDKK,
		CurrencyDOP,
		CurrencyDZD,
		CurrencyEEK,
		CurrencyEGP,
		CurrencyERN,
		CurrencyETB,
		CurrencyEUR,
		CurrencyFJD,
		CurrencyFKP,
		CurrencyGBP,
		CurrencyGEL,
		CurrencyGGP,
		CurrencyGHC,
		CurrencyGHS,
		CurrencyGIP,
		CurrencyGMD,
		CurrencyGNF,
		CurrencyGTQ,
		CurrencyGYD,
		CurrencyHKD,
		CurrencyHNL,
		CurrencyHRK,
		CurrencyHTG,
		CurrencyHUF,
		CurrencyIDR,
		CurrencyILS,
		CurrencyIMP,
		CurrencyINR,
		CurrencyIQD,
		CurrencyIRR,
		CurrencyISK,
		CurrencyJEP,
		CurrencyJMD,
		CurrencyJOD,
		CurrencyJPY,
		CurrencyKES,
		CurrencyKGS,
		CurrencyKHR,
		CurrencyKMF,
		CurrencyKPW,
		CurrencyKRW,
		CurrencyKWD,
		CurrencyKYD,
		CurrencyKZT,
		CurrencyLAK,
		CurrencyLBP,
		CurrencyLKR,
		CurrencyLRD,
		CurrencyLSL,
		CurrencyLTL,
		CurrencyLVL,
		CurrencyLYD,
		CurrencyMAD,
		CurrencyMDL,
		CurrencyMGA,
		CurrencyMKD,
		CurrencyMMK,
		CurrencyMNT,
		CurrencyMOP,
		CurrencyMUR,
		CurrencyMVR,
		CurrencyMWK,
		CurrencyMXN,
		CurrencyMYR,
		CurrencyMZN,
		CurrencyNAD,
		CurrencyNGN,
		CurrencyNIO,
		CurrencyNOK,
		CurrencyNPR,
		CurrencyNZD,
		CurrencyOMR,
		CurrencyPAB,
		CurrencyPEN,
		CurrencyPGK,
		CurrencyPHP,
		CurrencyPKR,
		CurrencyPLN,
		CurrencyPYG,
		CurrencyQAR,
		CurrencyRON,
		CurrencyRSD,
		CurrencyRUB,
		CurrencyRUR,
		CurrencyRWF,
		CurrencySAR,
		CurrencySBD,
		CurrencySCR,
		CurrencySDG,
		CurrencySEK,
		CurrencySGD,
		CurrencySHP,
		CurrencySKK,
		CurrencySLL,
		CurrencySOS,
		CurrencySRD,
		CurrencySSP,
		CurrencySTD,
		CurrencySVC,
		CurrencySYP,
		CurrencySZL,
		CurrencyTHB,
		CurrencyTJS,
		CurrencyTMT,
		CurrencyTND,
		CurrencyTOP,
		CurrencyTRL,
		CurrencyTRY,
		CurrencyTTD,
		CurrencyTWD,
		CurrencyTZS,
		CurrencyUAH,
		CurrencyUGX,
		CurrencyUSD,
		CurrencyUYU,
		CurrencyUZS,
		CurrencyVEF,
		CurrencyVES,
		CurrencyVND,
		CurrencyVUV,
		CurrencyWST,
		CurrencyXAF,
		CurrencyXAG,
		CurrencyXAU,
		CurrencyXCD,
		CurrencyXDR,
		CurrencyXOF,
		CurrencyXPF,
		CurrencyYER,
		CurrencyZAR,
		CurrencyZMW,
		CurrencyZWD,
		CurrencyZWL,
	}
}

func (e Currency) IsValid() error {
	switch e {
	case CurrencyAED, CurrencyAFN, CurrencyALL, CurrencyAMD, CurrencyANG, CurrencyAOA, CurrencyARS, CurrencyAUD, CurrencyAWG, CurrencyAZN, CurrencyBAM, CurrencyBBD, CurrencyBDT, CurrencyBGN, CurrencyBHD, CurrencyBIF, CurrencyBMD, CurrencyBND, CurrencyBOB, CurrencyBRL, CurrencyBSD, CurrencyBTN, CurrencyBWP, CurrencyBYN, CurrencyBYR, CurrencyBZD, CurrencyCAD, CurrencyCDF, CurrencyCHF, CurrencyCLF, CurrencyCLP, CurrencyCNY, CurrencyCOP, CurrencyCRC, CurrencyCUC, CurrencyCUP, CurrencyCVE, CurrencyCZK, CurrencyDJF, CurrencyDKK, CurrencyDOP, CurrencyDZD, CurrencyEEK, CurrencyEGP, CurrencyERN, CurrencyETB, CurrencyEUR, CurrencyFJD, CurrencyFKP, CurrencyGBP, CurrencyGEL, CurrencyGGP, CurrencyGHC, CurrencyGHS, CurrencyGIP, CurrencyGMD, CurrencyGNF, CurrencyGTQ, CurrencyGYD, CurrencyHKD, CurrencyHNL, CurrencyHRK, CurrencyHTG, CurrencyHUF, CurrencyIDR, CurrencyILS, CurrencyIMP, CurrencyINR, CurrencyIQD, CurrencyIRR, CurrencyISK, CurrencyJEP, CurrencyJMD, CurrencyJOD, CurrencyJPY, CurrencyKES, CurrencyKGS, CurrencyKHR, CurrencyKMF, CurrencyKPW, CurrencyKRW, CurrencyKWD, CurrencyKYD, CurrencyKZT, CurrencyLAK, CurrencyLBP, CurrencyLKR, CurrencyLRD, CurrencyLSL, CurrencyLTL, CurrencyLVL, CurrencyLYD, CurrencyMAD, CurrencyMDL, CurrencyMGA, CurrencyMKD, CurrencyMMK, CurrencyMNT, CurrencyMOP, CurrencyMUR, CurrencyMVR, CurrencyMWK, CurrencyMXN, CurrencyMYR, CurrencyMZN, CurrencyNAD, CurrencyNGN, CurrencyNIO, CurrencyNOK, CurrencyNPR, CurrencyNZD, CurrencyOMR, CurrencyPAB, CurrencyPEN, CurrencyPGK, CurrencyPHP, CurrencyPKR, CurrencyPLN, CurrencyPYG, CurrencyQAR, CurrencyRON, CurrencyRSD, CurrencyRUB, CurrencyRUR, CurrencyRWF, CurrencySAR, CurrencySBD, CurrencySCR, CurrencySDG, CurrencySEK, CurrencySGD, CurrencySHP, CurrencySKK, CurrencySLL, CurrencySOS, CurrencySRD, CurrencySSP, CurrencySTD, CurrencySVC, CurrencySYP, CurrencySZL, CurrencyTHB, CurrencyTJS, CurrencyTMT, CurrencyTND, CurrencyTOP, CurrencyTRL, CurrencyTRY, CurrencyTTD, CurrencyTWD, CurrencyTZS, CurrencyUAH, CurrencyUGX, CurrencyUSD, CurrencyUYU, CurrencyUZS, CurrencyVEF, CurrencyVES, CurrencyVND, CurrencyVUV, CurrencyWST, CurrencyXAF, CurrencyXAG, CurrencyXAU, CurrencyXCD, CurrencyXDR, CurrencyXOF, CurrencyXPF, CurrencyYER, CurrencyZAR, CurrencyZMW, CurrencyZWD, CurrencyZWL:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Currency) String() string {
	return string(e)
}

type Invoiceeventtype string

// Enum values for Invoiceeventtype
const (
	InvoiceeventtypeRequested         Invoiceeventtype = "requested"
	InvoiceeventtypeRequestedDeletion Invoiceeventtype = "requested_deletion"
	InvoiceeventtypeCreated           Invoiceeventtype = "created"
	InvoiceeventtypeDeleted           Invoiceeventtype = "deleted"
	InvoiceeventtypeSent              Invoiceeventtype = "sent"
)

func AllInvoiceeventtype() []Invoiceeventtype {
	return []Invoiceeventtype{
		InvoiceeventtypeRequested,
		InvoiceeventtypeRequestedDeletion,
		InvoiceeventtypeCreated,
		InvoiceeventtypeDeleted,
		InvoiceeventtypeSent,
	}
}

func (e Invoiceeventtype) IsValid() error {
	switch e {
	case InvoiceeventtypeRequested, InvoiceeventtypeRequestedDeletion, InvoiceeventtypeCreated, InvoiceeventtypeDeleted, InvoiceeventtypeSent:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Invoiceeventtype) String() string {
	return string(e)
}

type Jobtype string

// Enum values for Jobtype
const (
	JobtypeDataRetention                Jobtype = "data_retention"
	JobtypeMessageExport                Jobtype = "message_export"
	JobtypeElasticsearchPostIndexing    Jobtype = "elasticsearch_post_indexing"
	JobtypeElasticsearchPostAggregation Jobtype = "elasticsearch_post_aggregation"
	JobtypeBlevePostIndexing            Jobtype = "bleve_post_indexing"
	JobtypeLdapSync                     Jobtype = "ldap_sync"
	JobtypeMigrations                   Jobtype = "migrations"
	JobtypePlugins                      Jobtype = "plugins"
	JobtypeExpiryNotify                 Jobtype = "expiry_notify"
	JobtypeProductNotices               Jobtype = "product_notices"
	JobtypeActiveUsers                  Jobtype = "active_users"
	JobtypeImportProcess                Jobtype = "import_process"
	JobtypeImportDelete                 Jobtype = "import_delete"
	JobtypeExportProcess                Jobtype = "export_process"
	JobtypeExportDelete                 Jobtype = "export_delete"
	JobtypeCloud                        Jobtype = "cloud"
	JobtypeResendInvitationEmail        Jobtype = "resend_invitation_email"
)

func AllJobtype() []Jobtype {
	return []Jobtype{
		JobtypeDataRetention,
		JobtypeMessageExport,
		JobtypeElasticsearchPostIndexing,
		JobtypeElasticsearchPostAggregation,
		JobtypeBlevePostIndexing,
		JobtypeLdapSync,
		JobtypeMigrations,
		JobtypePlugins,
		JobtypeExpiryNotify,
		JobtypeProductNotices,
		JobtypeActiveUsers,
		JobtypeImportProcess,
		JobtypeImportDelete,
		JobtypeExportProcess,
		JobtypeExportDelete,
		JobtypeCloud,
		JobtypeResendInvitationEmail,
	}
}

func (e Jobtype) IsValid() error {
	switch e {
	case JobtypeDataRetention, JobtypeMessageExport, JobtypeElasticsearchPostIndexing, JobtypeElasticsearchPostAggregation, JobtypeBlevePostIndexing, JobtypeLdapSync, JobtypeMigrations, JobtypePlugins, JobtypeExpiryNotify, JobtypeProductNotices, JobtypeActiveUsers, JobtypeImportProcess, JobtypeImportDelete, JobtypeExportProcess, JobtypeExportDelete, JobtypeCloud, JobtypeResendInvitationEmail:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Jobtype) String() string {
	return string(e)
}

type Jobstatus string

// Enum values for Jobstatus
const (
	JobstatusPending         Jobstatus = "pending"
	JobstatusInProgress      Jobstatus = "in_progress"
	JobstatusSuccess         Jobstatus = "success"
	JobstatusError           Jobstatus = "error"
	JobstatusCancelRequested Jobstatus = "cancel_requested"
	JobstatusCanceled        Jobstatus = "canceled"
	JobstatusWarning         Jobstatus = "warning"
)

func AllJobstatus() []Jobstatus {
	return []Jobstatus{
		JobstatusPending,
		JobstatusInProgress,
		JobstatusSuccess,
		JobstatusError,
		JobstatusCancelRequested,
		JobstatusCanceled,
		JobstatusWarning,
	}
}

func (e Jobstatus) IsValid() error {
	switch e {
	case JobstatusPending, JobstatusInProgress, JobstatusSuccess, JobstatusError, JobstatusCancelRequested, JobstatusCanceled, JobstatusWarning:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Jobstatus) String() string {
	return string(e)
}

type Orderdiscounttype string

// Enum values for Orderdiscounttype
const (
	OrderdiscounttypeVoucher Orderdiscounttype = "voucher"
	OrderdiscounttypeManual  Orderdiscounttype = "manual"
)

func AllOrderdiscounttype() []Orderdiscounttype {
	return []Orderdiscounttype{
		OrderdiscounttypeVoucher,
		OrderdiscounttypeManual,
	}
}

func (e Orderdiscounttype) IsValid() error {
	switch e {
	case OrderdiscounttypeVoucher, OrderdiscounttypeManual:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Orderdiscounttype) String() string {
	return string(e)
}

type Discountvaluetype string

// Enum values for Discountvaluetype
const (
	DiscountvaluetypeFixed      Discountvaluetype = "fixed"
	DiscountvaluetypePercentage Discountvaluetype = "percentage"
)

func AllDiscountvaluetype() []Discountvaluetype {
	return []Discountvaluetype{
		DiscountvaluetypeFixed,
		DiscountvaluetypePercentage,
	}
}

func (e Discountvaluetype) IsValid() error {
	switch e {
	case DiscountvaluetypeFixed, DiscountvaluetypePercentage:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Discountvaluetype) String() string {
	return string(e)
}

type Ordereventtype string

// Enum values for Ordereventtype
const (
	OrdereventtypeConfirmed                         Ordereventtype = "confirmed"
	OrdereventtypeDraftCreated                      Ordereventtype = "draft_created"
	OrdereventtypeDraftCreatedFromReplace           Ordereventtype = "draft_created_from_replace"
	OrdereventtypeAddedProducts                     Ordereventtype = "added_products"
	OrdereventtypeRemovedProducts                   Ordereventtype = "removed_products"
	OrdereventtypePlaced                            Ordereventtype = "placed"
	OrdereventtypePlacedFromDraft                   Ordereventtype = "placed_from_draft"
	OrdereventtypeOversoldItems                     Ordereventtype = "oversold_items"
	OrdereventtypeCanceled                          Ordereventtype = "canceled"
	OrdereventtypeOrderMarkedAsPaid                 Ordereventtype = "order_marked_as_paid"
	OrdereventtypeOrderFullyPaid                    Ordereventtype = "order_fully_paid"
	OrdereventtypeOrderReplacementCreated           Ordereventtype = "order_replacement_created"
	OrdereventtypeOrderDiscountAdded                Ordereventtype = "order_discount_added"
	OrdereventtypeOrderDiscountAutomaticallyUpdated Ordereventtype = "order_discount_automatically_updated"
	OrdereventtypeOrderDiscountUpdated              Ordereventtype = "order_discount_updated"
	OrdereventtypeOrderDiscountDeleted              Ordereventtype = "order_discount_deleted"
	OrdereventtypeOrderLineDiscountUpdated          Ordereventtype = "order_line_discount_updated"
	OrdereventtypeOrderLineDiscountRemoved          Ordereventtype = "order_line_discount_removed"
	OrdereventtypeOrderLineProductDeleted           Ordereventtype = "order_line_product_deleted"
	OrdereventtypeOrderLineVariantDeleted           Ordereventtype = "order_line_variant_deleted"
	OrdereventtypeUpdatedAddress                    Ordereventtype = "updated_address"
	OrdereventtypeEmailSent                         Ordereventtype = "email_sent"
	OrdereventtypePaymentAuthorized                 Ordereventtype = "payment_authorized"
	OrdereventtypePaymentCaptured                   Ordereventtype = "payment_captured"
	OrdereventtypePaymentRefunded                   Ordereventtype = "payment_refunded"
	OrdereventtypePaymentVoided                     Ordereventtype = "payment_voided"
	OrdereventtypePaymentFailed                     Ordereventtype = "payment_failed"
	OrdereventtypeExternalServiceNotification       Ordereventtype = "external_service_notification"
	OrdereventtypeInvoiceRequested                  Ordereventtype = "invoice_requested"
	OrdereventtypeInvoiceGenerated                  Ordereventtype = "invoice_generated"
	OrdereventtypeInvoiceUpdated                    Ordereventtype = "invoice_updated"
	OrdereventtypeInvoiceSent                       Ordereventtype = "invoice_sent"
	OrdereventtypeFulfillmentCanceled               Ordereventtype = "fulfillment_canceled"
	OrdereventtypeFulfillmentRestockedItems         Ordereventtype = "fulfillment_restocked_items"
	OrdereventtypeFulfillmentFulfilledItems         Ordereventtype = "fulfillment_fulfilled_items"
	OrdereventtypeFulfillmentRefunded               Ordereventtype = "fulfillment_refunded"
	OrdereventtypeFulfillmentReturned               Ordereventtype = "fulfillment_returned"
	OrdereventtypeFulfillmentReplaced               Ordereventtype = "fulfillment_replaced"
	OrdereventtypeFulfillmentAwaitsApproval         Ordereventtype = "fulfillment_awaits_approval"
	OrdereventtypeTrackingUpdated                   Ordereventtype = "tracking_updated"
	OrdereventtypeNoteAdded                         Ordereventtype = "note_added"
	OrdereventtypeOther                             Ordereventtype = "other"
)

func AllOrdereventtype() []Ordereventtype {
	return []Ordereventtype{
		OrdereventtypeConfirmed,
		OrdereventtypeDraftCreated,
		OrdereventtypeDraftCreatedFromReplace,
		OrdereventtypeAddedProducts,
		OrdereventtypeRemovedProducts,
		OrdereventtypePlaced,
		OrdereventtypePlacedFromDraft,
		OrdereventtypeOversoldItems,
		OrdereventtypeCanceled,
		OrdereventtypeOrderMarkedAsPaid,
		OrdereventtypeOrderFullyPaid,
		OrdereventtypeOrderReplacementCreated,
		OrdereventtypeOrderDiscountAdded,
		OrdereventtypeOrderDiscountAutomaticallyUpdated,
		OrdereventtypeOrderDiscountUpdated,
		OrdereventtypeOrderDiscountDeleted,
		OrdereventtypeOrderLineDiscountUpdated,
		OrdereventtypeOrderLineDiscountRemoved,
		OrdereventtypeOrderLineProductDeleted,
		OrdereventtypeOrderLineVariantDeleted,
		OrdereventtypeUpdatedAddress,
		OrdereventtypeEmailSent,
		OrdereventtypePaymentAuthorized,
		OrdereventtypePaymentCaptured,
		OrdereventtypePaymentRefunded,
		OrdereventtypePaymentVoided,
		OrdereventtypePaymentFailed,
		OrdereventtypeExternalServiceNotification,
		OrdereventtypeInvoiceRequested,
		OrdereventtypeInvoiceGenerated,
		OrdereventtypeInvoiceUpdated,
		OrdereventtypeInvoiceSent,
		OrdereventtypeFulfillmentCanceled,
		OrdereventtypeFulfillmentRestockedItems,
		OrdereventtypeFulfillmentFulfilledItems,
		OrdereventtypeFulfillmentRefunded,
		OrdereventtypeFulfillmentReturned,
		OrdereventtypeFulfillmentReplaced,
		OrdereventtypeFulfillmentAwaitsApproval,
		OrdereventtypeTrackingUpdated,
		OrdereventtypeNoteAdded,
		OrdereventtypeOther,
	}
}

func (e Ordereventtype) IsValid() error {
	switch e {
	case OrdereventtypeConfirmed, OrdereventtypeDraftCreated, OrdereventtypeDraftCreatedFromReplace, OrdereventtypeAddedProducts, OrdereventtypeRemovedProducts, OrdereventtypePlaced, OrdereventtypePlacedFromDraft, OrdereventtypeOversoldItems, OrdereventtypeCanceled, OrdereventtypeOrderMarkedAsPaid, OrdereventtypeOrderFullyPaid, OrdereventtypeOrderReplacementCreated, OrdereventtypeOrderDiscountAdded, OrdereventtypeOrderDiscountAutomaticallyUpdated, OrdereventtypeOrderDiscountUpdated, OrdereventtypeOrderDiscountDeleted, OrdereventtypeOrderLineDiscountUpdated, OrdereventtypeOrderLineDiscountRemoved, OrdereventtypeOrderLineProductDeleted, OrdereventtypeOrderLineVariantDeleted, OrdereventtypeUpdatedAddress, OrdereventtypeEmailSent, OrdereventtypePaymentAuthorized, OrdereventtypePaymentCaptured, OrdereventtypePaymentRefunded, OrdereventtypePaymentVoided, OrdereventtypePaymentFailed, OrdereventtypeExternalServiceNotification, OrdereventtypeInvoiceRequested, OrdereventtypeInvoiceGenerated, OrdereventtypeInvoiceUpdated, OrdereventtypeInvoiceSent, OrdereventtypeFulfillmentCanceled, OrdereventtypeFulfillmentRestockedItems, OrdereventtypeFulfillmentFulfilledItems, OrdereventtypeFulfillmentRefunded, OrdereventtypeFulfillmentReturned, OrdereventtypeFulfillmentReplaced, OrdereventtypeFulfillmentAwaitsApproval, OrdereventtypeTrackingUpdated, OrdereventtypeNoteAdded, OrdereventtypeOther:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Ordereventtype) String() string {
	return string(e)
}

type Orderstatus string

// Enum values for Orderstatus
const (
	OrderstatusDraft              Orderstatus = "draft"
	OrderstatusUnconfirmed        Orderstatus = "unconfirmed"
	OrderstatusUnfulfilled        Orderstatus = "unfulfilled"
	OrderstatusPartiallyFulfilled Orderstatus = "partially_fulfilled"
	OrderstatusFulfilled          Orderstatus = "fulfilled"
	OrderstatusPartiallyReturned  Orderstatus = "partially_returned"
	OrderstatusReturned           Orderstatus = "returned"
	OrderstatusCanceled           Orderstatus = "canceled"
)

func AllOrderstatus() []Orderstatus {
	return []Orderstatus{
		OrderstatusDraft,
		OrderstatusUnconfirmed,
		OrderstatusUnfulfilled,
		OrderstatusPartiallyFulfilled,
		OrderstatusFulfilled,
		OrderstatusPartiallyReturned,
		OrderstatusReturned,
		OrderstatusCanceled,
	}
}

func (e Orderstatus) IsValid() error {
	switch e {
	case OrderstatusDraft, OrderstatusUnconfirmed, OrderstatusUnfulfilled, OrderstatusPartiallyFulfilled, OrderstatusFulfilled, OrderstatusPartiallyReturned, OrderstatusReturned, OrderstatusCanceled:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Orderstatus) String() string {
	return string(e)
}

type Orderorigin string

// Enum values for Orderorigin
const (
	OrderoriginCheckout Orderorigin = "checkout"
	OrderoriginDraft    Orderorigin = "draft"
	OrderoriginReissue  Orderorigin = "reissue"
)

func AllOrderorigin() []Orderorigin {
	return []Orderorigin{
		OrderoriginCheckout,
		OrderoriginDraft,
		OrderoriginReissue,
	}
}

func (e Orderorigin) IsValid() error {
	switch e {
	case OrderoriginCheckout, OrderoriginDraft, OrderoriginReissue:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Orderorigin) String() string {
	return string(e)
}

type Paymentchargestatus string

// Enum values for Paymentchargestatus
const (
	PaymentchargestatusNotCharged        Paymentchargestatus = "not_charged"
	PaymentchargestatusPending           Paymentchargestatus = "pending"
	PaymentchargestatusPartiallyCharged  Paymentchargestatus = "partially_charged"
	PaymentchargestatusFullyCharged      Paymentchargestatus = "fully_charged"
	PaymentchargestatusPartiallyRefunded Paymentchargestatus = "partially_refunded"
	PaymentchargestatusFullyRefunded     Paymentchargestatus = "fully_refunded"
	PaymentchargestatusRefused           Paymentchargestatus = "refused"
	PaymentchargestatusCancelled         Paymentchargestatus = "cancelled"
)

func AllPaymentchargestatus() []Paymentchargestatus {
	return []Paymentchargestatus{
		PaymentchargestatusNotCharged,
		PaymentchargestatusPending,
		PaymentchargestatusPartiallyCharged,
		PaymentchargestatusFullyCharged,
		PaymentchargestatusPartiallyRefunded,
		PaymentchargestatusFullyRefunded,
		PaymentchargestatusRefused,
		PaymentchargestatusCancelled,
	}
}

func (e Paymentchargestatus) IsValid() error {
	switch e {
	case PaymentchargestatusNotCharged, PaymentchargestatusPending, PaymentchargestatusPartiallyCharged, PaymentchargestatusFullyCharged, PaymentchargestatusPartiallyRefunded, PaymentchargestatusFullyRefunded, PaymentchargestatusRefused, PaymentchargestatusCancelled:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Paymentchargestatus) String() string {
	return string(e)
}

type Storepaymentmethod string

// Enum values for Storepaymentmethod
const (
	StorepaymentmethodOnSession  Storepaymentmethod = "on_session"
	StorepaymentmethodOffSession Storepaymentmethod = "off_session"
	StorepaymentmethodNone       Storepaymentmethod = "none"
)

func AllStorepaymentmethod() []Storepaymentmethod {
	return []Storepaymentmethod{
		StorepaymentmethodOnSession,
		StorepaymentmethodOffSession,
		StorepaymentmethodNone,
	}
}

func (e Storepaymentmethod) IsValid() error {
	switch e {
	case StorepaymentmethodOnSession, StorepaymentmethodOffSession, StorepaymentmethodNone:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Storepaymentmethod) String() string {
	return string(e)
}

type Producttypekind string

// Enum values for Producttypekind
const (
	ProducttypekindNormal   Producttypekind = "normal"
	ProducttypekindGiftCard Producttypekind = "gift_card"
)

func AllProducttypekind() []Producttypekind {
	return []Producttypekind{
		ProducttypekindNormal,
		ProducttypekindGiftCard,
	}
}

func (e Producttypekind) IsValid() error {
	switch e {
	case ProducttypekindNormal, ProducttypekindGiftCard:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Producttypekind) String() string {
	return string(e)
}

// NullCurrency is a nullable Currency enum type. It supports SQL and JSON serialization.
type NullCurrency struct {
	Val   Currency
	Valid bool
}

// NullCurrencyFrom creates a new Currency that will never be blank.
func NullCurrencyFrom(v Currency) NullCurrency {
	return NewNullCurrency(v, true)
}

// NullCurrencyFromPtr creates a new NullCurrency that be null if s is nil.
func NullCurrencyFromPtr(v *Currency) NullCurrency {
	if v == nil {
		return NewNullCurrency("", false)
	}
	return NewNullCurrency(*v, true)
}

// NewNullCurrency creates a new NullCurrency
func NewNullCurrency(v Currency, valid bool) NullCurrency {
	return NullCurrency{
		Val:   v,
		Valid: valid,
	}
}

// UnmarshalJSON implements json.Unmarshaler.
func (e *NullCurrency) UnmarshalJSON(data []byte) error {
	if bytes.Equal(data, null.NullBytes) {
		e.Val = ""
		e.Valid = false
		return nil
	}

	if err := json.Unmarshal(data, &e.Val); err != nil {
		return err
	}

	e.Valid = true
	return nil
}

// MarshalJSON implements json.Marshaler.
func (e NullCurrency) MarshalJSON() ([]byte, error) {
	if !e.Valid {
		return null.NullBytes, nil
	}
	return json.Marshal(e.Val)
}

// MarshalText implements encoding.TextMarshaler.
func (e NullCurrency) MarshalText() ([]byte, error) {
	if !e.Valid {
		return []byte{}, nil
	}
	return []byte(e.Val), nil
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (e *NullCurrency) UnmarshalText(text []byte) error {
	if text == nil || len(text) == 0 {
		e.Valid = false
		return nil
	}

	e.Val = Currency(text)
	e.Valid = true
	return nil
}

// SetValid changes this NullCurrency value and also sets it to be non-null.
func (e *NullCurrency) SetValid(v Currency) {
	e.Val = v
	e.Valid = true
}

// Ptr returns a pointer to this NullCurrency value, or a nil pointer if this NullCurrency is null.
func (e NullCurrency) Ptr() *Currency {
	if !e.Valid {
		return nil
	}
	return &e.Val
}

// IsZero returns true for null types.
func (e NullCurrency) IsZero() bool {
	return !e.Valid
}

// Scan implements the Scanner interface.
func (e *NullCurrency) Scan(value interface{}) error {
	if value == nil {
		e.Val, e.Valid = "", false
		return nil
	}
	e.Valid = true
	return convert.ConvertAssign((*string)(&e.Val), value)
}

// Value implements the driver Valuer interface.
func (e NullCurrency) Value() (driver.Value, error) {
	if !e.Valid {
		return nil, nil
	}
	return string(e.Val), nil
}

type Transactionkind string

// Enum values for Transactionkind
const (
	TransactionkindExternal        Transactionkind = "external"
	TransactionkindAuth            Transactionkind = "auth"
	TransactionkindCapture         Transactionkind = "capture"
	TransactionkindCaptureFailed   Transactionkind = "capture_failed"
	TransactionkindActionToConfirm Transactionkind = "action_to_confirm"
	TransactionkindVoid            Transactionkind = "void"
	TransactionkindRefund          Transactionkind = "refund"
	TransactionkindRefundOngoing   Transactionkind = "refund_ongoing"
	TransactionkindRefundFailed    Transactionkind = "refund_failed"
	TransactionkindRefundReversed  Transactionkind = "refund_reversed"
	TransactionkindConfirm         Transactionkind = "confirm"
	TransactionkindCancel          Transactionkind = "cancel"
	TransactionkindPending         Transactionkind = "pending"
)

func AllTransactionkind() []Transactionkind {
	return []Transactionkind{
		TransactionkindExternal,
		TransactionkindAuth,
		TransactionkindCapture,
		TransactionkindCaptureFailed,
		TransactionkindActionToConfirm,
		TransactionkindVoid,
		TransactionkindRefund,
		TransactionkindRefundOngoing,
		TransactionkindRefundFailed,
		TransactionkindRefundReversed,
		TransactionkindConfirm,
		TransactionkindCancel,
		TransactionkindPending,
	}
}

func (e Transactionkind) IsValid() error {
	switch e {
	case TransactionkindExternal, TransactionkindAuth, TransactionkindCapture, TransactionkindCaptureFailed, TransactionkindActionToConfirm, TransactionkindVoid, TransactionkindRefund, TransactionkindRefundOngoing, TransactionkindRefundFailed, TransactionkindRefundReversed, TransactionkindConfirm, TransactionkindCancel, TransactionkindPending:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Transactionkind) String() string {
	return string(e)
}

type Uploadtype string

// Enum values for Uploadtype
const (
	UploadtypeAttachment Uploadtype = "attachment"
	UploadtypeImport     Uploadtype = "import"
)

func AllUploadtype() []Uploadtype {
	return []Uploadtype{
		UploadtypeAttachment,
		UploadtypeImport,
	}
}

func (e Uploadtype) IsValid() error {
	switch e {
	case UploadtypeAttachment, UploadtypeImport:
		return nil
	default:
		return errors.New("enum is not valid")
	}
}

func (e Uploadtype) String() string {
	return string(e)
}
