// Code generated by "make app-layers"
// DO NOT EDIT

package sub_app_iface

import (
	"github.com/sitename/sitename/model"
	"gorm.io/gorm"
)

// ChannelService contains methods for working with channels
type ChannelService interface {
	// ChannelByOption returns a channel that satisfies given options
	ChannelByOption(option *model.ChannelFilterOption) (*model.Channel, *model_helper.AppError)
	// ChannelsByOption returns a list of channels by given options
	ChannelsByOption(option *model.ChannelFilterOption) (model.Channels, *model_helper.AppError)
	// ValidateChannel check if a channel with given id is active
	ValidateChannel(channelID string) (*model.Channel, *model_helper.AppError)
	CleanChannel(channelID *string) (*model.Channel, *model_helper.AppError)
	DeleteChannels(transaction *gorm.DB, ids ...string) *model_helper.AppError
	GetDefaultChannel() (*model.Channel, *model_helper.AppError)
	GetDefaultChannelSlugOrGraphqlError() (string, *model_helper.AppError)
	UpsertChannel(transaction *gorm.DB, channel *model.Channel) (*model.Channel, *model_helper.AppError)
}
