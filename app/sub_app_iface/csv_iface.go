// Code generated by "make app-layers"
// DO NOT EDIT

package sub_app_iface

import (
	"github.com/Masterminds/squirrel"
	"github.com/sitename/sitename/api/gqlmodel"
	"github.com/sitename/sitename/model"
	"github.com/sitename/sitename/model/csv"
	"github.com/sitename/sitename/model/product_and_discount"
)

// CsvService contains methods for working with csv
type CsvService interface {
	// CommonCreateExportEvent tells store to insert given export event into database then returns the inserted export event
	CommonCreateExportEvent(exportEvent *csv.ExportEvent) (*csv.ExportEvent, *model.AppError)
	// CreateExportFile inserts given export file into database then returns it
	CreateExportFile(file *csv.ExportFile) (*csv.ExportFile, *model.AppError)
	// ExportEventsByOption returns a list of export events filtered using given options
	ExportEventsByOption(options *csv.ExportEventFilterOption) ([]*csv.ExportEvent, *model.AppError)
	// ExportFileById returns an export file found by given id
	ExportFileById(id string) (*csv.ExportFile, *model.AppError)
	// ExportProducts is called by product export job, taks needed arguments then exports products
	ExportProducts(input *gqlmodel.ExportProductsInput, delimeter string) *model.AppError
	// Get export fields, all headers and headers mapping.
	// Based on export_info returns exported fields, fields to headers mapping and
	// all headers.
	// Headers contains product, variant, attribute and warehouse headers.
	GetExportFieldsAndHeadersInfo(exportInfo gqlmodel.ExportInfoInput) ([]string, []string, []string, *model.AppError)
	// Get headers for exported attributes.
	// Headers are build from slug and contains information if it's a product or variant
	// attribute. Respectively for product: "slug-value (product attribute)"
	// and for variant: "slug-value (variant attribute)".
	GetAttributeHeaders(exportInfo gqlmodel.ExportInfoInput) ([]string, *model.AppError)
	// Get headers for exported channels.
	//
	// Headers are build from slug and exported field.
	//
	// Example:
	// - currency code data header: "slug-value (channel currency code)"
	// - published data header: "slug-value (channel visible)"
	// - publication date data header: "slug-value (channel publication date)"
	GetChannelsHeaders(exportInfo gqlmodel.ExportInfoInput) ([]string, *model.AppError)
	// Get headers for exported warehouses.
	// Headers are build from slug. Example: "slug-value (warehouse quantity)"
	GetWarehousesHeaders(exportInfo gqlmodel.ExportInfoInput) ([]string, *model.AppError)
	// GetDefaultExportPayload returns a map for mapping
	GetDefaultExportPayload(exportFile csv.ExportFile) (map[string]interface{}, *model.AppError)
	// GetProductsData Create data list of products and their variants with fields values.
	//
	// It return list with product and variant data which can be used as import to
	// csv writer and list of attribute and warehouse headers.
	GetProductsData(products product_and_discount.Products, exportFields []string, attributeIDs []string, warehouseIDs []string, channelIDs []string)
	ExportProductsInBatches(productQuery squirrel.SelectBuilder, exportInfo gqlmodel.ExportInfoInput, exportFields []string, headers []string, delimiter string, fileType string) *model.AppError
}
