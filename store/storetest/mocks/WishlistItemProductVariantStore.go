// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	wishlist "github.com/sitename/sitename/model/wishlist"
)

// WishlistItemProductVariantStore is an autogenerated mock type for the WishlistItemProductVariantStore type
type WishlistItemProductVariantStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *WishlistItemProductVariantStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// GetById provides a mock function with given fields: id
func (_m *WishlistItemProductVariantStore) GetById(id string) (*wishlist.WishlistItemProductVariant, error) {
	ret := _m.Called(id)

	var r0 *wishlist.WishlistItemProductVariant
	if rf, ok := ret.Get(0).(func(string) *wishlist.WishlistItemProductVariant); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wishlist.WishlistItemProductVariant)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: wishlistVariant
func (_m *WishlistItemProductVariantStore) Save(wishlistVariant *wishlist.WishlistItemProductVariant) (*wishlist.WishlistItemProductVariant, error) {
	ret := _m.Called(wishlistVariant)

	var r0 *wishlist.WishlistItemProductVariant
	if rf, ok := ret.Get(0).(func(*wishlist.WishlistItemProductVariant) *wishlist.WishlistItemProductVariant); ok {
		r0 = rf(wishlistVariant)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wishlist.WishlistItemProductVariant)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*wishlist.WishlistItemProductVariant) error); ok {
		r1 = rf(wishlistVariant)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
