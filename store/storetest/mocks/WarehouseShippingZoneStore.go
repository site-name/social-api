// Code generated by mockery v2.10.4. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	model "github.com/sitename/sitename/model"
	mock "github.com/stretchr/testify/mock"

	warehouse "github.com/sitename/sitename/model/warehouse"
)

// WarehouseShippingZoneStore is an autogenerated mock type for the WarehouseShippingZoneStore type
type WarehouseShippingZoneStore struct {
	mock.Mock
}

// ModelFields provides a mock function with given fields: prefix
func (_m *WarehouseShippingZoneStore) ModelFields(prefix string) model.StringArray {
	ret := _m.Called(prefix)

	var r0 model.StringArray
	if rf, ok := ret.Get(0).(func(string) model.StringArray); ok {
		r0 = rf(prefix)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.StringArray)
		}
	}

	return r0
}

// Save provides a mock function with given fields: warehouseShippingZone
func (_m *WarehouseShippingZoneStore) Save(warehouseShippingZone *warehouse.WarehouseShippingZone) (*warehouse.WarehouseShippingZone, error) {
	ret := _m.Called(warehouseShippingZone)

	var r0 *warehouse.WarehouseShippingZone
	if rf, ok := ret.Get(0).(func(*warehouse.WarehouseShippingZone) *warehouse.WarehouseShippingZone); ok {
		r0 = rf(warehouseShippingZone)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*warehouse.WarehouseShippingZone)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*warehouse.WarehouseShippingZone) error); ok {
		r1 = rf(warehouseShippingZone)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
