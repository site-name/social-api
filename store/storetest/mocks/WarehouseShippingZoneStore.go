// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	warehouse "github.com/sitename/sitename/model/warehouse"
)

// WarehouseShippingZoneStore is an autogenerated mock type for the WarehouseShippingZoneStore type
type WarehouseShippingZoneStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *WarehouseShippingZoneStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// ModelFields provides a mock function with given fields:
func (_m *WarehouseShippingZoneStore) ModelFields() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Save provides a mock function with given fields: warehouseShippingZone
func (_m *WarehouseShippingZoneStore) Save(warehouseShippingZone *warehouse.WarehouseShippingZone) (*warehouse.WarehouseShippingZone, error) {
	ret := _m.Called(warehouseShippingZone)

	var r0 *warehouse.WarehouseShippingZone
	if rf, ok := ret.Get(0).(func(*warehouse.WarehouseShippingZone) *warehouse.WarehouseShippingZone); ok {
		r0 = rf(warehouseShippingZone)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*warehouse.WarehouseShippingZone)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*warehouse.WarehouseShippingZone) error); ok {
		r1 = rf(warehouseShippingZone)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
