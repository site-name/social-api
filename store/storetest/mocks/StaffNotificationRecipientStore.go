// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	account "github.com/sitename/sitename/model/account"
	mock "github.com/stretchr/testify/mock"
)

// StaffNotificationRecipientStore is an autogenerated mock type for the StaffNotificationRecipientStore type
type StaffNotificationRecipientStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *StaffNotificationRecipientStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// Get provides a mock function with given fields: id
func (_m *StaffNotificationRecipientStore) Get(id string) (*account.StaffNotificationRecipient, error) {
	ret := _m.Called(id)

	var r0 *account.StaffNotificationRecipient
	if rf, ok := ret.Get(0).(func(string) *account.StaffNotificationRecipient); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.StaffNotificationRecipient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: notificationRecipient
func (_m *StaffNotificationRecipientStore) Save(notificationRecipient *account.StaffNotificationRecipient) (*account.StaffNotificationRecipient, error) {
	ret := _m.Called(notificationRecipient)

	var r0 *account.StaffNotificationRecipient
	if rf, ok := ret.Get(0).(func(*account.StaffNotificationRecipient) *account.StaffNotificationRecipient); ok {
		r0 = rf(notificationRecipient)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.StaffNotificationRecipient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*account.StaffNotificationRecipient) error); ok {
		r1 = rf(notificationRecipient)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
