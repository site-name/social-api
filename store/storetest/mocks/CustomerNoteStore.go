// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	account "github.com/sitename/sitename/model/account"
	mock "github.com/stretchr/testify/mock"
)

// CustomerNoteStore is an autogenerated mock type for the CustomerNoteStore type
type CustomerNoteStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *CustomerNoteStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// Get provides a mock function with given fields: id
func (_m *CustomerNoteStore) Get(id string) (*account.CustomerNote, error) {
	ret := _m.Called(id)

	var r0 *account.CustomerNote
	if rf, ok := ret.Get(0).(func(string) *account.CustomerNote); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.CustomerNote)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: note
func (_m *CustomerNoteStore) Save(note *account.CustomerNote) (*account.CustomerNote, error) {
	ret := _m.Called(note)

	var r0 *account.CustomerNote
	if rf, ok := ret.Get(0).(func(*account.CustomerNote) *account.CustomerNote); ok {
		r0 = rf(note)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.CustomerNote)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*account.CustomerNote) error); ok {
		r1 = rf(note)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
