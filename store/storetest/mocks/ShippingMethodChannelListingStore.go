// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	shipping "github.com/sitename/sitename/model/shipping"
	mock "github.com/stretchr/testify/mock"
)

// ShippingMethodChannelListingStore is an autogenerated mock type for the ShippingMethodChannelListingStore type
type ShippingMethodChannelListingStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *ShippingMethodChannelListingStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// FilterByOption provides a mock function with given fields: option
func (_m *ShippingMethodChannelListingStore) FilterByOption(option *shipping.ShippingMethodChannelListingFilterOption) ([]*shipping.ShippingMethodChannelListing, error) {
	ret := _m.Called(option)

	var r0 []*shipping.ShippingMethodChannelListing
	if rf, ok := ret.Get(0).(func(*shipping.ShippingMethodChannelListingFilterOption) []*shipping.ShippingMethodChannelListing); ok {
		r0 = rf(option)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*shipping.ShippingMethodChannelListing)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*shipping.ShippingMethodChannelListingFilterOption) error); ok {
		r1 = rf(option)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: listingID
func (_m *ShippingMethodChannelListingStore) Get(listingID string) (*shipping.ShippingMethodChannelListing, error) {
	ret := _m.Called(listingID)

	var r0 *shipping.ShippingMethodChannelListing
	if rf, ok := ret.Get(0).(func(string) *shipping.ShippingMethodChannelListing); ok {
		r0 = rf(listingID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shipping.ShippingMethodChannelListing)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(listingID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TableName provides a mock function with given fields: withField
func (_m *ShippingMethodChannelListingStore) TableName(withField string) string {
	ret := _m.Called(withField)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(withField)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Upsert provides a mock function with given fields: listing
func (_m *ShippingMethodChannelListingStore) Upsert(listing *shipping.ShippingMethodChannelListing) (*shipping.ShippingMethodChannelListing, error) {
	ret := _m.Called(listing)

	var r0 *shipping.ShippingMethodChannelListing
	if rf, ok := ret.Get(0).(func(*shipping.ShippingMethodChannelListing) *shipping.ShippingMethodChannelListing); ok {
		r0 = rf(listing)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shipping.ShippingMethodChannelListing)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*shipping.ShippingMethodChannelListing) error); ok {
		r1 = rf(listing)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
