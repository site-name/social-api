// Code generated by mockery v2.10.4. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	menu "github.com/sitename/sitename/model/menu"
	mock "github.com/stretchr/testify/mock"
)

// MenuStore is an autogenerated mock type for the MenuStore type
type MenuStore struct {
	mock.Mock
}

// GetByOptions provides a mock function with given fields: options
func (_m *MenuStore) GetByOptions(options *menu.MenuFilterOptions) (*menu.Menu, error) {
	ret := _m.Called(options)

	var r0 *menu.Menu
	if rf, ok := ret.Get(0).(func(*menu.MenuFilterOptions) *menu.Menu); ok {
		r0 = rf(options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*menu.Menu)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*menu.MenuFilterOptions) error); ok {
		r1 = rf(options)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0
func (_m *MenuStore) Save(_a0 *menu.Menu) (*menu.Menu, error) {
	ret := _m.Called(_a0)

	var r0 *menu.Menu
	if rf, ok := ret.Get(0).(func(*menu.Menu) *menu.Menu); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*menu.Menu)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*menu.Menu) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
