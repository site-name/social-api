// Code generated by mockery v2.10.4. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	product_and_discount "github.com/sitename/sitename/model/product_and_discount"
	mock "github.com/stretchr/testify/mock"
)

// CollectionProductStore is an autogenerated mock type for the CollectionProductStore type
type CollectionProductStore struct {
	mock.Mock
}

// FilterByOptions provides a mock function with given fields: options
func (_m *CollectionProductStore) FilterByOptions(options *product_and_discount.CollectionProductFilterOptions) ([]*product_and_discount.CollectionProduct, error) {
	ret := _m.Called(options)

	var r0 []*product_and_discount.CollectionProduct
	if rf, ok := ret.Get(0).(func(*product_and_discount.CollectionProductFilterOptions) []*product_and_discount.CollectionProduct); ok {
		r0 = rf(options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*product_and_discount.CollectionProduct)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*product_and_discount.CollectionProductFilterOptions) error); ok {
		r1 = rf(options)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
