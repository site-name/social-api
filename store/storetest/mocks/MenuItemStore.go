// Code generated by mockery v2.10.4. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	menu "github.com/sitename/sitename/model/menu"
	mock "github.com/stretchr/testify/mock"
)

// MenuItemStore is an autogenerated mock type for the MenuItemStore type
type MenuItemStore struct {
	mock.Mock
}

// GetByOptions provides a mock function with given fields: options
func (_m *MenuItemStore) GetByOptions(options *menu.MenuItemFilterOptions) (*menu.MenuItem, error) {
	ret := _m.Called(options)

	var r0 *menu.MenuItem
	if rf, ok := ret.Get(0).(func(*menu.MenuItemFilterOptions) *menu.MenuItem); ok {
		r0 = rf(options)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*menu.MenuItem)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*menu.MenuItemFilterOptions) error); ok {
		r1 = rf(options)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: menuItem
func (_m *MenuItemStore) Save(menuItem *menu.MenuItem) (*menu.MenuItem, error) {
	ret := _m.Called(menuItem)

	var r0 *menu.MenuItem
	if rf, ok := ret.Get(0).(func(*menu.MenuItem) *menu.MenuItem); ok {
		r0 = rf(menuItem)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*menu.MenuItem)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*menu.MenuItem) error); ok {
		r1 = rf(menuItem)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
