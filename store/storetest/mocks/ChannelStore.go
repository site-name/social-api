// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	channel "github.com/sitename/sitename/model/channel"
	mock "github.com/stretchr/testify/mock"
)

// ChannelStore is an autogenerated mock type for the ChannelStore type
type ChannelStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *ChannelStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// Get provides a mock function with given fields: id
func (_m *ChannelStore) Get(id string) (*channel.Channel, error) {
	ret := _m.Called(id)

	var r0 *channel.Channel
	if rf, ok := ret.Get(0).(func(string) *channel.Channel); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*channel.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBySlug provides a mock function with given fields: slug
func (_m *ChannelStore) GetBySlug(slug string) (*channel.Channel, error) {
	ret := _m.Called(slug)

	var r0 *channel.Channel
	if rf, ok := ret.Get(0).(func(string) *channel.Channel); ok {
		r0 = rf(slug)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*channel.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(slug)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetChannelsByIdsAndOrder provides a mock function with given fields: ids, order
func (_m *ChannelStore) GetChannelsByIdsAndOrder(ids []string, order string) ([]*channel.Channel, error) {
	ret := _m.Called(ids, order)

	var r0 []*channel.Channel
	if rf, ok := ret.Get(0).(func([]string, string) []*channel.Channel); ok {
		r0 = rf(ids, order)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*channel.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]string, string) error); ok {
		r1 = rf(ids, order)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRandomActiveChannel provides a mock function with given fields:
func (_m *ChannelStore) GetRandomActiveChannel() (*channel.Channel, error) {
	ret := _m.Called()

	var r0 *channel.Channel
	if rf, ok := ret.Get(0).(func() *channel.Channel); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*channel.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: ch
func (_m *ChannelStore) Save(ch *channel.Channel) (*channel.Channel, error) {
	ret := _m.Called(ch)

	var r0 *channel.Channel
	if rf, ok := ret.Get(0).(func(*channel.Channel) *channel.Channel); ok {
		r0 = rf(ch)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*channel.Channel)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*channel.Channel) error); ok {
		r1 = rf(ch)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
