// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	csv "github.com/sitename/sitename/model/csv"
	mock "github.com/stretchr/testify/mock"
)

// CsvExportFileStore is an autogenerated mock type for the CsvExportFileStore type
type CsvExportFileStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *CsvExportFileStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// Get provides a mock function with given fields: id
func (_m *CsvExportFileStore) Get(id string) (*csv.ExportFile, error) {
	ret := _m.Called(id)

	var r0 *csv.ExportFile
	if rf, ok := ret.Get(0).(func(string) *csv.ExportFile); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*csv.ExportFile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: file
func (_m *CsvExportFileStore) Save(file *csv.ExportFile) (*csv.ExportFile, error) {
	ret := _m.Called(file)

	var r0 *csv.ExportFile
	if rf, ok := ret.Get(0).(func(*csv.ExportFile) *csv.ExportFile); ok {
		r0 = rf(file)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*csv.ExportFile)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*csv.ExportFile) error); ok {
		r1 = rf(file)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
