// Code generated by mockery v2.10.4. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	account "github.com/sitename/sitename/model/account"
	mock "github.com/stretchr/testify/mock"

	model "github.com/sitename/sitename/model"
)

// CustomerEventStore is an autogenerated mock type for the CustomerEventStore type
type CustomerEventStore struct {
	mock.Mock
}

// Count provides a mock function with given fields:
func (_m *CustomerEventStore) Count() (int64, error) {
	ret := _m.Called()

	var r0 int64
	if rf, ok := ret.Get(0).(func() int64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: id
func (_m *CustomerEventStore) Get(id string) (*account.CustomerEvent, error) {
	ret := _m.Called(id)

	var r0 *account.CustomerEvent
	if rf, ok := ret.Get(0).(func(string) *account.CustomerEvent); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.CustomerEvent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetEventsByUserID provides a mock function with given fields: userID
func (_m *CustomerEventStore) GetEventsByUserID(userID string) ([]*account.CustomerEvent, error) {
	ret := _m.Called(userID)

	var r0 []*account.CustomerEvent
	if rf, ok := ret.Get(0).(func(string) []*account.CustomerEvent); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*account.CustomerEvent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModelFields provides a mock function with given fields: prefix
func (_m *CustomerEventStore) ModelFields(prefix string) model.StringArray {
	ret := _m.Called(prefix)

	var r0 model.StringArray
	if rf, ok := ret.Get(0).(func(string) model.StringArray); ok {
		r0 = rf(prefix)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.StringArray)
		}
	}

	return r0
}

// Save provides a mock function with given fields: customemrEvent
func (_m *CustomerEventStore) Save(customemrEvent *account.CustomerEvent) (*account.CustomerEvent, error) {
	ret := _m.Called(customemrEvent)

	var r0 *account.CustomerEvent
	if rf, ok := ret.Get(0).(func(*account.CustomerEvent) *account.CustomerEvent); ok {
		r0 = rf(customemrEvent)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*account.CustomerEvent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*account.CustomerEvent) error); ok {
		r1 = rf(customemrEvent)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
