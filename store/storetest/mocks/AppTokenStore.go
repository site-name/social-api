// Code generated by mockery v2.23.2. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	model "github.com/sitename/sitename/model"
	mock "github.com/stretchr/testify/mock"
)

// AppTokenStore is an autogenerated mock type for the AppTokenStore type
type AppTokenStore struct {
	mock.Mock
}

// Save provides a mock function with given fields: appToken
func (_m *AppTokenStore) Save(appToken *model.AppToken) (*model.AppToken, error) {
	ret := _m.Called(appToken)

	var r0 *model.AppToken
	var r1 error
	if rf, ok := ret.Get(0).(func(*model.AppToken) (*model.AppToken, error)); ok {
		return rf(appToken)
	}
	if rf, ok := ret.Get(0).(func(*model.AppToken) *model.AppToken); ok {
		r0 = rf(appToken)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.AppToken)
		}
	}

	if rf, ok := ret.Get(1).(func(*model.AppToken) error); ok {
		r1 = rf(appToken)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewAppTokenStore interface {
	mock.TestingT
	Cleanup(func())
}

// NewAppTokenStore creates a new instance of AppTokenStore. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAppTokenStore(t mockConstructorTestingTNewAppTokenStore) *AppTokenStore {
	mock := &AppTokenStore{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
