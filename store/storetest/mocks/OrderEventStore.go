// Code generated by mockery v1.0.0. DO NOT EDIT.

// Regenerate this file using `make store-mocks`.

package mocks

import (
	order "github.com/sitename/sitename/model/order"
	mock "github.com/stretchr/testify/mock"
)

// OrderEventStore is an autogenerated mock type for the OrderEventStore type
type OrderEventStore struct {
	mock.Mock
}

// CreateIndexesIfNotExists provides a mock function with given fields:
func (_m *OrderEventStore) CreateIndexesIfNotExists() {
	_m.Called()
}

// Get provides a mock function with given fields: orderEventID
func (_m *OrderEventStore) Get(orderEventID string) (*order.OrderEvent, error) {
	ret := _m.Called(orderEventID)

	var r0 *order.OrderEvent
	if rf, ok := ret.Get(0).(func(string) *order.OrderEvent); ok {
		r0 = rf(orderEventID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*order.OrderEvent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(orderEventID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: orderEvent
func (_m *OrderEventStore) Save(orderEvent *order.OrderEvent) (*order.OrderEvent, error) {
	ret := _m.Called(orderEvent)

	var r0 *order.OrderEvent
	if rf, ok := ret.Get(0).(func(*order.OrderEvent) *order.OrderEvent); ok {
		r0 = rf(orderEvent)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*order.OrderEvent)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*order.OrderEvent) error); ok {
		r1 = rf(orderEvent)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
