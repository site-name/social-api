extend type Mutation {
  orderLinesCreate(id: String!, input: [OrderLineCreateInput]!): OrderLinesCreate
  orderLineDelete(id: String!): OrderLineDelete
  orderLineUpdate(id: String!, input: OrderLineInput!): OrderLineUpdate
  orderDiscountAdd(input: OrderDiscountCommonInput!, orderId: String!): OrderDiscountAdd
  orderDiscountUpdate(discountId: String!, input: OrderDiscountCommonInput!): OrderDiscountUpdate
  orderDiscountDelete(discountId: String!): OrderDiscountDelete
  orderLineDiscountUpdate(input: OrderDiscountCommonInput!, orderLineId: String!): OrderLineDiscountUpdate
  orderLineDiscountRemove(orderLineId: String!): OrderLineDiscountRemove
}

type OrderLine  {
  id: String!
  productName: String!
  variantName: String!
  productSku: String
  ProductVariantId: String
  isShippingRequired: Boolean!
  quantity: Int!
  quantityFulfilled: Int!
  unitDiscountReason: String
  taxRate: Float!
  digitalContentUrl: DigitalContentUrl
  thumbnail(size: Int): Image
  unitPrice: TaxedMoney!
  undiscountedUnitPrice: TaxedMoney!
  unitDiscount: Money!
  unitDiscountValue: PositiveDecimal!
  totalPrice: TaxedMoney!
  variant: ProductVariant
  translatedProductName: String!
  translatedVariantName: String!
  allocations: [Allocation!]
  quantityToFulfill: Int!
  unitDiscountType: DiscountValueTypeEnum
}

input OrderLineCreateInput {
  quantity: Int!
  variantId: String!
}

type OrderLinesCreate {
  order: Order
  orderLines: [OrderLine!]
  errors: [OrderError!]!
}

type OrderLineDelete {
  order: Order
  orderLine: OrderLine
  errors: [OrderError!]!
}

input OrderLineInput {
  quantity: Int!
}

type OrderLineUpdate {
  order: Order
  errors: [OrderError!]!
  orderLine: OrderLine
}

input OrderDiscountCommonInput {
  valueType: DiscountValueTypeEnum!
  value: PositiveDecimal!
  reason: String
}

type OrderDiscountAdd {
  order: Order
  errors: [OrderError!]!
}

type OrderDiscountUpdate {
  order: Order
  errors: [OrderError!]!
}

type OrderDiscountDelete {
  order: Order
  errors: [OrderError!]!
}

type OrderLineDiscountUpdate {
  orderLine: OrderLine
  order: Order
  errors: [OrderError!]!
}

type OrderLineDiscountRemove {
  orderLine: OrderLine
  order: Order
  errors: [OrderError!]!
}

type Allocation  {
  id: String!
  quantity: Int!
  warehouse: Warehouse!
}
