extend type Mutation {
  customerCreate(input: UserCreateInput!): CustomerCreate
  customerUpdate(id: ID!, input: CustomerInput!): CustomerUpdate
  customerDelete(id: ID!): CustomerDelete
  customerBulkDelete(ids: [ID]!): CustomerBulkDelete
}

extend type Query {
  customers(filter: CustomerFilterInput, sortBy: UserSortingInput, before: String, after: String, first: Int, last: Int): UserCountableConnection
}

input UserCreateInput {
  defaultBillingAddress: AddressInput
  defaultShippingAddress: AddressInput
  firstName: String
  lastName: String
  email: String
  isActive: Boolean
  note: String
  languageCode: LanguageCodeEnum
  redirectUrl: String
  channel: String
}

type CustomerCreate {
  errors: [AccountError!]!
  user: User
}

input CustomerInput {
  defaultBillingAddress: AddressInput
  defaultShippingAddress: AddressInput
  firstName: String
  lastName: String
  email: String
  isActive: Boolean
  note: String
  languageCode: LanguageCodeEnum
}

type CustomerUpdate {
  errors: [AccountError!]!
  user: User
}

type CustomerDelete {
  errors: [AccountError!]!
  user: User
}

type CustomerBulkDelete {
  count: Int!
  errors: [AccountError!]!
}

input CustomerFilterInput {
  dateJoined: DateRangeInput
  numberOfOrders: IntRangeInput
  placedOrders: DateRangeInput
  search: String
  metadata: [MetadataInput]
}

input UserSortingInput {
  direction: OrderDirection!
  field: UserSortField!
}

type UserCountableConnection {
  pageInfo: PageInfo!
  edges: [UserCountableEdge!]!
  totalCount: Int
}

enum UserSortField {
  FIRST_NAME
  LAST_NAME
  EMAIL
  ORDER_COUNT
}

type UserCountableEdge {
  node: User!
  cursor: String!
}
