extend type Mutation {
  digitalContentCreate(input: DigitalContentUploadInput!, variantId: String!): DigitalContentCreate @hasRoleAny(roles: [shop_admin, shop_staff])
  digitalContentDelete(variantId: String!): DigitalContentDelete @hasRoleAny(roles: [shop_admin, shop_staff])
  digitalContentUpdate(input: DigitalContentInput!, variantId: String!): DigitalContentUpdate @hasRoleAny(roles: [shop_admin, shop_staff])
  digitalContentUrlCreate(input: DigitalContentUrlCreateInput!): DigitalContentUrlCreate @hasRoleAny(roles: [shop_admin, shop_staff])
}

extend type Query {
  digitalContent(id: String!): DigitalContent @hasRoleAny(roles: [shop_admin, shop_staff])
  digitalContents(before: String, after: String, first: Int, last: Int): DigitalContentCountableConnection @hasRoleAny(roles: [shop_admin, shop_staff])
}

type DigitalContent  {
  useDefaultSettings: Boolean!
  automaticFulfillment: Boolean!
  contentFile: String!
  maxDownloads: Int
  urlValidDays: Int
  urls: [DigitalContentUrl]!
  id: String!
  privateMetadata: [MetadataItem]!
  metadata: [MetadataItem]!
  productVariant: ProductVariant!
}

input DigitalContentUploadInput {
  useDefaultSettings: Boolean!
  maxDownloads: Int
  urlValidDays: Int
  automaticFulfillment: Boolean
  contentFile: Upload!
}

type DigitalContentCreate {
  variant: ProductVariant
  content: DigitalContent
  errors: [ProductError!]!
}

type DigitalContentDelete {
  variant: ProductVariant
  errors: [ProductError!]!
}

input DigitalContentInput {
  useDefaultSettings: Boolean!
  maxDownloads: Int
  urlValidDays: Int
  automaticFulfillment: Boolean
}

type DigitalContentUpdate {
  variant: ProductVariant
  content: DigitalContent
  errors: [ProductError!]!
}

input DigitalContentUrlCreateInput {
  content: String!
}

type DigitalContentUrlCreate {
  errors: [ProductError!]!
  digitalContentUrl: DigitalContentUrl
}

type DigitalContentCountableConnection {
  pageInfo: PageInfo!
  edges: [DigitalContentCountableEdge!]!
  totalCount: Int
}

type DigitalContentCountableEdge {
  node: DigitalContent!
  cursor: String!
}

type DigitalContentUrl  {
  content: DigitalContent!
  created: DateTime!
  downloadNum: Int!
  id: String!
  url: String
  token: String!
}
