extend type Mutation {
  voucherCreate(input: VoucherInput!): VoucherCreate
  voucherDelete(id: String!): VoucherDelete
  voucherBulkDelete(ids: [String]!): VoucherBulkDelete
  voucherUpdate(id: String!, input: VoucherInput!): VoucherUpdate
  voucherCataloguesAdd(id: String!, input: CatalogueInput!): VoucherAddCatalogues
  voucherCataloguesRemove(id: String!, input: CatalogueInput!): VoucherRemoveCatalogues
  voucherTranslate(id: String!, input: NameTranslationInput!, languageCode: LanguageCodeEnum!): VoucherTranslate
  voucherChannelListingUpdate(id: String!, input: VoucherChannelListingInput!): VoucherChannelListingUpdate
}

extend type Query {
  voucher(id: String!, channel: String): Voucher
  vouchers(filter: VoucherFilterInput, sortBy: VoucherSortingInput, query: String, channel: String, before: String, after: String, first: Int, last: Int): VoucherCountableConnection
}

type Voucher implements Node & ObjectWithMetadata {
  id: String!
  name: String
  type: VoucherTypeEnum!
  code: String!
  usageLimit: Int
  used: Int!
  startDate: DateTime!
  endDate: DateTime
  applyOncePerOrder: Boolean!
  applyOncePerCustomer: Boolean!
  discountValueType: DiscountValueTypeEnum!
  minCheckoutItemsQuantity: Int
  privateMetadata: [MetadataItem]!
  metadata: [MetadataItem]!
  categories(before: String, after: String, first: Int, last: Int): CategoryCountableConnection
  collections(before: String, after: String, first: Int, last: Int): CollectionCountableConnection
  products(before: String, after: String, first: Int, last: Int): ProductCountableConnection
  variants(before: String, after: String, first: Int, last: Int): ProductVariantCountableConnection
  countries: [CountryDisplay]
  translation(languageCode: LanguageCodeEnum!): VoucherTranslation
  discountValue: Float
  currency: String
  minSpent: Money
  channelListings: [VoucherChannelListing!]
}

input VoucherInput {
  type: VoucherTypeEnum
  name: String
  code: String
  startDate: DateTime
  endDate: DateTime
  discountValueType: DiscountValueTypeEnum
  products: [String]
  variants: [String]
  collections: [String]
  categories: [String]
  minCheckoutItemsQuantity: Int
  countries: [String]
  applyOncePerOrder: Boolean
  applyOncePerCustomer: Boolean
  usageLimit: Int
}

type VoucherCreate {
  errors: [DiscountError!]!
  voucher: Voucher
}

type VoucherDelete {
  errors: [DiscountError!]!
  voucher: Voucher
}

type VoucherBulkDelete {
  count: Int!
  errors: [DiscountError!]!
}

type VoucherUpdate {
  errors: [DiscountError!]!
  voucher: Voucher
}

type VoucherAddCatalogues {
  voucher: Voucher
  errors: [DiscountError!]!
}

type VoucherRemoveCatalogues {
  voucher: Voucher
  errors: [DiscountError!]!
}

type VoucherTranslate {
  errors: [TranslationError!]!
  voucher: Voucher
}

input VoucherChannelListingInput {
  addChannels: [VoucherChannelListingAddInput!]
  removeChannels: [String!]
}

type VoucherChannelListingUpdate {
  voucher: Voucher
  errors: [DiscountError!]!
}

input VoucherFilterInput {
  status: [DiscountStatusEnum]
  timesUsed: IntRangeInput
  discountType: [VoucherDiscountType]
  started: DateTimeRangeInput
  search: String
  metadata: [MetadataFilter]
}

enum VoucherSortField {
  CODE
  START_DATE
  END_DATE
  VALUE
  TYPE
  USAGE_LIMIT
  MINIMUM_SPENT_AMOUNT
}

input VoucherSortingInput {
  direction: OrderDirection!
  channel: String
  field: VoucherSortField!
}

type VoucherCountableConnection {
  pageInfo: PageInfo!
  edges: [VoucherCountableEdge!]!
  totalCount: Int
}

type VoucherCountableEdge {
  node: Voucher!
  cursor: String!
}

enum VoucherTypeEnum {
  SHIPPING
  ENTIRE_ORDER
  SPECIFIC_PRODUCT
}

type VoucherTranslation implements Node {
  id: String!
  name: String
  language: LanguageDisplay!
}

type VoucherChannelListing implements Node {
  id: String!
  channel: Channel!
  discountValue: Float!
  currency: String!
  minSpent: Money
}

type DiscountError {
  field: String
  message: String
  products: [String!]
  code: DiscountErrorCode!
  channels: [String!]
}

enum DiscountErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT
  DUPLICATED_INPUT_ITEM
}

input VoucherChannelListingAddInput {
  channelId: String!
  discountValue: PositiveDecimal
  minAmountSpent: PositiveDecimal
}

enum DiscountStatusEnum {
  ACTIVE
  EXPIRED
  SCHEDULED
}

enum VoucherDiscountType {
  FIXED
  PERCENTAGE
  SHIPPING
}
