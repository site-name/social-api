extend type Mutation {
  channelCreate(input: ChannelCreateInput!): ChannelCreate @hasRoles(roles: [shop_admin])
  channelUpdate(id: String!, input: ChannelUpdateInput!): ChannelUpdate @hasRoleAny(roles: [shop_admin, shop_staff])
  channelDelete(id: String!, input: ChannelDeleteInput): ChannelDelete @hasRoles(roles: [shop_admin])
  channelActivate(id: String!): ChannelActivate @hasRoles(roles: [shop_admin])
  channelDeactivate(id: String!): ChannelDeactivate @hasRoles(roles: [shop_admin])
}

extend type Query {
  channel(id: String!): Channel
  channels: [Channel]!
}

type Channel  {
  id: String!
  name: String!
  isActive: Boolean!
  slug: String!
  currencyCode: String!
  hasOrders: Boolean! @hasRoleAny(roles: [shop_admin, shop_staff])
  defaultCountry: CountryDisplay!
}

input ChannelCreateInput {
  isActive: Boolean
  name: String!
  slug: String!
  currencyCode: String!
  defaultCountry: CountryCode!
  addShippingZones: [String!]!
}

type ChannelCreate {
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelUpdateInput {
  isActive: Boolean
  name: String
  slug: String
  defaultCountry: CountryCode
  addShippingZones: [String!]!
  removeShippingZones: [String!]!
}

type ChannelUpdate {
  errors: [ChannelError!]!
  channel: Channel
}

input ChannelDeleteInput {
  channelId: String!
}

type ChannelDelete {
  errors: [ChannelError!]!
  channel: Channel
}

type ChannelActivate {
  channel: Channel
  errors: [ChannelError!]!
}

type ChannelDeactivate {
  channel: Channel
  errors: [ChannelError!]!
}

type ChannelError {
  field: String
  message: String
  code: ChannelErrorCode!
  shippingZones: [String!]!
}

enum ChannelErrorCode {
  ALREADY_EXISTS
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
  UNIQUE
  CHANNELS_CURRENCY_MUST_BE_THE_SAME
  CHANNEL_WITH_ORDERS
  DUPLICATED_INPUT_ITEM
}
