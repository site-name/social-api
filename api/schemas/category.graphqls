extend type Mutation {
  categoryCreate(input: CategoryInput!, parent: String): CategoryCreate @hasRoles(roles: [shop_admin])
  categoryDelete(id: String!): CategoryDelete @hasRoles(roles: [shop_admin])
  categoryBulkDelete(ids: [String!]!): CategoryBulkDelete @hasRoles(roles: [shop_admin])
  categoryUpdate(id: String!, input: CategoryInput!): CategoryUpdate @hasRoles(roles: [shop_admin])
  categoryTranslate(id: String!, input: TranslationInput!, languageCode: LanguageCodeEnum!): CategoryTranslate @hasRoleAny(roles: [shop_admin, shop_staff])
}

extend type Query {
  categories(filter: CategoryFilterInput, sortBy: CategorySortingInput!, level: Int, before: String, after: String, first: Int, last: Int): CategoryCountableConnection
  category(id: String, slug: String): Category
}

type Category  {
  id: String!
  seoTitle: String
  seoDescription: String
  name: String!
  description: JSONString!
  slug: String!
  parent: Category
  level: Int!
  privateMetadata: [MetadataItem]!
  metadata: [MetadataItem]!
  ancestors(before: String, after: String, first: Int, last: Int): CategoryCountableConnection
  products(channel: String, before: String, after: String, first: Int, last: Int): ProductCountableConnection
  children(before: String, after: String, first: Int, last: Int): CategoryCountableConnection
  backgroundImage(size: Int): Image
  translation(languageCode: LanguageCodeEnum!): CategoryTranslation
}

input CategoryInput {
  description: JSONString!
  name: String!
  slug: String
  seo: SeoInput
  backgroundImage: String
  backgroundImageAlt: String
}

type CategoryCreate {
  errors: [ProductError!]!
  category: Category
}

type CategoryDelete {
  errors: [ProductError!]!
  category: Category
}

type CategoryBulkDelete {
  count: Int!
  errors: [ProductError!]!
}

type CategoryUpdate {
  errors: [ProductError!]!
  category: Category
}

type CategoryTranslate {
  errors: [TranslationError!]!
  category: Category
}

input CategoryFilterInput {
  search: String
  # metadata: [MetadataInput]! // TODO: add support this field
  ids: [String!]!
}

input CategorySortingInput {
  direction: OrderDirection!
  # channel: String
  field: CategorySortField!
}

type CategoryCountableConnection {
  pageInfo: PageInfo!
  edges: [CategoryCountableEdge!]!
  totalCount: Int
}

type CategoryTranslation  {
  id: String!
  seoTitle: String
  seoDescription: String
  name: String
  description: JSONString!
  language: LanguageDisplay!
}

type CategoryCountableEdge {
  node: Category!
  cursor: String!
}
