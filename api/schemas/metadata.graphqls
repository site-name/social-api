extend type Mutation {
  deleteMetadata(id: String!, keys: [String!]!): DeleteMetadata
  deletePrivateMetadata(id: String!, keys: [String!]!): DeletePrivateMetadata
  updateMetadata(id: String!, input: [MetadataInput!]!): UpdateMetadata
  updatePrivateMetadata(id: String!, input: [MetadataInput!]!): UpdatePrivateMetadata
}

type DeleteMetadata {
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

type DeletePrivateMetadata {
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

input MetadataInput {
  key: String!
  value: String!
}

type UpdateMetadata {
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

type UpdatePrivateMetadata {
  errors: [MetadataError!]!
  item: ObjectWithMetadata
}

type MetadataError {
  field: String
  message: String
  code: MetadataErrorCode!
}

enum MetadataErrorCode {
  GRAPHQL_ERROR
  INVALID
  NOT_FOUND
  REQUIRED
}

interface ObjectWithMetadata {
  privateMetadata: [MetadataItem]!
  metadata: [MetadataItem]!
}

type MetadataItem {
  key: String!
  value: String!
}
