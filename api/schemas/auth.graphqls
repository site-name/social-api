extend type Mutation {
  # NOTE: tokenCreate mutation is borrowed from mattermost
  tokenCreate(input: TokenCreateInput!): CreateToken # tokenCreate(email: String!, password: String!): CreateToken
  tokenRefresh(csrfToken: String, refreshToken: String): RefreshToken
  tokenVerify(token: String!): VerifyToken
  tokensDeactivateAll: DeactivateAllUserTokens
  externalAuthenticationUrl(input: JSONString!, pluginId: String!): ExternalAuthenticationUrl
  externalObtainAccessTokens(input: JSONString!, pluginId: String!): ExternalObtainAccessTokens
  externalRefresh(input: JSONString!, pluginId: String!): ExternalRefresh
  externalLogout(input: JSONString!, pluginId: String!): ExternalLogout
  externalVerify(input: JSONString!, pluginId: String!): ExternalVerify
  requestPasswordReset(channel: String, email: String!, redirectUrl: String!): RequestPasswordReset
  confirmAccount(email: String!, token: String!): ConfirmAccount
  setPassword(email: String!, password: String!, token: String!): SetPassword
  passwordChange(newPassword: String!, oldPassword: String!): PasswordChange @authenticated
  # NOTE: channel must be channel id
  requestEmailChange(channel: String!, newEmail: String!, password: String!, redirectUrl: String!): RequestEmailChange @authenticated
  confirmEmailChange(channel: String!, token: String!): ConfirmEmailChange @authenticated
}

# This input type idea is borrowed from Mattermost
input TokenCreateInput {
  id: String!
  loginId: String!
  password: String!
  token: String!
  deviceId: String!
  ldapOnly: String!
}

type CreateToken {
  token: String
  refreshToken: String
  csrfToken: String
  user: User
  # errors: [AccountError!]!
}

type RefreshToken {
  token: String
  user: User
  # errors: [AccountError!]!
}

type VerifyToken {
  user: User
  isValid: Boolean!
  payload: JSONString!
  # errors: [AccountError!]!
}

type DeactivateAllUserTokens {
  ok: Boolean! # errors: [AccountError!]!
}

type ExternalAuthenticationUrl {
  authenticationData: JSONString!
  # errors: [AccountError!]!
}

type ExternalObtainAccessTokens {
  token: String
  refreshToken: String
  csrfToken: String
  user: User
  # errors: [AccountError!]!
}

type ExternalRefresh {
  token: String
  refreshToken: String
  csrfToken: String
  user: User
  # errors: [AccountError!]!
}

type ExternalLogout {
  logoutData: JSONString!
  # errors: [AccountError!]!
}

type ExternalVerify {
  user: User
  isValid: Boolean!
  verifyData: JSONString!
  # errors: [AccountError!]!
}

type RequestPasswordReset {
  ok: Boolean! # errors: [AccountError!]!
}

type ConfirmAccount {
  user: User
  # errors: [AccountError!]!
}

type SetPassword {
  token: String
  refreshToken: String
  csrfToken: String
  user: User
  # errors: [AccountError!]!
}

type PasswordChange {
  user: User
  # errors: [AccountError!]!
}

type RequestEmailChange {
  user: User
  # errors: [AccountError!]!
}

type ConfirmEmailChange {
  user: User
  # errors: [AccountError!]!
}
