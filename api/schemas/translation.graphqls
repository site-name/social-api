extend type Mutation {
  translations(kind: TranslatableKinds!, before: String, after: String, first: Int, last: Int): TranslatableItemConnection
  translation(id: String!, kind: TranslatableKinds!): TranslatableItem
}

enum TranslatableKinds {
  ATTRIBUTE
  ATTRIBUTE_VALUE
  CATEGORY
  COLLECTION
  MENU_ITEM
  PAGE
  PRODUCT
  SALE
  SHIPPING_METHOD
  VARIANT
  VOUCHER
}

type TranslatableItemConnection {
  pageInfo: PageInfo!
  edges: [TranslatableItemEdge!]!
  totalCount: Int
}

type TranslatableItemEdge {
  node: TranslatableItem!
  cursor: String!
}

union TranslatableItem = 
ProductTranslatableContent | 
CollectionTranslatableContent | 
CategoryTranslatableContent | 
AttributeTranslatableContent | 
AttributeValueTranslatableContent | 
ProductVariantTranslatableContent | 
PageTranslatableContent | 
ShippingMethodTranslatableContent | 
SaleTranslatableContent | 
VoucherTranslatableContent | 
MenuItemTranslatableContent

type ProductTranslatableContent  {
  id: String!
  seoTitle: String
  seoDescription: String
  name: String!
  description: JSONString
  translation(languageCode: LanguageCodeEnum!): ProductTranslation
  # product: Product
}

type CollectionTranslatableContent  {
  id: String!
  seoTitle: String
  seoDescription: String
  name: String!
  description: JSONString
  translation(languageCode: LanguageCodeEnum!): CollectionTranslation
  # collection: Collection
}

type CategoryTranslatableContent  {
  id: String!
  seoTitle: String
  seoDescription: String
  name: String!
  description: JSONString
  translation(languageCode: LanguageCodeEnum!): CategoryTranslation
  # category: Category
}

type AttributeTranslatableContent  {
  id: String!
  name: String!
  translation(languageCode: LanguageCodeEnum!): AttributeTranslation
  # attribute: Attribute
}

type AttributeValueTranslatableContent  {
  id: String!
  name: String!
  richText: JSONString
  translation(languageCode: LanguageCodeEnum!): AttributeValueTranslation
  # attributeValue: AttributeValue
}

type ProductVariantTranslatableContent  {
  id: String!
  name: String!
  translation(languageCode: LanguageCodeEnum!): ProductVariantTranslation
  # productVariant: ProductVariant
  attributeValues: [AttributeValueTranslatableContent!]!
}

type PageTranslatableContent  {
  id: String!
  seoTitle: String
  seoDescription: String
  title: String!
  content: JSONString
  translation(languageCode: LanguageCodeEnum!): PageTranslation
  # page: Page
}

type ShippingMethodTranslatableContent  {
  id: String!
  name: String!
  description: JSONString
  translation(languageCode: LanguageCodeEnum!): ShippingMethodTranslation
  # shippingMethod: ShippingMethod
}

type SaleTranslatableContent  {
  id: String!
  name: String!
  translation(languageCode: LanguageCodeEnum!): SaleTranslation
  # sale: Sale
}

type VoucherTranslatableContent  {
  id: String!
  name: String
  translation(languageCode: LanguageCodeEnum!): VoucherTranslation
  # voucher: Voucher
}

type MenuItemTranslatableContent  {
  id: String!
  name: String!
  translation(languageCode: LanguageCodeEnum!): MenuItemTranslation
  # menuItem: MenuItem
}

type TranslationError {
  field: String
  message: String
  code: TranslationErrorCode!
}

enum TranslationErrorCode {
  GRAPHQL_ERROR
  NOT_FOUND
  REQUIRED
}
